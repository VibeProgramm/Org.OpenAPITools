/*
 * Работа с товарами
 *
 * Работа с товарами включает в себя:   1. [Создание](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov) и [редактирование](/openapi/work-with-products#tag/Kartochki-tovarov) карточек товаров: в том числе, получение [категорий, предметов и характеристик товаров](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki) и загрузку [медиафайлов](/openapi/work-with-products#tag/Mediafajly).   2. Настройку [ярлыков](/openapi/work-with-products#tag/Yarlyki) для удобного поиска товаров.   3. Установку [цен и скидок](/openapi/work-with-products#tag/Ceny-i-skidki).   4. Управление [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca) и [складами](/openapi/work-with-products#tag/Sklady-prodavca), если вы работаете по модели продаж со склада продавца. 
 *
 * The version of the OpenAPI document: products
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Детализация необработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах и ошибках в товарах из загрузки в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2BufferGoodsTaskGet200Response</returns>
        ApiV2BufferGoodsTaskGet200Response ApiV2BufferGoodsTaskGet(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0);

        /// <summary>
        /// Детализация необработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах и ошибках в товарах из загрузки в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2BufferGoodsTaskGet200Response</returns>
        ApiResponse<ApiV2BufferGoodsTaskGet200Response> ApiV2BufferGoodsTaskGetWithHttpInfo(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0);
        /// <summary>
        /// Состояние необработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию про загрузку скидок в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2BufferTasksGet200Response</returns>
        ApiV2BufferTasksGet200Response ApiV2BufferTasksGet(int uploadID, int operationIndex = 0);

        /// <summary>
        /// Состояние необработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию про загрузку скидок в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2BufferTasksGet200Response</returns>
        ApiResponse<ApiV2BufferTasksGet200Response> ApiV2BufferTasksGetWithHttpInfo(int uploadID, int operationIndex = 0);
        /// <summary>
        /// Детализация обработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах и об ошибках в товарах в обработанной загрузке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2HistoryGoodsTaskGet200Response</returns>
        ApiV2HistoryGoodsTaskGet200Response ApiV2HistoryGoodsTaskGet(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0);

        /// <summary>
        /// Детализация обработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах и об ошибках в товарах в обработанной загрузке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2HistoryGoodsTaskGet200Response</returns>
        ApiResponse<ApiV2HistoryGoodsTaskGet200Response> ApiV2HistoryGoodsTaskGetWithHttpInfo(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0);
        /// <summary>
        /// Состояние обработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию об обработанной загрузке цен и скидок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2HistoryTasksGet200Response</returns>
        ApiV2HistoryTasksGet200Response ApiV2HistoryTasksGet(int uploadID, int operationIndex = 0);

        /// <summary>
        /// Состояние обработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию об обработанной загрузке цен и скидок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2HistoryTasksGet200Response</returns>
        ApiResponse<ApiV2HistoryTasksGet200Response> ApiV2HistoryTasksGetWithHttpInfo(int uploadID, int operationIndex = 0);
        /// <summary>
        /// Получить товары
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товаре по его артикулу. &lt;br&gt;&lt;br&gt; Чтобы получить информацию обо всех товарах продавца, оставьте артикул пустым. Чтобы получить информацию о размерах товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="filterNmID">Артикул WB, по которому искать товар (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2ListGoodsFilterGet200Response</returns>
        ApiV2ListGoodsFilterGet200Response ApiV2ListGoodsFilterGet(int limit, int? offset = default(int?), int? filterNmID = default(int?), int operationIndex = 0);

        /// <summary>
        /// Получить товары
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товаре по его артикулу. &lt;br&gt;&lt;br&gt; Чтобы получить информацию обо всех товарах продавца, оставьте артикул пустым. Чтобы получить информацию о размерах товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="filterNmID">Артикул WB, по которому искать товар (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2ListGoodsFilterGet200Response</returns>
        ApiResponse<ApiV2ListGoodsFilterGet200Response> ApiV2ListGoodsFilterGetWithHttpInfo(int limit, int? offset = default(int?), int? filterNmID = default(int?), int operationIndex = 0);
        /// <summary>
        /// Получить размеры товара
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию обо всех размерах одного товара. &lt;br&gt;&lt;br&gt; Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для таких товаров &#x60;editableSizePrice: true&#x60;.  &lt;br&gt;&lt;br&gt; Чтобы получить информацию о самом товаре, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1filter/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="nmID">Артикул WB</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2ListGoodsSizeNmGet200Response</returns>
        ApiV2ListGoodsSizeNmGet200Response ApiV2ListGoodsSizeNmGet(int limit, int nmID, int? offset = default(int?), int operationIndex = 0);

        /// <summary>
        /// Получить размеры товара
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию обо всех размерах одного товара. &lt;br&gt;&lt;br&gt; Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для таких товаров &#x60;editableSizePrice: true&#x60;.  &lt;br&gt;&lt;br&gt; Чтобы получить информацию о самом товаре, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1filter/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="nmID">Артикул WB</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2ListGoodsSizeNmGet200Response</returns>
        ApiResponse<ApiV2ListGoodsSizeNmGet200Response> ApiV2ListGoodsSizeNmGetWithHttpInfo(int limit, int nmID, int? offset = default(int?), int operationIndex = 0);
        /// <summary>
        /// Получить товары в карантине
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах в карантине. &lt;br&gt;&lt;br&gt; Если новая цена товара со скидкой будет минимум в 3 раза меньше старой, товар попадёт [в карантин](https://seller.wildberries.ru/discount-and-prices/quarantine) и будет продаваться по старой цене. Ошибка об этом будет в ответах методов [состояний загрузок](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get). &lt;br&gt;&lt;br&gt; Вы можете изменить цену или скидку с помощью API либо вывести товар из карантина [в личном кабинете](https://seller.wildberries.ru/discount-and-prices/quarantine). &lt;br&gt;&lt;br&gt; Для товаров с [поразмерной установкой цен](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post) карантин не применяется.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2QuarantineGoodsGet200Response</returns>
        ApiV2QuarantineGoodsGet200Response ApiV2QuarantineGoodsGet(int limit, int? offset = default(int?), int operationIndex = 0);

        /// <summary>
        /// Получить товары в карантине
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах в карантине. &lt;br&gt;&lt;br&gt; Если новая цена товара со скидкой будет минимум в 3 раза меньше старой, товар попадёт [в карантин](https://seller.wildberries.ru/discount-and-prices/quarantine) и будет продаваться по старой цене. Ошибка об этом будет в ответах методов [состояний загрузок](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get). &lt;br&gt;&lt;br&gt; Вы можете изменить цену или скидку с помощью API либо вывести товар из карантина [в личном кабинете](https://seller.wildberries.ru/discount-and-prices/quarantine). &lt;br&gt;&lt;br&gt; Для товаров с [поразмерной установкой цен](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post) карантин не применяется.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2QuarantineGoodsGet200Response</returns>
        ApiResponse<ApiV2QuarantineGoodsGet200Response> ApiV2QuarantineGoodsGetWithHttpInfo(int limit, int? offset = default(int?), int operationIndex = 0);
        /// <summary>
        /// Установить скидки WB Клуба
        /// </summary>
        /// <remarks>
        /// Устанавливает скидки для товаров в рамках подписки [WB Клуб](https://seller.wildberries.ru/help-center/article/A-337).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskClubDiscountPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TaskCreated</returns>
        TaskCreated ApiV2UploadTaskClubDiscountPost(ApiV2UploadTaskClubDiscountPostRequest apiV2UploadTaskClubDiscountPostRequest, int operationIndex = 0);

        /// <summary>
        /// Установить скидки WB Клуба
        /// </summary>
        /// <remarks>
        /// Устанавливает скидки для товаров в рамках подписки [WB Клуб](https://seller.wildberries.ru/help-center/article/A-337).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskClubDiscountPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TaskCreated</returns>
        ApiResponse<TaskCreated> ApiV2UploadTaskClubDiscountPostWithHttpInfo(ApiV2UploadTaskClubDiscountPostRequest apiV2UploadTaskClubDiscountPostRequest, int operationIndex = 0);
        /// <summary>
        /// Установить цены и скидки
        /// </summary>
        /// <remarks>
        /// Метод устанавливает цены и скидки для товаров.  &lt;br&gt;&lt;br&gt; Чтобы установить цены и скидки для размеров товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TaskCreated</returns>
        TaskCreated ApiV2UploadTaskPost(ApiV2UploadTaskPostRequest apiV2UploadTaskPostRequest, int operationIndex = 0);

        /// <summary>
        /// Установить цены и скидки
        /// </summary>
        /// <remarks>
        /// Метод устанавливает цены и скидки для товаров.  &lt;br&gt;&lt;br&gt; Чтобы установить цены и скидки для размеров товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TaskCreated</returns>
        ApiResponse<TaskCreated> ApiV2UploadTaskPostWithHttpInfo(ApiV2UploadTaskPostRequest apiV2UploadTaskPostRequest, int operationIndex = 0);
        /// <summary>
        /// Установить цены для размеров
        /// </summary>
        /// <remarks>
        /// Метод устанавливает цены отдельно для размеров товаров.  Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для [таких товаров](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get) &#x60;editableSizePrice: true&#x60;.  Чтобы установить цены и скидки для самих товаров, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskSizePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TaskCreated</returns>
        TaskCreated ApiV2UploadTaskSizePost(ApiV2UploadTaskSizePostRequest apiV2UploadTaskSizePostRequest, int operationIndex = 0);

        /// <summary>
        /// Установить цены для размеров
        /// </summary>
        /// <remarks>
        /// Метод устанавливает цены отдельно для размеров товаров.  Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для [таких товаров](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get) &#x60;editableSizePrice: true&#x60;.  Чтобы установить цены и скидки для самих товаров, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskSizePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TaskCreated</returns>
        ApiResponse<TaskCreated> ApiV2UploadTaskSizePostWithHttpInfo(ApiV2UploadTaskSizePostRequest apiV2UploadTaskSizePostRequest, int operationIndex = 0);
        /// <summary>
        /// Получить список складов WB
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список всех складов WB для привязки к складам продавца. Предназначен для определения складов WB, чтобы сдавать готовые заказы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Office&gt;</returns>
        List<Office> ApiV3OfficesGet(int operationIndex = 0);

        /// <summary>
        /// Получить список складов WB
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список всех складов WB для привязки к складам продавца. Предназначен для определения складов WB, чтобы сдавать готовые заказы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Office&gt;</returns>
        ApiResponse<List<Office>> ApiV3OfficesGetWithHttpInfo(int operationIndex = 0);
        /// <summary>
        /// Удалить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод удаляет запись об остатках товаров продавца из [списка остатков](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   &lt;strong&gt;Действие необратимо&lt;/strong&gt;. Удаленный остаток будет необходимо загрузить повторно для возобновления продаж. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdDeleteRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void ApiV3StocksWarehouseIdDelete(long warehouseId, ApiV3StocksWarehouseIdDeleteRequest apiV3StocksWarehouseIdDeleteRequest, int operationIndex = 0);

        /// <summary>
        /// Удалить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод удаляет запись об остатках товаров продавца из [списка остатков](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   &lt;strong&gt;Действие необратимо&lt;/strong&gt;. Удаленный остаток будет необходимо загрузить повторно для возобновления продаж. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdDeleteRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> ApiV3StocksWarehouseIdDeleteWithHttpInfo(long warehouseId, ApiV3StocksWarehouseIdDeleteRequest apiV3StocksWarehouseIdDeleteRequest, int operationIndex = 0);
        /// <summary>
        /// Получить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод предоставляет данные об остатках товаров на [складах продавца](/openapi/work-with-products#tag/Sklady-prodavca).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV3StocksWarehouseIdPost200Response</returns>
        ApiV3StocksWarehouseIdPost200Response ApiV3StocksWarehouseIdPost(long warehouseId, ApiV3StocksWarehouseIdPostRequest apiV3StocksWarehouseIdPostRequest, int operationIndex = 0);

        /// <summary>
        /// Получить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод предоставляет данные об остатках товаров на [складах продавца](/openapi/work-with-products#tag/Sklady-prodavca).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV3StocksWarehouseIdPost200Response</returns>
        ApiResponse<ApiV3StocksWarehouseIdPost200Response> ApiV3StocksWarehouseIdPostWithHttpInfo(long warehouseId, ApiV3StocksWarehouseIdPostRequest apiV3StocksWarehouseIdPostRequest, int operationIndex = 0);
        /// <summary>
        /// Обновить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод обновляет количество остатков товаров продавца [в списке](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Названия параметров запроса не валидируются. При отправке некорректных названий вы получите успешный ответ (&lt;code&gt;204&lt;/code&gt;), но остатки не обновятся. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPutRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void ApiV3StocksWarehouseIdPut(long warehouseId, ApiV3StocksWarehouseIdPutRequest? apiV3StocksWarehouseIdPutRequest = default(ApiV3StocksWarehouseIdPutRequest?), int operationIndex = 0);

        /// <summary>
        /// Обновить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод обновляет количество остатков товаров продавца [в списке](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Названия параметров запроса не валидируются. При отправке некорректных названий вы получите успешный ответ (&lt;code&gt;204&lt;/code&gt;), но остатки не обновятся. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPutRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> ApiV3StocksWarehouseIdPutWithHttpInfo(long warehouseId, ApiV3StocksWarehouseIdPutRequest? apiV3StocksWarehouseIdPutRequest = default(ApiV3StocksWarehouseIdPutRequest?), int operationIndex = 0);
        /// <summary>
        /// Получить список складов продавца
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список всех складов продавца. Может использоваться для получения [остатков товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Warehouse&gt;</returns>
        List<Warehouse> ApiV3WarehousesGet(int operationIndex = 0);

        /// <summary>
        /// Получить список складов продавца
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список всех складов продавца. Может использоваться для получения [остатков товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Warehouse&gt;</returns>
        ApiResponse<List<Warehouse>> ApiV3WarehousesGetWithHttpInfo(int operationIndex = 0);
        /// <summary>
        /// Создать склад продавца
        /// </summary>
        /// <remarks>
        /// Метод создаёт склад продавца для работы с [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post). Нужно привязать к складу продавца [склад WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) для работы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV3WarehousesPost201Response</returns>
        ApiV3WarehousesPost201Response ApiV3WarehousesPost(ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0);

        /// <summary>
        /// Создать склад продавца
        /// </summary>
        /// <remarks>
        /// Метод создаёт склад продавца для работы с [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post). Нужно привязать к складу продавца [склад WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) для работы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV3WarehousesPost201Response</returns>
        ApiResponse<ApiV3WarehousesPost201Response> ApiV3WarehousesPostWithHttpInfo(ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0);
        /// <summary>
        /// Удалить склад продавца
        /// </summary>
        /// <remarks>
        /// Метод удаляет склад продавца из [списка складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void ApiV3WarehousesWarehouseIdDelete(long warehouseId, int operationIndex = 0);

        /// <summary>
        /// Удалить склад продавца
        /// </summary>
        /// <remarks>
        /// Метод удаляет склад продавца из [списка складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> ApiV3WarehousesWarehouseIdDeleteWithHttpInfo(long warehouseId, int operationIndex = 0);
        /// <summary>
        /// Обновить склад продавца
        /// </summary>
        /// <remarks>
        /// Метод обновляет данные склада продавца в [списке складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get). Данные о привязанном [складе WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) можно изменить один раз в сутки.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void ApiV3WarehousesWarehouseIdPut(long warehouseId, ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0);

        /// <summary>
        /// Обновить склад продавца
        /// </summary>
        /// <remarks>
        /// Метод обновляет данные склада продавца в [списке складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get). Данные о привязанном [складе WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) можно изменить один раз в сутки.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> ApiV3WarehousesWarehouseIdPutWithHttpInfo(long warehouseId, ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0);
        /// <summary>
        /// Генерация баркодов
        /// </summary>
        /// <remarks>
        /// Метод генерирует массив уникальных баркодов для создания размера в [карточке товара](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post). Можно использовать, если у вас нет собственных баркодов.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2BarcodesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2BarcodesPost200Response</returns>
        ContentV2BarcodesPost200Response ContentV2BarcodesPost(ContentV2BarcodesPostRequest contentV2BarcodesPostRequest, int operationIndex = 0);

        /// <summary>
        /// Генерация баркодов
        /// </summary>
        /// <remarks>
        /// Метод генерирует массив уникальных баркодов для создания размера в [карточке товара](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post). Можно использовать, если у вас нет собственных баркодов.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2BarcodesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2BarcodesPost200Response</returns>
        ApiResponse<ContentV2BarcodesPost200Response> ContentV2BarcodesPostWithHttpInfo(ContentV2BarcodesPostRequest contentV2BarcodesPostRequest, int operationIndex = 0);
        /// <summary>
        /// Перенос карточек товаров в корзину
        /// </summary>
        /// <remarks>
        /// Метод переносит [карточки товаров в корзину](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post). При этом карточки товаров не удаляются, их можно [восстановить](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1recover/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   После переноса в корзину карточке товара присваивается новый &lt;code&gt;imtID&lt;/code&gt;. &lt;/div&gt;  Карточки товаров удаляются автоматически, если лежат в корзине больше 30 дней. Очистка корзины происходит каждую ночь по московскому времени.&lt;br&gt; Карточки товаров можно удалить в любое время в [личном кабинете](https://seller.wildberries.ru/new-goods/basket-cards).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2CardsDeleteTrashPost200Response</returns>
        ContentV2CardsDeleteTrashPost200Response ContentV2CardsDeleteTrashPost(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0);

        /// <summary>
        /// Перенос карточек товаров в корзину
        /// </summary>
        /// <remarks>
        /// Метод переносит [карточки товаров в корзину](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post). При этом карточки товаров не удаляются, их можно [восстановить](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1recover/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   После переноса в корзину карточке товара присваивается новый &lt;code&gt;imtID&lt;/code&gt;. &lt;/div&gt;  Карточки товаров удаляются автоматически, если лежат в корзине больше 30 дней. Очистка корзины происходит каждую ночь по московскому времени.&lt;br&gt; Карточки товаров можно удалить в любое время в [личном кабинете](https://seller.wildberries.ru/new-goods/basket-cards).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2CardsDeleteTrashPost200Response</returns>
        ApiResponse<ContentV2CardsDeleteTrashPost200Response> ContentV2CardsDeleteTrashPostWithHttpInfo(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0);
        /// <summary>
        /// Список несозданных карточек товаров с ошибками
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список карточек товаров, при создании или редактировании которых произошли ошибки, с описанием этих ошибок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Чтобы убрать карточку товара из списка, нужно повторно сделать запрос на &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post\&quot;&gt;создание&lt;/a&gt; или редактирование карточки товара с исправленными ошибками. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Параметр выбора языка значений полей ответа (для которых предусмотрена мультиязычность).  Не используется в песочнице.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2CardsErrorListGet200Response</returns>
        ContentV2CardsErrorListGet200Response ContentV2CardsErrorListGet(string? locale = default(string?), int operationIndex = 0);

        /// <summary>
        /// Список несозданных карточек товаров с ошибками
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список карточек товаров, при создании или редактировании которых произошли ошибки, с описанием этих ошибок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Чтобы убрать карточку товара из списка, нужно повторно сделать запрос на &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post\&quot;&gt;создание&lt;/a&gt; или редактирование карточки товара с исправленными ошибками. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Параметр выбора языка значений полей ответа (для которых предусмотрена мультиязычность).  Не используется в песочнице.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2CardsErrorListGet200Response</returns>
        ApiResponse<ContentV2CardsErrorListGet200Response> ContentV2CardsErrorListGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0);
        /// <summary>
        /// Лимиты карточек товаров
        /// </summary>
        /// <remarks>
        /// Возвращает бесплатные и платные лимиты продавца на [создание карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post).&lt;br&gt;&lt;br&gt;  Формула для получения количества карточек, которые можно создать:    &gt; (&#x60;freeLimits&#x60; + &#x60;paidLimits&#x60;) - количество созданных карточек  Созданными считаются карточки, которые можно получить через методы [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2CardsLimitsGet200Response</returns>
        ContentV2CardsLimitsGet200Response ContentV2CardsLimitsGet(int operationIndex = 0);

        /// <summary>
        /// Лимиты карточек товаров
        /// </summary>
        /// <remarks>
        /// Возвращает бесплатные и платные лимиты продавца на [создание карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post).&lt;br&gt;&lt;br&gt;  Формула для получения количества карточек, которые можно создать:    &gt; (&#x60;freeLimits&#x60; + &#x60;paidLimits&#x60;) - количество созданных карточек  Созданными считаются карточки, которые можно получить через методы [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2CardsLimitsGet200Response</returns>
        ApiResponse<ContentV2CardsLimitsGet200Response> ContentV2CardsLimitsGetWithHttpInfo(int operationIndex = 0);
        /// <summary>
        /// Объединение и разъединение карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод объединяет и разъединяет карточки товаров. Карточки товаров считаются объединёнными, если у них одинаковый &lt;code&gt;imtID&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Для объединения карточек товаров сделайте запрос **с указанием** &#x60;imtID&#x60;. Можно объединять не более 30 карточек товаров.&lt;br&gt; Для разъединения карточек товаров сделайте запрос **без указания** &#x60;imtID&#x60;. Для разъединенных карточек будут сгенерированы новые &#x60;imtID&#x60;. &lt;br&gt;&lt;br&gt; Если вы разъедините одновременно несколько карточек товаров, эти карточки объединятся в одну и получат новый &#x60;imtID&#x60;.&lt;br&gt; Чтобы присвоить каждой карточке товара уникальный &#x60;imtID&#x60;, необходимо передавать по одной карточке товара за запрос.&lt;br&gt; &lt;br&gt; Максимальный размер запроса 10 Мб.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Объединить можно только карточки товаров с одинаковыми предметами. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsMoveNmPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseCardCreate</returns>
        ResponseCardCreate ContentV2CardsMoveNmPost(ContentV2CardsMoveNmPostRequest? contentV2CardsMoveNmPostRequest = default(ContentV2CardsMoveNmPostRequest?), int operationIndex = 0);

        /// <summary>
        /// Объединение и разъединение карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод объединяет и разъединяет карточки товаров. Карточки товаров считаются объединёнными, если у них одинаковый &lt;code&gt;imtID&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Для объединения карточек товаров сделайте запрос **с указанием** &#x60;imtID&#x60;. Можно объединять не более 30 карточек товаров.&lt;br&gt; Для разъединения карточек товаров сделайте запрос **без указания** &#x60;imtID&#x60;. Для разъединенных карточек будут сгенерированы новые &#x60;imtID&#x60;. &lt;br&gt;&lt;br&gt; Если вы разъедините одновременно несколько карточек товаров, эти карточки объединятся в одну и получат новый &#x60;imtID&#x60;.&lt;br&gt; Чтобы присвоить каждой карточке товара уникальный &#x60;imtID&#x60;, необходимо передавать по одной карточке товара за запрос.&lt;br&gt; &lt;br&gt; Максимальный размер запроса 10 Мб.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Объединить можно только карточки товаров с одинаковыми предметами. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsMoveNmPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseCardCreate</returns>
        ApiResponse<ResponseCardCreate> ContentV2CardsMoveNmPostWithHttpInfo(ContentV2CardsMoveNmPostRequest? contentV2CardsMoveNmPostRequest = default(ContentV2CardsMoveNmPostRequest?), int operationIndex = 0);
        /// <summary>
        /// Восстановление карточек товаров из корзины
        /// </summary>
        /// <remarks>
        /// Метод восстанавливает [карточки товаров из корзины](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара сохраняет тот же &lt;code&gt;imtID&lt;/code&gt;, что был присвоен ей при &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1delete~1trash/post\&quot;&gt;перемещении в корзину&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2CardsDeleteTrashPost200Response</returns>
        ContentV2CardsDeleteTrashPost200Response ContentV2CardsRecoverPost(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0);

        /// <summary>
        /// Восстановление карточек товаров из корзины
        /// </summary>
        /// <remarks>
        /// Метод восстанавливает [карточки товаров из корзины](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара сохраняет тот же &lt;code&gt;imtID&lt;/code&gt;, что был присвоен ей при &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1delete~1trash/post\&quot;&gt;перемещении в корзину&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2CardsDeleteTrashPost200Response</returns>
        ApiResponse<ContentV2CardsDeleteTrashPost200Response> ContentV2CardsRecoverPostWithHttpInfo(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0);
        /// <summary>
        /// Редактирование карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод обновляет карточки товаров. Данные для обновления можно получить через [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара перезаписывается при обновлении. Поэтому в запросе нужно передать &lt;strong&gt;все&lt;/strong&gt; параметры карточки, в том числе те, которые вы не собираетесь обновлять. &lt;/div&gt;  Нельзя редактировать или удалять баркоды, но можно добавить дополнительный баркод к карточке товара. Параметры &#x60;photos&#x60;, &#x60;video&#x60; и &#x60;tags&#x60; редактировать или удалять через данный метод нельзя.&lt;br&gt; Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; В одном запросе можно отредактировать максимум 3000 карточек товаров (&#x60;nmID&#x60;). Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUpdatePostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseCardCreate</returns>
        ResponseCardCreate ContentV2CardsUpdatePost(List<ContentV2CardsUpdatePostRequestInner>? contentV2CardsUpdatePostRequestInner = default(List<ContentV2CardsUpdatePostRequestInner>?), int operationIndex = 0);

        /// <summary>
        /// Редактирование карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод обновляет карточки товаров. Данные для обновления можно получить через [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара перезаписывается при обновлении. Поэтому в запросе нужно передать &lt;strong&gt;все&lt;/strong&gt; параметры карточки, в том числе те, которые вы не собираетесь обновлять. &lt;/div&gt;  Нельзя редактировать или удалять баркоды, но можно добавить дополнительный баркод к карточке товара. Параметры &#x60;photos&#x60;, &#x60;video&#x60; и &#x60;tags&#x60; редактировать или удалять через данный метод нельзя.&lt;br&gt; Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; В одном запросе можно отредактировать максимум 3000 карточек товаров (&#x60;nmID&#x60;). Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUpdatePostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseCardCreate</returns>
        ApiResponse<ResponseCardCreate> ContentV2CardsUpdatePostWithHttpInfo(List<ContentV2CardsUpdatePostRequestInner>? contentV2CardsUpdatePostRequestInner = default(List<ContentV2CardsUpdatePostRequestInner>?), int operationIndex = 0);
        /// <summary>
        /// Создание карточек товаров с объединением
        /// </summary>
        /// <remarks>
        /// Метод создаёт новые карточки товаров, объединяя их с существующими карточками.  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt;Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadAddPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseCardCreate</returns>
        ResponseCardCreate ContentV2CardsUploadAddPost(ContentV2CardsUploadAddPostRequest? contentV2CardsUploadAddPostRequest = default(ContentV2CardsUploadAddPostRequest?), int operationIndex = 0);

        /// <summary>
        /// Создание карточек товаров с объединением
        /// </summary>
        /// <remarks>
        /// Метод создаёт новые карточки товаров, объединяя их с существующими карточками.  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt;Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadAddPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseCardCreate</returns>
        ApiResponse<ResponseCardCreate> ContentV2CardsUploadAddPostWithHttpInfo(ContentV2CardsUploadAddPostRequest? contentV2CardsUploadAddPostRequest = default(ContentV2CardsUploadAddPostRequest?), int operationIndex = 0);
        /// <summary>
        /// Создание карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод создаёт карточки товаров c указанием описаний и характеристик товаров.&lt;br&gt;  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Есть две формы запроса: для создания отдельных и объединённых карточек товаров. &lt;/div&gt;  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt; В одном запросе можно создать максимум 100 объединённых карточек товаров (&#x60;imtID&#x60;), по 30 карточек товаров в каждой. Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadPostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseCardCreate</returns>
        ResponseCardCreate ContentV2CardsUploadPost(List<ContentV2CardsUploadPostRequestInner>? contentV2CardsUploadPostRequestInner = default(List<ContentV2CardsUploadPostRequestInner>?), int operationIndex = 0);

        /// <summary>
        /// Создание карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод создаёт карточки товаров c указанием описаний и характеристик товаров.&lt;br&gt;  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Есть две формы запроса: для создания отдельных и объединённых карточек товаров. &lt;/div&gt;  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt; В одном запросе можно создать максимум 100 объединённых карточек товаров (&#x60;imtID&#x60;), по 30 карточек товаров в каждой. Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadPostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseCardCreate</returns>
        ApiResponse<ResponseCardCreate> ContentV2CardsUploadPostWithHttpInfo(List<ContentV2CardsUploadPostRequestInner>? contentV2CardsUploadPostRequestInner = default(List<ContentV2CardsUploadPostRequestInner>?), int operationIndex = 0);
        /// <summary>
        /// Цвет
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Цвет&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectoryColorsGet200Response</returns>
        ContentV2DirectoryColorsGet200Response ContentV2DirectoryColorsGet(string? locale = default(string?), int operationIndex = 0);

        /// <summary>
        /// Цвет
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Цвет&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectoryColorsGet200Response</returns>
        ApiResponse<ContentV2DirectoryColorsGet200Response> ContentV2DirectoryColorsGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0);
        /// <summary>
        /// Страна производства
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Страна производства&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectoryCountriesGet200Response</returns>
        ContentV2DirectoryCountriesGet200Response ContentV2DirectoryCountriesGet(string? locale = default(string?), int operationIndex = 0);

        /// <summary>
        /// Страна производства
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Страна производства&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectoryCountriesGet200Response</returns>
        ApiResponse<ContentV2DirectoryCountriesGet200Response> ContentV2DirectoryCountriesGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0);
        /// <summary>
        /// Пол
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Пол&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectoryKindsGet200Response</returns>
        ContentV2DirectoryKindsGet200Response ContentV2DirectoryKindsGet(string? locale = default(string?), int operationIndex = 0);

        /// <summary>
        /// Пол
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Пол&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectoryKindsGet200Response</returns>
        ApiResponse<ContentV2DirectoryKindsGet200Response> ContentV2DirectoryKindsGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0);
        /// <summary>
        /// Сезон
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Сезон&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectorySeasonsGet200Response</returns>
        ContentV2DirectorySeasonsGet200Response ContentV2DirectorySeasonsGet(string? locale = default(string?), int operationIndex = 0);

        /// <summary>
        /// Сезон
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Сезон&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectorySeasonsGet200Response</returns>
        ApiResponse<ContentV2DirectorySeasonsGet200Response> ContentV2DirectorySeasonsGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0);
        /// <summary>
        /// ТНВЭД-код
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список ТНВЭД-кодов по ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get) и фрагменту ТНВЭД-кода.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectID">ID предмета</param>
        /// <param name="search">Поиск по ТНВЭД-коду. Работает только в паре с &#x60;subjectID&#x60; (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectoryTnvedGet200Response</returns>
        ContentV2DirectoryTnvedGet200Response ContentV2DirectoryTnvedGet(int subjectID, int? search = default(int?), string? locale = default(string?), int operationIndex = 0);

        /// <summary>
        /// ТНВЭД-код
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список ТНВЭД-кодов по ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get) и фрагменту ТНВЭД-кода.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectID">ID предмета</param>
        /// <param name="search">Поиск по ТНВЭД-коду. Работает только в паре с &#x60;subjectID&#x60; (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectoryTnvedGet200Response</returns>
        ApiResponse<ContentV2DirectoryTnvedGet200Response> ContentV2DirectoryTnvedGetWithHttpInfo(int subjectID, int? search = default(int?), string? locale = default(string?), int operationIndex = 0);
        /// <summary>
        /// Ставка НДС
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Ставка НДС&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectoryVatGet200Response</returns>
        ContentV2DirectoryVatGet200Response ContentV2DirectoryVatGet(string locale, int operationIndex = 0);

        /// <summary>
        /// Ставка НДС
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Ставка НДС&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectoryVatGet200Response</returns>
        ApiResponse<ContentV2DirectoryVatGet200Response> ContentV2DirectoryVatGetWithHttpInfo(string locale, int operationIndex = 0);
        /// <summary>
        /// Список карточек товаров
        /// </summary>
        /// <remarks>
        /// &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список созданных карточек товаров.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   В ответе метода не будет карточек, находящихся в корзине. Получить такие карточки можно через &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post\&quot;&gt;отдельный метод&lt;/a&gt;. &lt;/div&gt;      Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsListPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице.    (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2GetCardsListPost200Response</returns>
        ContentV2GetCardsListPost200Response ContentV2GetCardsListPost(ContentV2GetCardsListPostRequest contentV2GetCardsListPostRequest, string? locale = default(string?), int operationIndex = 0);

        /// <summary>
        /// Список карточек товаров
        /// </summary>
        /// <remarks>
        /// &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список созданных карточек товаров.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   В ответе метода не будет карточек, находящихся в корзине. Получить такие карточки можно через &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post\&quot;&gt;отдельный метод&lt;/a&gt;. &lt;/div&gt;      Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsListPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице.    (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2GetCardsListPost200Response</returns>
        ApiResponse<ContentV2GetCardsListPost200Response> ContentV2GetCardsListPostWithHttpInfo(ContentV2GetCardsListPostRequest contentV2GetCardsListPostRequest, string? locale = default(string?), int operationIndex = 0);
        /// <summary>
        /// Список карточек товаров в корзине
        /// </summary>
        /// <remarks>
        /// &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список карточек товаров в корзине.&lt;br&gt;&lt;br&gt;  Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;    &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца   &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsTrashPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;: &#x60;ru&#x60;, &#x60;en&#x60;, &#x60;zh&#x60;.  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2GetCardsTrashPost200Response</returns>
        ContentV2GetCardsTrashPost200Response ContentV2GetCardsTrashPost(ContentV2GetCardsTrashPostRequest contentV2GetCardsTrashPostRequest, string? locale = default(string?), int operationIndex = 0);

        /// <summary>
        /// Список карточек товаров в корзине
        /// </summary>
        /// <remarks>
        /// &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список карточек товаров в корзине.&lt;br&gt;&lt;br&gt;  Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;    &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца   &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsTrashPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;: &#x60;ru&#x60;, &#x60;en&#x60;, &#x60;zh&#x60;.  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2GetCardsTrashPost200Response</returns>
        ApiResponse<ContentV2GetCardsTrashPost200Response> ContentV2GetCardsTrashPostWithHttpInfo(ContentV2GetCardsTrashPostRequest contentV2GetCardsTrashPostRequest, string? locale = default(string?), int operationIndex = 0);
        /// <summary>
        /// Список предметов
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список названий [родительских категорий предметов](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1parent~1all/get) и их предметов с ID. Например, у категории &#x60;Игрушки&#x60; будут предметы &#x60;Калейдоскопы&#x60;, &#x60;Куклы&#x60;, &#x60;Мячики&#x60;.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">Поиск по названию предмета (Носки), поиск работает по подстроке, искать можно на любом из поддерживаемых языков. (optional)</param>
        /// <param name="limit">Количество предметов, максимум 1 000 (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="offset">Номер позиции, с которой необходимо получить ответ (optional)</param>
        /// <param name="parentID">ID родительской категории предмета (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2ObjectAllGet200Response</returns>
        ContentV2ObjectAllGet200Response ContentV2ObjectAllGet(string? name = default(string?), int? limit = default(int?), string? locale = default(string?), int? offset = default(int?), int? parentID = default(int?), int operationIndex = 0);

        /// <summary>
        /// Список предметов
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список названий [родительских категорий предметов](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1parent~1all/get) и их предметов с ID. Например, у категории &#x60;Игрушки&#x60; будут предметы &#x60;Калейдоскопы&#x60;, &#x60;Куклы&#x60;, &#x60;Мячики&#x60;.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">Поиск по названию предмета (Носки), поиск работает по подстроке, искать можно на любом из поддерживаемых языков. (optional)</param>
        /// <param name="limit">Количество предметов, максимум 1 000 (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="offset">Номер позиции, с которой необходимо получить ответ (optional)</param>
        /// <param name="parentID">ID родительской категории предмета (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2ObjectAllGet200Response</returns>
        ApiResponse<ContentV2ObjectAllGet200Response> ContentV2ObjectAllGetWithHttpInfo(string? name = default(string?), int? limit = default(int?), string? locale = default(string?), int? offset = default(int?), int? parentID = default(int?), int operationIndex = 0);
        /// <summary>
        /// Характеристики предмета
        /// </summary>
        /// <remarks>
        /// Метод предоставляет параметры характеристик предмета: названия, типы данных, единицы измерения и так далее. В запросе необходимо указать ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get).   &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Для получения характеристик &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1colors/get\&quot;&gt;Цвет&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1kinds/get\&quot;&gt;Пол&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1countries/get\&quot;&gt;Страна производства&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1seasons/get\&quot;&gt;Сезон&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1vat/get\&quot;&gt;Ставка НДС&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1tnved/get\&quot;&gt;ТНВЭД-код&lt;/a&gt; используйте отдельные методы &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectId">ID предмета</param>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2ObjectCharcsSubjectIdGet200Response</returns>
        ContentV2ObjectCharcsSubjectIdGet200Response ContentV2ObjectCharcsSubjectIdGet(int subjectId, string? locale = default(string?), int operationIndex = 0);

        /// <summary>
        /// Характеристики предмета
        /// </summary>
        /// <remarks>
        /// Метод предоставляет параметры характеристик предмета: названия, типы данных, единицы измерения и так далее. В запросе необходимо указать ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get).   &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Для получения характеристик &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1colors/get\&quot;&gt;Цвет&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1kinds/get\&quot;&gt;Пол&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1countries/get\&quot;&gt;Страна производства&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1seasons/get\&quot;&gt;Сезон&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1vat/get\&quot;&gt;Ставка НДС&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1tnved/get\&quot;&gt;ТНВЭД-код&lt;/a&gt; используйте отдельные методы &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectId">ID предмета</param>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2ObjectCharcsSubjectIdGet200Response</returns>
        ApiResponse<ContentV2ObjectCharcsSubjectIdGet200Response> ContentV2ObjectCharcsSubjectIdGetWithHttpInfo(int subjectId, string? locale = default(string?), int operationIndex = 0);
        /// <summary>
        /// Родительские категории товаров
        /// </summary>
        /// <remarks>
        /// Метод предоставляет названия и ID всех родительских категорий для [создания карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov): например, &#x60;Электроника&#x60;, &#x60;Бытовая химия&#x60;, &#x60;Рукоделие&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык поля ответа &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2ObjectParentAllGet200Response</returns>
        ContentV2ObjectParentAllGet200Response ContentV2ObjectParentAllGet(string? locale = default(string?), int operationIndex = 0);

        /// <summary>
        /// Родительские категории товаров
        /// </summary>
        /// <remarks>
        /// Метод предоставляет названия и ID всех родительских категорий для [создания карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov): например, &#x60;Электроника&#x60;, &#x60;Бытовая химия&#x60;, &#x60;Рукоделие&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык поля ответа &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2ObjectParentAllGet200Response</returns>
        ApiResponse<ContentV2ObjectParentAllGet200Response> ContentV2ObjectParentAllGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0);
        /// <summary>
        /// Удаление ярлыка
        /// </summary>
        /// <remarks>
        /// Метод удаляет ярлык из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2TagIdDelete200Response</returns>
        ContentV2TagIdDelete200Response ContentV2TagIdDelete(int id, int operationIndex = 0);

        /// <summary>
        /// Удаление ярлыка
        /// </summary>
        /// <remarks>
        /// Метод удаляет ярлык из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2TagIdDelete200Response</returns>
        ApiResponse<ContentV2TagIdDelete200Response> ContentV2TagIdDeleteWithHttpInfo(int id, int operationIndex = 0);
        /// <summary>
        /// Изменение ярлыка
        /// </summary>
        /// <remarks>
        /// Метод заменяет данные ярлыка: имя и цвет. &lt;br&gt;Новые данные можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="contentV2TagIdPatchRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2TagIdPatch200Response</returns>
        ContentV2TagIdPatch200Response ContentV2TagIdPatch(int id, ContentV2TagIdPatchRequest contentV2TagIdPatchRequest, int operationIndex = 0);

        /// <summary>
        /// Изменение ярлыка
        /// </summary>
        /// <remarks>
        /// Метод заменяет данные ярлыка: имя и цвет. &lt;br&gt;Новые данные можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="contentV2TagIdPatchRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2TagIdPatch200Response</returns>
        ApiResponse<ContentV2TagIdPatch200Response> ContentV2TagIdPatchWithHttpInfo(int id, ContentV2TagIdPatchRequest contentV2TagIdPatchRequest, int operationIndex = 0);
        /// <summary>
        /// Управление ярлыками в карточке товара
        /// </summary>
        /// <remarks>
        /// Метод добавляет или снимает ярлык с карточки товара. К карточке можно добавить максимум 15 ярлыков.&lt;br&gt; При удалении ярлыка из карточки товара он не удаляется из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagNomenclatureLinkPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseContentError6</returns>
        ResponseContentError6 ContentV2TagNomenclatureLinkPost(ContentV2TagNomenclatureLinkPostRequest contentV2TagNomenclatureLinkPostRequest, int operationIndex = 0);

        /// <summary>
        /// Управление ярлыками в карточке товара
        /// </summary>
        /// <remarks>
        /// Метод добавляет или снимает ярлык с карточки товара. К карточке можно добавить максимум 15 ярлыков.&lt;br&gt; При удалении ярлыка из карточки товара он не удаляется из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagNomenclatureLinkPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseContentError6</returns>
        ApiResponse<ResponseContentError6> ContentV2TagNomenclatureLinkPostWithHttpInfo(ContentV2TagNomenclatureLinkPostRequest contentV2TagNomenclatureLinkPostRequest, int operationIndex = 0);
        /// <summary>
        /// Создание ярлыка
        /// </summary>
        /// <remarks>
        /// Метод добавляет один ярлык продавца. Можно создать максимум 15 ярлыков для одного продавца. Максимальная длина ярлыка — 15 символов. &lt;br&gt;Созданный ярлык можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseContentError6</returns>
        ResponseContentError6 ContentV2TagPost(ContentV2TagPostRequest contentV2TagPostRequest, int operationIndex = 0);

        /// <summary>
        /// Создание ярлыка
        /// </summary>
        /// <remarks>
        /// Метод добавляет один ярлык продавца. Можно создать максимум 15 ярлыков для одного продавца. Максимальная длина ярлыка — 15 символов. &lt;br&gt;Созданный ярлык можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseContentError6</returns>
        ApiResponse<ResponseContentError6> ContentV2TagPostWithHttpInfo(ContentV2TagPostRequest contentV2TagPostRequest, int operationIndex = 0);
        /// <summary>
        /// Список ярлыков
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список и характеристики всех ярлыков продавца для группировки и фильтрации товаров.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2TagsGet200Response</returns>
        ContentV2TagsGet200Response ContentV2TagsGet(int operationIndex = 0);

        /// <summary>
        /// Список ярлыков
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список и характеристики всех ярлыков продавца для группировки и фильтрации товаров.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2TagsGet200Response</returns>
        ApiResponse<ContentV2TagsGet200Response> ContentV2TagsGetWithHttpInfo(int operationIndex = 0);
        /// <summary>
        /// Загрузить медиафайл
        /// </summary>
        /// <remarks>
        /// Метод загружает и добавляет один медиафайл к карточке товара.  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700x900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xNmId">Артикул WB</param>
        /// <param name="xPhotoNumber">Номер медиафайла на загрузку, начинается с &#x60;1&#x60;. При загрузке видео всегда указывайте &#x60;1&#x60;.  Чтобы добавить изображение к уже загруженным, номер медиафайла должен быть больше количества уже загруженных медиафайлов. </param>
        /// <param name="uploadfile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV3MediaFilePost200Response</returns>
        ContentV3MediaFilePost200Response ContentV3MediaFilePost(string xNmId, int xPhotoNumber, System.IO.Stream? uploadfile = default(System.IO.Stream?), int operationIndex = 0);

        /// <summary>
        /// Загрузить медиафайл
        /// </summary>
        /// <remarks>
        /// Метод загружает и добавляет один медиафайл к карточке товара.  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700x900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xNmId">Артикул WB</param>
        /// <param name="xPhotoNumber">Номер медиафайла на загрузку, начинается с &#x60;1&#x60;. При загрузке видео всегда указывайте &#x60;1&#x60;.  Чтобы добавить изображение к уже загруженным, номер медиафайла должен быть больше количества уже загруженных медиафайлов. </param>
        /// <param name="uploadfile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV3MediaFilePost200Response</returns>
        ApiResponse<ContentV3MediaFilePost200Response> ContentV3MediaFilePostWithHttpInfo(string xNmId, int xPhotoNumber, System.IO.Stream? uploadfile = default(System.IO.Stream?), int operationIndex = 0);
        /// <summary>
        /// Загрузить медиафайлы по ссылкам
        /// </summary>
        /// <remarks>
        /// Метод загружает набор медиафайлов в карточку товара через указание ссылок в запросе.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Новые медиафайлы полностью заменяют старые. Чтобы добавить новые медиафайлы, укажите в запросе ссылки одновременно на новые и старые медиафайлы. &lt;/div&gt;  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700×900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  Если видео или хотя бы одно изображение в запросе не соответствует требованиям, то даже при успешном ответе ни одно изображение/видео не загрузится.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV3MediaSavePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV3MediaFilePost200Response</returns>
        ContentV3MediaFilePost200Response ContentV3MediaSavePost(ContentV3MediaSavePostRequest contentV3MediaSavePostRequest, int operationIndex = 0);

        /// <summary>
        /// Загрузить медиафайлы по ссылкам
        /// </summary>
        /// <remarks>
        /// Метод загружает набор медиафайлов в карточку товара через указание ссылок в запросе.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Новые медиафайлы полностью заменяют старые. Чтобы добавить новые медиафайлы, укажите в запросе ссылки одновременно на новые и старые медиафайлы. &lt;/div&gt;  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700×900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  Если видео или хотя бы одно изображение в запросе не соответствует требованиям, то даже при успешном ответе ни одно изображение/видео не загрузится.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV3MediaSavePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV3MediaFilePost200Response</returns>
        ApiResponse<ContentV3MediaFilePost200Response> ContentV3MediaSavePostWithHttpInfo(ContentV3MediaSavePostRequest contentV3MediaSavePostRequest, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Детализация необработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах и ошибках в товарах из загрузки в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2BufferGoodsTaskGet200Response</returns>
        System.Threading.Tasks.Task<ApiV2BufferGoodsTaskGet200Response> ApiV2BufferGoodsTaskGetAsync(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Детализация необработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах и ошибках в товарах из загрузки в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2BufferGoodsTaskGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiV2BufferGoodsTaskGet200Response>> ApiV2BufferGoodsTaskGetWithHttpInfoAsync(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Состояние необработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию про загрузку скидок в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2BufferTasksGet200Response</returns>
        System.Threading.Tasks.Task<ApiV2BufferTasksGet200Response> ApiV2BufferTasksGetAsync(int uploadID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Состояние необработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию про загрузку скидок в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2BufferTasksGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiV2BufferTasksGet200Response>> ApiV2BufferTasksGetWithHttpInfoAsync(int uploadID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Детализация обработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах и об ошибках в товарах в обработанной загрузке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2HistoryGoodsTaskGet200Response</returns>
        System.Threading.Tasks.Task<ApiV2HistoryGoodsTaskGet200Response> ApiV2HistoryGoodsTaskGetAsync(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Детализация обработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах и об ошибках в товарах в обработанной загрузке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2HistoryGoodsTaskGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiV2HistoryGoodsTaskGet200Response>> ApiV2HistoryGoodsTaskGetWithHttpInfoAsync(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Состояние обработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию об обработанной загрузке цен и скидок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2HistoryTasksGet200Response</returns>
        System.Threading.Tasks.Task<ApiV2HistoryTasksGet200Response> ApiV2HistoryTasksGetAsync(int uploadID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Состояние обработанной загрузки
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию об обработанной загрузке цен и скидок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2HistoryTasksGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiV2HistoryTasksGet200Response>> ApiV2HistoryTasksGetWithHttpInfoAsync(int uploadID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Получить товары
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товаре по его артикулу. &lt;br&gt;&lt;br&gt; Чтобы получить информацию обо всех товарах продавца, оставьте артикул пустым. Чтобы получить информацию о размерах товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="filterNmID">Артикул WB, по которому искать товар (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2ListGoodsFilterGet200Response</returns>
        System.Threading.Tasks.Task<ApiV2ListGoodsFilterGet200Response> ApiV2ListGoodsFilterGetAsync(int limit, int? offset = default(int?), int? filterNmID = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Получить товары
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товаре по его артикулу. &lt;br&gt;&lt;br&gt; Чтобы получить информацию обо всех товарах продавца, оставьте артикул пустым. Чтобы получить информацию о размерах товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="filterNmID">Артикул WB, по которому искать товар (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2ListGoodsFilterGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiV2ListGoodsFilterGet200Response>> ApiV2ListGoodsFilterGetWithHttpInfoAsync(int limit, int? offset = default(int?), int? filterNmID = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Получить размеры товара
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию обо всех размерах одного товара. &lt;br&gt;&lt;br&gt; Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для таких товаров &#x60;editableSizePrice: true&#x60;.  &lt;br&gt;&lt;br&gt; Чтобы получить информацию о самом товаре, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1filter/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="nmID">Артикул WB</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2ListGoodsSizeNmGet200Response</returns>
        System.Threading.Tasks.Task<ApiV2ListGoodsSizeNmGet200Response> ApiV2ListGoodsSizeNmGetAsync(int limit, int nmID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Получить размеры товара
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию обо всех размерах одного товара. &lt;br&gt;&lt;br&gt; Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для таких товаров &#x60;editableSizePrice: true&#x60;.  &lt;br&gt;&lt;br&gt; Чтобы получить информацию о самом товаре, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1filter/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="nmID">Артикул WB</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2ListGoodsSizeNmGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiV2ListGoodsSizeNmGet200Response>> ApiV2ListGoodsSizeNmGetWithHttpInfoAsync(int limit, int nmID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Получить товары в карантине
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах в карантине. &lt;br&gt;&lt;br&gt; Если новая цена товара со скидкой будет минимум в 3 раза меньше старой, товар попадёт [в карантин](https://seller.wildberries.ru/discount-and-prices/quarantine) и будет продаваться по старой цене. Ошибка об этом будет в ответах методов [состояний загрузок](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get). &lt;br&gt;&lt;br&gt; Вы можете изменить цену или скидку с помощью API либо вывести товар из карантина [в личном кабинете](https://seller.wildberries.ru/discount-and-prices/quarantine). &lt;br&gt;&lt;br&gt; Для товаров с [поразмерной установкой цен](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post) карантин не применяется.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2QuarantineGoodsGet200Response</returns>
        System.Threading.Tasks.Task<ApiV2QuarantineGoodsGet200Response> ApiV2QuarantineGoodsGetAsync(int limit, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Получить товары в карантине
        /// </summary>
        /// <remarks>
        /// Метод предоставляет информацию о товарах в карантине. &lt;br&gt;&lt;br&gt; Если новая цена товара со скидкой будет минимум в 3 раза меньше старой, товар попадёт [в карантин](https://seller.wildberries.ru/discount-and-prices/quarantine) и будет продаваться по старой цене. Ошибка об этом будет в ответах методов [состояний загрузок](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get). &lt;br&gt;&lt;br&gt; Вы можете изменить цену или скидку с помощью API либо вывести товар из карантина [в личном кабинете](https://seller.wildberries.ru/discount-and-prices/quarantine). &lt;br&gt;&lt;br&gt; Для товаров с [поразмерной установкой цен](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post) карантин не применяется.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2QuarantineGoodsGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiV2QuarantineGoodsGet200Response>> ApiV2QuarantineGoodsGetWithHttpInfoAsync(int limit, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Установить скидки WB Клуба
        /// </summary>
        /// <remarks>
        /// Устанавливает скидки для товаров в рамках подписки [WB Клуб](https://seller.wildberries.ru/help-center/article/A-337).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskClubDiscountPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TaskCreated</returns>
        System.Threading.Tasks.Task<TaskCreated> ApiV2UploadTaskClubDiscountPostAsync(ApiV2UploadTaskClubDiscountPostRequest apiV2UploadTaskClubDiscountPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Установить скидки WB Клуба
        /// </summary>
        /// <remarks>
        /// Устанавливает скидки для товаров в рамках подписки [WB Клуб](https://seller.wildberries.ru/help-center/article/A-337).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskClubDiscountPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TaskCreated)</returns>
        System.Threading.Tasks.Task<ApiResponse<TaskCreated>> ApiV2UploadTaskClubDiscountPostWithHttpInfoAsync(ApiV2UploadTaskClubDiscountPostRequest apiV2UploadTaskClubDiscountPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Установить цены и скидки
        /// </summary>
        /// <remarks>
        /// Метод устанавливает цены и скидки для товаров.  &lt;br&gt;&lt;br&gt; Чтобы установить цены и скидки для размеров товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TaskCreated</returns>
        System.Threading.Tasks.Task<TaskCreated> ApiV2UploadTaskPostAsync(ApiV2UploadTaskPostRequest apiV2UploadTaskPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Установить цены и скидки
        /// </summary>
        /// <remarks>
        /// Метод устанавливает цены и скидки для товаров.  &lt;br&gt;&lt;br&gt; Чтобы установить цены и скидки для размеров товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TaskCreated)</returns>
        System.Threading.Tasks.Task<ApiResponse<TaskCreated>> ApiV2UploadTaskPostWithHttpInfoAsync(ApiV2UploadTaskPostRequest apiV2UploadTaskPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Установить цены для размеров
        /// </summary>
        /// <remarks>
        /// Метод устанавливает цены отдельно для размеров товаров.  Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для [таких товаров](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get) &#x60;editableSizePrice: true&#x60;.  Чтобы установить цены и скидки для самих товаров, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskSizePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TaskCreated</returns>
        System.Threading.Tasks.Task<TaskCreated> ApiV2UploadTaskSizePostAsync(ApiV2UploadTaskSizePostRequest apiV2UploadTaskSizePostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Установить цены для размеров
        /// </summary>
        /// <remarks>
        /// Метод устанавливает цены отдельно для размеров товаров.  Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для [таких товаров](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get) &#x60;editableSizePrice: true&#x60;.  Чтобы установить цены и скидки для самих товаров, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskSizePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TaskCreated)</returns>
        System.Threading.Tasks.Task<ApiResponse<TaskCreated>> ApiV2UploadTaskSizePostWithHttpInfoAsync(ApiV2UploadTaskSizePostRequest apiV2UploadTaskSizePostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Получить список складов WB
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список всех складов WB для привязки к складам продавца. Предназначен для определения складов WB, чтобы сдавать готовые заказы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Office&gt;</returns>
        System.Threading.Tasks.Task<List<Office>> ApiV3OfficesGetAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Получить список складов WB
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список всех складов WB для привязки к складам продавца. Предназначен для определения складов WB, чтобы сдавать готовые заказы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Office&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<Office>>> ApiV3OfficesGetWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Удалить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод удаляет запись об остатках товаров продавца из [списка остатков](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   &lt;strong&gt;Действие необратимо&lt;/strong&gt;. Удаленный остаток будет необходимо загрузить повторно для возобновления продаж. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdDeleteRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiV3StocksWarehouseIdDeleteAsync(long warehouseId, ApiV3StocksWarehouseIdDeleteRequest apiV3StocksWarehouseIdDeleteRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Удалить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод удаляет запись об остатках товаров продавца из [списка остатков](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   &lt;strong&gt;Действие необратимо&lt;/strong&gt;. Удаленный остаток будет необходимо загрузить повторно для возобновления продаж. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdDeleteRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ApiV3StocksWarehouseIdDeleteWithHttpInfoAsync(long warehouseId, ApiV3StocksWarehouseIdDeleteRequest apiV3StocksWarehouseIdDeleteRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Получить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод предоставляет данные об остатках товаров на [складах продавца](/openapi/work-with-products#tag/Sklady-prodavca).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV3StocksWarehouseIdPost200Response</returns>
        System.Threading.Tasks.Task<ApiV3StocksWarehouseIdPost200Response> ApiV3StocksWarehouseIdPostAsync(long warehouseId, ApiV3StocksWarehouseIdPostRequest apiV3StocksWarehouseIdPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Получить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод предоставляет данные об остатках товаров на [складах продавца](/openapi/work-with-products#tag/Sklady-prodavca).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV3StocksWarehouseIdPost200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiV3StocksWarehouseIdPost200Response>> ApiV3StocksWarehouseIdPostWithHttpInfoAsync(long warehouseId, ApiV3StocksWarehouseIdPostRequest apiV3StocksWarehouseIdPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Обновить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод обновляет количество остатков товаров продавца [в списке](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Названия параметров запроса не валидируются. При отправке некорректных названий вы получите успешный ответ (&lt;code&gt;204&lt;/code&gt;), но остатки не обновятся. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPutRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiV3StocksWarehouseIdPutAsync(long warehouseId, ApiV3StocksWarehouseIdPutRequest? apiV3StocksWarehouseIdPutRequest = default(ApiV3StocksWarehouseIdPutRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Обновить остатки товаров
        /// </summary>
        /// <remarks>
        /// Метод обновляет количество остатков товаров продавца [в списке](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Названия параметров запроса не валидируются. При отправке некорректных названий вы получите успешный ответ (&lt;code&gt;204&lt;/code&gt;), но остатки не обновятся. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPutRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ApiV3StocksWarehouseIdPutWithHttpInfoAsync(long warehouseId, ApiV3StocksWarehouseIdPutRequest? apiV3StocksWarehouseIdPutRequest = default(ApiV3StocksWarehouseIdPutRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Получить список складов продавца
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список всех складов продавца. Может использоваться для получения [остатков товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Warehouse&gt;</returns>
        System.Threading.Tasks.Task<List<Warehouse>> ApiV3WarehousesGetAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Получить список складов продавца
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список всех складов продавца. Может использоваться для получения [остатков товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Warehouse&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<Warehouse>>> ApiV3WarehousesGetWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Создать склад продавца
        /// </summary>
        /// <remarks>
        /// Метод создаёт склад продавца для работы с [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post). Нужно привязать к складу продавца [склад WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) для работы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV3WarehousesPost201Response</returns>
        System.Threading.Tasks.Task<ApiV3WarehousesPost201Response> ApiV3WarehousesPostAsync(ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Создать склад продавца
        /// </summary>
        /// <remarks>
        /// Метод создаёт склад продавца для работы с [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post). Нужно привязать к складу продавца [склад WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) для работы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV3WarehousesPost201Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiV3WarehousesPost201Response>> ApiV3WarehousesPostWithHttpInfoAsync(ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Удалить склад продавца
        /// </summary>
        /// <remarks>
        /// Метод удаляет склад продавца из [списка складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiV3WarehousesWarehouseIdDeleteAsync(long warehouseId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Удалить склад продавца
        /// </summary>
        /// <remarks>
        /// Метод удаляет склад продавца из [списка складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ApiV3WarehousesWarehouseIdDeleteWithHttpInfoAsync(long warehouseId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Обновить склад продавца
        /// </summary>
        /// <remarks>
        /// Метод обновляет данные склада продавца в [списке складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get). Данные о привязанном [складе WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) можно изменить один раз в сутки.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiV3WarehousesWarehouseIdPutAsync(long warehouseId, ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Обновить склад продавца
        /// </summary>
        /// <remarks>
        /// Метод обновляет данные склада продавца в [списке складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get). Данные о привязанном [складе WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) можно изменить один раз в сутки.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ApiV3WarehousesWarehouseIdPutWithHttpInfoAsync(long warehouseId, ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Генерация баркодов
        /// </summary>
        /// <remarks>
        /// Метод генерирует массив уникальных баркодов для создания размера в [карточке товара](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post). Можно использовать, если у вас нет собственных баркодов.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2BarcodesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2BarcodesPost200Response</returns>
        System.Threading.Tasks.Task<ContentV2BarcodesPost200Response> ContentV2BarcodesPostAsync(ContentV2BarcodesPostRequest contentV2BarcodesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Генерация баркодов
        /// </summary>
        /// <remarks>
        /// Метод генерирует массив уникальных баркодов для создания размера в [карточке товара](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post). Можно использовать, если у вас нет собственных баркодов.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2BarcodesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2BarcodesPost200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2BarcodesPost200Response>> ContentV2BarcodesPostWithHttpInfoAsync(ContentV2BarcodesPostRequest contentV2BarcodesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Перенос карточек товаров в корзину
        /// </summary>
        /// <remarks>
        /// Метод переносит [карточки товаров в корзину](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post). При этом карточки товаров не удаляются, их можно [восстановить](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1recover/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   После переноса в корзину карточке товара присваивается новый &lt;code&gt;imtID&lt;/code&gt;. &lt;/div&gt;  Карточки товаров удаляются автоматически, если лежат в корзине больше 30 дней. Очистка корзины происходит каждую ночь по московскому времени.&lt;br&gt; Карточки товаров можно удалить в любое время в [личном кабинете](https://seller.wildberries.ru/new-goods/basket-cards).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2CardsDeleteTrashPost200Response</returns>
        System.Threading.Tasks.Task<ContentV2CardsDeleteTrashPost200Response> ContentV2CardsDeleteTrashPostAsync(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Перенос карточек товаров в корзину
        /// </summary>
        /// <remarks>
        /// Метод переносит [карточки товаров в корзину](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post). При этом карточки товаров не удаляются, их можно [восстановить](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1recover/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   После переноса в корзину карточке товара присваивается новый &lt;code&gt;imtID&lt;/code&gt;. &lt;/div&gt;  Карточки товаров удаляются автоматически, если лежат в корзине больше 30 дней. Очистка корзины происходит каждую ночь по московскому времени.&lt;br&gt; Карточки товаров можно удалить в любое время в [личном кабинете](https://seller.wildberries.ru/new-goods/basket-cards).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2CardsDeleteTrashPost200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2CardsDeleteTrashPost200Response>> ContentV2CardsDeleteTrashPostWithHttpInfoAsync(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Список несозданных карточек товаров с ошибками
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список карточек товаров, при создании или редактировании которых произошли ошибки, с описанием этих ошибок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Чтобы убрать карточку товара из списка, нужно повторно сделать запрос на &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post\&quot;&gt;создание&lt;/a&gt; или редактирование карточки товара с исправленными ошибками. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Параметр выбора языка значений полей ответа (для которых предусмотрена мультиязычность).  Не используется в песочнице.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2CardsErrorListGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2CardsErrorListGet200Response> ContentV2CardsErrorListGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Список несозданных карточек товаров с ошибками
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список карточек товаров, при создании или редактировании которых произошли ошибки, с описанием этих ошибок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Чтобы убрать карточку товара из списка, нужно повторно сделать запрос на &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post\&quot;&gt;создание&lt;/a&gt; или редактирование карточки товара с исправленными ошибками. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Параметр выбора языка значений полей ответа (для которых предусмотрена мультиязычность).  Не используется в песочнице.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2CardsErrorListGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2CardsErrorListGet200Response>> ContentV2CardsErrorListGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Лимиты карточек товаров
        /// </summary>
        /// <remarks>
        /// Возвращает бесплатные и платные лимиты продавца на [создание карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post).&lt;br&gt;&lt;br&gt;  Формула для получения количества карточек, которые можно создать:    &gt; (&#x60;freeLimits&#x60; + &#x60;paidLimits&#x60;) - количество созданных карточек  Созданными считаются карточки, которые можно получить через методы [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2CardsLimitsGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2CardsLimitsGet200Response> ContentV2CardsLimitsGetAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Лимиты карточек товаров
        /// </summary>
        /// <remarks>
        /// Возвращает бесплатные и платные лимиты продавца на [создание карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post).&lt;br&gt;&lt;br&gt;  Формула для получения количества карточек, которые можно создать:    &gt; (&#x60;freeLimits&#x60; + &#x60;paidLimits&#x60;) - количество созданных карточек  Созданными считаются карточки, которые можно получить через методы [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2CardsLimitsGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2CardsLimitsGet200Response>> ContentV2CardsLimitsGetWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Объединение и разъединение карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод объединяет и разъединяет карточки товаров. Карточки товаров считаются объединёнными, если у них одинаковый &lt;code&gt;imtID&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Для объединения карточек товаров сделайте запрос **с указанием** &#x60;imtID&#x60;. Можно объединять не более 30 карточек товаров.&lt;br&gt; Для разъединения карточек товаров сделайте запрос **без указания** &#x60;imtID&#x60;. Для разъединенных карточек будут сгенерированы новые &#x60;imtID&#x60;. &lt;br&gt;&lt;br&gt; Если вы разъедините одновременно несколько карточек товаров, эти карточки объединятся в одну и получат новый &#x60;imtID&#x60;.&lt;br&gt; Чтобы присвоить каждой карточке товара уникальный &#x60;imtID&#x60;, необходимо передавать по одной карточке товара за запрос.&lt;br&gt; &lt;br&gt; Максимальный размер запроса 10 Мб.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Объединить можно только карточки товаров с одинаковыми предметами. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsMoveNmPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseCardCreate</returns>
        System.Threading.Tasks.Task<ResponseCardCreate> ContentV2CardsMoveNmPostAsync(ContentV2CardsMoveNmPostRequest? contentV2CardsMoveNmPostRequest = default(ContentV2CardsMoveNmPostRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Объединение и разъединение карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод объединяет и разъединяет карточки товаров. Карточки товаров считаются объединёнными, если у них одинаковый &lt;code&gt;imtID&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Для объединения карточек товаров сделайте запрос **с указанием** &#x60;imtID&#x60;. Можно объединять не более 30 карточек товаров.&lt;br&gt; Для разъединения карточек товаров сделайте запрос **без указания** &#x60;imtID&#x60;. Для разъединенных карточек будут сгенерированы новые &#x60;imtID&#x60;. &lt;br&gt;&lt;br&gt; Если вы разъедините одновременно несколько карточек товаров, эти карточки объединятся в одну и получат новый &#x60;imtID&#x60;.&lt;br&gt; Чтобы присвоить каждой карточке товара уникальный &#x60;imtID&#x60;, необходимо передавать по одной карточке товара за запрос.&lt;br&gt; &lt;br&gt; Максимальный размер запроса 10 Мб.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Объединить можно только карточки товаров с одинаковыми предметами. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsMoveNmPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseCardCreate)</returns>
        System.Threading.Tasks.Task<ApiResponse<ResponseCardCreate>> ContentV2CardsMoveNmPostWithHttpInfoAsync(ContentV2CardsMoveNmPostRequest? contentV2CardsMoveNmPostRequest = default(ContentV2CardsMoveNmPostRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Восстановление карточек товаров из корзины
        /// </summary>
        /// <remarks>
        /// Метод восстанавливает [карточки товаров из корзины](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара сохраняет тот же &lt;code&gt;imtID&lt;/code&gt;, что был присвоен ей при &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1delete~1trash/post\&quot;&gt;перемещении в корзину&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2CardsDeleteTrashPost200Response</returns>
        System.Threading.Tasks.Task<ContentV2CardsDeleteTrashPost200Response> ContentV2CardsRecoverPostAsync(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Восстановление карточек товаров из корзины
        /// </summary>
        /// <remarks>
        /// Метод восстанавливает [карточки товаров из корзины](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара сохраняет тот же &lt;code&gt;imtID&lt;/code&gt;, что был присвоен ей при &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1delete~1trash/post\&quot;&gt;перемещении в корзину&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2CardsDeleteTrashPost200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2CardsDeleteTrashPost200Response>> ContentV2CardsRecoverPostWithHttpInfoAsync(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Редактирование карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод обновляет карточки товаров. Данные для обновления можно получить через [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара перезаписывается при обновлении. Поэтому в запросе нужно передать &lt;strong&gt;все&lt;/strong&gt; параметры карточки, в том числе те, которые вы не собираетесь обновлять. &lt;/div&gt;  Нельзя редактировать или удалять баркоды, но можно добавить дополнительный баркод к карточке товара. Параметры &#x60;photos&#x60;, &#x60;video&#x60; и &#x60;tags&#x60; редактировать или удалять через данный метод нельзя.&lt;br&gt; Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; В одном запросе можно отредактировать максимум 3000 карточек товаров (&#x60;nmID&#x60;). Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUpdatePostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseCardCreate</returns>
        System.Threading.Tasks.Task<ResponseCardCreate> ContentV2CardsUpdatePostAsync(List<ContentV2CardsUpdatePostRequestInner>? contentV2CardsUpdatePostRequestInner = default(List<ContentV2CardsUpdatePostRequestInner>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Редактирование карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод обновляет карточки товаров. Данные для обновления можно получить через [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара перезаписывается при обновлении. Поэтому в запросе нужно передать &lt;strong&gt;все&lt;/strong&gt; параметры карточки, в том числе те, которые вы не собираетесь обновлять. &lt;/div&gt;  Нельзя редактировать или удалять баркоды, но можно добавить дополнительный баркод к карточке товара. Параметры &#x60;photos&#x60;, &#x60;video&#x60; и &#x60;tags&#x60; редактировать или удалять через данный метод нельзя.&lt;br&gt; Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; В одном запросе можно отредактировать максимум 3000 карточек товаров (&#x60;nmID&#x60;). Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUpdatePostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseCardCreate)</returns>
        System.Threading.Tasks.Task<ApiResponse<ResponseCardCreate>> ContentV2CardsUpdatePostWithHttpInfoAsync(List<ContentV2CardsUpdatePostRequestInner>? contentV2CardsUpdatePostRequestInner = default(List<ContentV2CardsUpdatePostRequestInner>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Создание карточек товаров с объединением
        /// </summary>
        /// <remarks>
        /// Метод создаёт новые карточки товаров, объединяя их с существующими карточками.  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt;Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadAddPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseCardCreate</returns>
        System.Threading.Tasks.Task<ResponseCardCreate> ContentV2CardsUploadAddPostAsync(ContentV2CardsUploadAddPostRequest? contentV2CardsUploadAddPostRequest = default(ContentV2CardsUploadAddPostRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Создание карточек товаров с объединением
        /// </summary>
        /// <remarks>
        /// Метод создаёт новые карточки товаров, объединяя их с существующими карточками.  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt;Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadAddPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseCardCreate)</returns>
        System.Threading.Tasks.Task<ApiResponse<ResponseCardCreate>> ContentV2CardsUploadAddPostWithHttpInfoAsync(ContentV2CardsUploadAddPostRequest? contentV2CardsUploadAddPostRequest = default(ContentV2CardsUploadAddPostRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Создание карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод создаёт карточки товаров c указанием описаний и характеристик товаров.&lt;br&gt;  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Есть две формы запроса: для создания отдельных и объединённых карточек товаров. &lt;/div&gt;  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt; В одном запросе можно создать максимум 100 объединённых карточек товаров (&#x60;imtID&#x60;), по 30 карточек товаров в каждой. Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadPostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseCardCreate</returns>
        System.Threading.Tasks.Task<ResponseCardCreate> ContentV2CardsUploadPostAsync(List<ContentV2CardsUploadPostRequestInner>? contentV2CardsUploadPostRequestInner = default(List<ContentV2CardsUploadPostRequestInner>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Создание карточек товаров
        /// </summary>
        /// <remarks>
        /// Метод создаёт карточки товаров c указанием описаний и характеристик товаров.&lt;br&gt;  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Есть две формы запроса: для создания отдельных и объединённых карточек товаров. &lt;/div&gt;  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt; В одном запросе можно создать максимум 100 объединённых карточек товаров (&#x60;imtID&#x60;), по 30 карточек товаров в каждой. Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadPostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseCardCreate)</returns>
        System.Threading.Tasks.Task<ApiResponse<ResponseCardCreate>> ContentV2CardsUploadPostWithHttpInfoAsync(List<ContentV2CardsUploadPostRequestInner>? contentV2CardsUploadPostRequestInner = default(List<ContentV2CardsUploadPostRequestInner>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Цвет
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Цвет&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectoryColorsGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2DirectoryColorsGet200Response> ContentV2DirectoryColorsGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Цвет
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Цвет&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectoryColorsGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2DirectoryColorsGet200Response>> ContentV2DirectoryColorsGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Страна производства
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Страна производства&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectoryCountriesGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2DirectoryCountriesGet200Response> ContentV2DirectoryCountriesGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Страна производства
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Страна производства&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectoryCountriesGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2DirectoryCountriesGet200Response>> ContentV2DirectoryCountriesGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Пол
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Пол&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectoryKindsGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2DirectoryKindsGet200Response> ContentV2DirectoryKindsGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Пол
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Пол&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectoryKindsGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2DirectoryKindsGet200Response>> ContentV2DirectoryKindsGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Сезон
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Сезон&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectorySeasonsGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2DirectorySeasonsGet200Response> ContentV2DirectorySeasonsGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Сезон
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Сезон&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectorySeasonsGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2DirectorySeasonsGet200Response>> ContentV2DirectorySeasonsGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// ТНВЭД-код
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список ТНВЭД-кодов по ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get) и фрагменту ТНВЭД-кода.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectID">ID предмета</param>
        /// <param name="search">Поиск по ТНВЭД-коду. Работает только в паре с &#x60;subjectID&#x60; (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectoryTnvedGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2DirectoryTnvedGet200Response> ContentV2DirectoryTnvedGetAsync(int subjectID, int? search = default(int?), string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// ТНВЭД-код
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список ТНВЭД-кодов по ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get) и фрагменту ТНВЭД-кода.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectID">ID предмета</param>
        /// <param name="search">Поиск по ТНВЭД-коду. Работает только в паре с &#x60;subjectID&#x60; (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectoryTnvedGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2DirectoryTnvedGet200Response>> ContentV2DirectoryTnvedGetWithHttpInfoAsync(int subjectID, int? search = default(int?), string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Ставка НДС
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Ставка НДС&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectoryVatGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2DirectoryVatGet200Response> ContentV2DirectoryVatGetAsync(string locale, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Ставка НДС
        /// </summary>
        /// <remarks>
        /// Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Ставка НДС&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectoryVatGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2DirectoryVatGet200Response>> ContentV2DirectoryVatGetWithHttpInfoAsync(string locale, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Список карточек товаров
        /// </summary>
        /// <remarks>
        /// &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список созданных карточек товаров.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   В ответе метода не будет карточек, находящихся в корзине. Получить такие карточки можно через &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post\&quot;&gt;отдельный метод&lt;/a&gt;. &lt;/div&gt;      Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsListPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице.    (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2GetCardsListPost200Response</returns>
        System.Threading.Tasks.Task<ContentV2GetCardsListPost200Response> ContentV2GetCardsListPostAsync(ContentV2GetCardsListPostRequest contentV2GetCardsListPostRequest, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Список карточек товаров
        /// </summary>
        /// <remarks>
        /// &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список созданных карточек товаров.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   В ответе метода не будет карточек, находящихся в корзине. Получить такие карточки можно через &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post\&quot;&gt;отдельный метод&lt;/a&gt;. &lt;/div&gt;      Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsListPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице.    (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2GetCardsListPost200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2GetCardsListPost200Response>> ContentV2GetCardsListPostWithHttpInfoAsync(ContentV2GetCardsListPostRequest contentV2GetCardsListPostRequest, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Список карточек товаров в корзине
        /// </summary>
        /// <remarks>
        /// &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список карточек товаров в корзине.&lt;br&gt;&lt;br&gt;  Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;    &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца   &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsTrashPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;: &#x60;ru&#x60;, &#x60;en&#x60;, &#x60;zh&#x60;.  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2GetCardsTrashPost200Response</returns>
        System.Threading.Tasks.Task<ContentV2GetCardsTrashPost200Response> ContentV2GetCardsTrashPostAsync(ContentV2GetCardsTrashPostRequest contentV2GetCardsTrashPostRequest, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Список карточек товаров в корзине
        /// </summary>
        /// <remarks>
        /// &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список карточек товаров в корзине.&lt;br&gt;&lt;br&gt;  Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;    &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца   &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsTrashPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;: &#x60;ru&#x60;, &#x60;en&#x60;, &#x60;zh&#x60;.  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2GetCardsTrashPost200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2GetCardsTrashPost200Response>> ContentV2GetCardsTrashPostWithHttpInfoAsync(ContentV2GetCardsTrashPostRequest contentV2GetCardsTrashPostRequest, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Список предметов
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список названий [родительских категорий предметов](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1parent~1all/get) и их предметов с ID. Например, у категории &#x60;Игрушки&#x60; будут предметы &#x60;Калейдоскопы&#x60;, &#x60;Куклы&#x60;, &#x60;Мячики&#x60;.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">Поиск по названию предмета (Носки), поиск работает по подстроке, искать можно на любом из поддерживаемых языков. (optional)</param>
        /// <param name="limit">Количество предметов, максимум 1 000 (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="offset">Номер позиции, с которой необходимо получить ответ (optional)</param>
        /// <param name="parentID">ID родительской категории предмета (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2ObjectAllGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2ObjectAllGet200Response> ContentV2ObjectAllGetAsync(string? name = default(string?), int? limit = default(int?), string? locale = default(string?), int? offset = default(int?), int? parentID = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Список предметов
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список названий [родительских категорий предметов](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1parent~1all/get) и их предметов с ID. Например, у категории &#x60;Игрушки&#x60; будут предметы &#x60;Калейдоскопы&#x60;, &#x60;Куклы&#x60;, &#x60;Мячики&#x60;.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">Поиск по названию предмета (Носки), поиск работает по подстроке, искать можно на любом из поддерживаемых языков. (optional)</param>
        /// <param name="limit">Количество предметов, максимум 1 000 (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="offset">Номер позиции, с которой необходимо получить ответ (optional)</param>
        /// <param name="parentID">ID родительской категории предмета (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2ObjectAllGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2ObjectAllGet200Response>> ContentV2ObjectAllGetWithHttpInfoAsync(string? name = default(string?), int? limit = default(int?), string? locale = default(string?), int? offset = default(int?), int? parentID = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Характеристики предмета
        /// </summary>
        /// <remarks>
        /// Метод предоставляет параметры характеристик предмета: названия, типы данных, единицы измерения и так далее. В запросе необходимо указать ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get).   &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Для получения характеристик &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1colors/get\&quot;&gt;Цвет&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1kinds/get\&quot;&gt;Пол&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1countries/get\&quot;&gt;Страна производства&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1seasons/get\&quot;&gt;Сезон&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1vat/get\&quot;&gt;Ставка НДС&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1tnved/get\&quot;&gt;ТНВЭД-код&lt;/a&gt; используйте отдельные методы &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectId">ID предмета</param>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2ObjectCharcsSubjectIdGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2ObjectCharcsSubjectIdGet200Response> ContentV2ObjectCharcsSubjectIdGetAsync(int subjectId, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Характеристики предмета
        /// </summary>
        /// <remarks>
        /// Метод предоставляет параметры характеристик предмета: названия, типы данных, единицы измерения и так далее. В запросе необходимо указать ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get).   &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Для получения характеристик &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1colors/get\&quot;&gt;Цвет&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1kinds/get\&quot;&gt;Пол&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1countries/get\&quot;&gt;Страна производства&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1seasons/get\&quot;&gt;Сезон&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1vat/get\&quot;&gt;Ставка НДС&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1tnved/get\&quot;&gt;ТНВЭД-код&lt;/a&gt; используйте отдельные методы &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectId">ID предмета</param>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2ObjectCharcsSubjectIdGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2ObjectCharcsSubjectIdGet200Response>> ContentV2ObjectCharcsSubjectIdGetWithHttpInfoAsync(int subjectId, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Родительские категории товаров
        /// </summary>
        /// <remarks>
        /// Метод предоставляет названия и ID всех родительских категорий для [создания карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov): например, &#x60;Электроника&#x60;, &#x60;Бытовая химия&#x60;, &#x60;Рукоделие&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык поля ответа &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2ObjectParentAllGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2ObjectParentAllGet200Response> ContentV2ObjectParentAllGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Родительские категории товаров
        /// </summary>
        /// <remarks>
        /// Метод предоставляет названия и ID всех родительских категорий для [создания карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov): например, &#x60;Электроника&#x60;, &#x60;Бытовая химия&#x60;, &#x60;Рукоделие&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык поля ответа &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2ObjectParentAllGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2ObjectParentAllGet200Response>> ContentV2ObjectParentAllGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Удаление ярлыка
        /// </summary>
        /// <remarks>
        /// Метод удаляет ярлык из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2TagIdDelete200Response</returns>
        System.Threading.Tasks.Task<ContentV2TagIdDelete200Response> ContentV2TagIdDeleteAsync(int id, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Удаление ярлыка
        /// </summary>
        /// <remarks>
        /// Метод удаляет ярлык из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2TagIdDelete200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2TagIdDelete200Response>> ContentV2TagIdDeleteWithHttpInfoAsync(int id, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Изменение ярлыка
        /// </summary>
        /// <remarks>
        /// Метод заменяет данные ярлыка: имя и цвет. &lt;br&gt;Новые данные можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="contentV2TagIdPatchRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2TagIdPatch200Response</returns>
        System.Threading.Tasks.Task<ContentV2TagIdPatch200Response> ContentV2TagIdPatchAsync(int id, ContentV2TagIdPatchRequest contentV2TagIdPatchRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Изменение ярлыка
        /// </summary>
        /// <remarks>
        /// Метод заменяет данные ярлыка: имя и цвет. &lt;br&gt;Новые данные можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="contentV2TagIdPatchRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2TagIdPatch200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2TagIdPatch200Response>> ContentV2TagIdPatchWithHttpInfoAsync(int id, ContentV2TagIdPatchRequest contentV2TagIdPatchRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Управление ярлыками в карточке товара
        /// </summary>
        /// <remarks>
        /// Метод добавляет или снимает ярлык с карточки товара. К карточке можно добавить максимум 15 ярлыков.&lt;br&gt; При удалении ярлыка из карточки товара он не удаляется из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagNomenclatureLinkPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseContentError6</returns>
        System.Threading.Tasks.Task<ResponseContentError6> ContentV2TagNomenclatureLinkPostAsync(ContentV2TagNomenclatureLinkPostRequest contentV2TagNomenclatureLinkPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Управление ярлыками в карточке товара
        /// </summary>
        /// <remarks>
        /// Метод добавляет или снимает ярлык с карточки товара. К карточке можно добавить максимум 15 ярлыков.&lt;br&gt; При удалении ярлыка из карточки товара он не удаляется из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagNomenclatureLinkPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseContentError6)</returns>
        System.Threading.Tasks.Task<ApiResponse<ResponseContentError6>> ContentV2TagNomenclatureLinkPostWithHttpInfoAsync(ContentV2TagNomenclatureLinkPostRequest contentV2TagNomenclatureLinkPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Создание ярлыка
        /// </summary>
        /// <remarks>
        /// Метод добавляет один ярлык продавца. Можно создать максимум 15 ярлыков для одного продавца. Максимальная длина ярлыка — 15 символов. &lt;br&gt;Созданный ярлык можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseContentError6</returns>
        System.Threading.Tasks.Task<ResponseContentError6> ContentV2TagPostAsync(ContentV2TagPostRequest contentV2TagPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Создание ярлыка
        /// </summary>
        /// <remarks>
        /// Метод добавляет один ярлык продавца. Можно создать максимум 15 ярлыков для одного продавца. Максимальная длина ярлыка — 15 символов. &lt;br&gt;Созданный ярлык можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseContentError6)</returns>
        System.Threading.Tasks.Task<ApiResponse<ResponseContentError6>> ContentV2TagPostWithHttpInfoAsync(ContentV2TagPostRequest contentV2TagPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Список ярлыков
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список и характеристики всех ярлыков продавца для группировки и фильтрации товаров.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2TagsGet200Response</returns>
        System.Threading.Tasks.Task<ContentV2TagsGet200Response> ContentV2TagsGetAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Список ярлыков
        /// </summary>
        /// <remarks>
        /// Метод предоставляет список и характеристики всех ярлыков продавца для группировки и фильтрации товаров.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2TagsGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV2TagsGet200Response>> ContentV2TagsGetWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Загрузить медиафайл
        /// </summary>
        /// <remarks>
        /// Метод загружает и добавляет один медиафайл к карточке товара.  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700x900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xNmId">Артикул WB</param>
        /// <param name="xPhotoNumber">Номер медиафайла на загрузку, начинается с &#x60;1&#x60;. При загрузке видео всегда указывайте &#x60;1&#x60;.  Чтобы добавить изображение к уже загруженным, номер медиафайла должен быть больше количества уже загруженных медиафайлов. </param>
        /// <param name="uploadfile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV3MediaFilePost200Response</returns>
        System.Threading.Tasks.Task<ContentV3MediaFilePost200Response> ContentV3MediaFilePostAsync(string xNmId, int xPhotoNumber, System.IO.Stream? uploadfile = default(System.IO.Stream?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Загрузить медиафайл
        /// </summary>
        /// <remarks>
        /// Метод загружает и добавляет один медиафайл к карточке товара.  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700x900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xNmId">Артикул WB</param>
        /// <param name="xPhotoNumber">Номер медиафайла на загрузку, начинается с &#x60;1&#x60;. При загрузке видео всегда указывайте &#x60;1&#x60;.  Чтобы добавить изображение к уже загруженным, номер медиафайла должен быть больше количества уже загруженных медиафайлов. </param>
        /// <param name="uploadfile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV3MediaFilePost200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV3MediaFilePost200Response>> ContentV3MediaFilePostWithHttpInfoAsync(string xNmId, int xPhotoNumber, System.IO.Stream? uploadfile = default(System.IO.Stream?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Загрузить медиафайлы по ссылкам
        /// </summary>
        /// <remarks>
        /// Метод загружает набор медиафайлов в карточку товара через указание ссылок в запросе.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Новые медиафайлы полностью заменяют старые. Чтобы добавить новые медиафайлы, укажите в запросе ссылки одновременно на новые и старые медиафайлы. &lt;/div&gt;  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700×900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  Если видео или хотя бы одно изображение в запросе не соответствует требованиям, то даже при успешном ответе ни одно изображение/видео не загрузится.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV3MediaSavePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV3MediaFilePost200Response</returns>
        System.Threading.Tasks.Task<ContentV3MediaFilePost200Response> ContentV3MediaSavePostAsync(ContentV3MediaSavePostRequest contentV3MediaSavePostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Загрузить медиафайлы по ссылкам
        /// </summary>
        /// <remarks>
        /// Метод загружает набор медиафайлов в карточку товара через указание ссылок в запросе.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Новые медиафайлы полностью заменяют старые. Чтобы добавить новые медиафайлы, укажите в запросе ссылки одновременно на новые и старые медиафайлы. &lt;/div&gt;  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700×900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  Если видео или хотя бы одно изображение в запросе не соответствует требованиям, то даже при успешном ответе ни одно изображение/видео не загрузится.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV3MediaSavePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV3MediaFilePost200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ContentV3MediaFilePost200Response>> ContentV3MediaSavePostWithHttpInfoAsync(ContentV3MediaSavePostRequest contentV3MediaSavePostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApi : IDefaultApiSync, IDefaultApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DefaultApi : IDefaultApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DefaultApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DefaultApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DefaultApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public DefaultApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Детализация необработанной загрузки Метод предоставляет информацию о товарах и ошибках в товарах из загрузки в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2BufferGoodsTaskGet200Response</returns>
        public ApiV2BufferGoodsTaskGet200Response ApiV2BufferGoodsTaskGet(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2BufferGoodsTaskGet200Response> localVarResponse = ApiV2BufferGoodsTaskGetWithHttpInfo(limit, uploadID, offset);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Детализация необработанной загрузки Метод предоставляет информацию о товарах и ошибках в товарах из загрузки в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2BufferGoodsTaskGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ApiV2BufferGoodsTaskGet200Response> ApiV2BufferGoodsTaskGetWithHttpInfo(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "uploadID", uploadID));

            localVarRequestOptions.Operation = "DefaultApi.ApiV2BufferGoodsTaskGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ApiV2BufferGoodsTaskGet200Response>("/api/v2/buffer/goods/task", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2BufferGoodsTaskGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Детализация необработанной загрузки Метод предоставляет информацию о товарах и ошибках в товарах из загрузки в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2BufferGoodsTaskGet200Response</returns>
        public async System.Threading.Tasks.Task<ApiV2BufferGoodsTaskGet200Response> ApiV2BufferGoodsTaskGetAsync(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2BufferGoodsTaskGet200Response> localVarResponse = await ApiV2BufferGoodsTaskGetWithHttpInfoAsync(limit, uploadID, offset, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Детализация необработанной загрузки Метод предоставляет информацию о товарах и ошибках в товарах из загрузки в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2BufferGoodsTaskGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ApiV2BufferGoodsTaskGet200Response>> ApiV2BufferGoodsTaskGetWithHttpInfoAsync(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "uploadID", uploadID));

            localVarRequestOptions.Operation = "DefaultApi.ApiV2BufferGoodsTaskGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ApiV2BufferGoodsTaskGet200Response>("/api/v2/buffer/goods/task", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2BufferGoodsTaskGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Состояние необработанной загрузки Метод предоставляет информацию про загрузку скидок в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2BufferTasksGet200Response</returns>
        public ApiV2BufferTasksGet200Response ApiV2BufferTasksGet(int uploadID, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2BufferTasksGet200Response> localVarResponse = ApiV2BufferTasksGetWithHttpInfo(uploadID);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Состояние необработанной загрузки Метод предоставляет информацию про загрузку скидок в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2BufferTasksGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ApiV2BufferTasksGet200Response> ApiV2BufferTasksGetWithHttpInfo(int uploadID, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "uploadID", uploadID));

            localVarRequestOptions.Operation = "DefaultApi.ApiV2BufferTasksGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ApiV2BufferTasksGet200Response>("/api/v2/buffer/tasks", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2BufferTasksGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Состояние необработанной загрузки Метод предоставляет информацию про загрузку скидок в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2BufferTasksGet200Response</returns>
        public async System.Threading.Tasks.Task<ApiV2BufferTasksGet200Response> ApiV2BufferTasksGetAsync(int uploadID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2BufferTasksGet200Response> localVarResponse = await ApiV2BufferTasksGetWithHttpInfoAsync(uploadID, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Состояние необработанной загрузки Метод предоставляет информацию про загрузку скидок в обработке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Необработанная загрузка — это загрузка скидок для &lt;a href&#x3D;\&quot;/openapi/promotion#tag/Kalendar-akcij\&quot;&gt;календаря акций&lt;/a&gt;. Такие скидки применятся к товарам только в момент начала акции. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2BufferTasksGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ApiV2BufferTasksGet200Response>> ApiV2BufferTasksGetWithHttpInfoAsync(int uploadID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "uploadID", uploadID));

            localVarRequestOptions.Operation = "DefaultApi.ApiV2BufferTasksGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ApiV2BufferTasksGet200Response>("/api/v2/buffer/tasks", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2BufferTasksGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Детализация обработанной загрузки Метод предоставляет информацию о товарах и об ошибках в товарах в обработанной загрузке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2HistoryGoodsTaskGet200Response</returns>
        public ApiV2HistoryGoodsTaskGet200Response ApiV2HistoryGoodsTaskGet(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2HistoryGoodsTaskGet200Response> localVarResponse = ApiV2HistoryGoodsTaskGetWithHttpInfo(limit, uploadID, offset);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Детализация обработанной загрузки Метод предоставляет информацию о товарах и об ошибках в товарах в обработанной загрузке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2HistoryGoodsTaskGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ApiV2HistoryGoodsTaskGet200Response> ApiV2HistoryGoodsTaskGetWithHttpInfo(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "uploadID", uploadID));

            localVarRequestOptions.Operation = "DefaultApi.ApiV2HistoryGoodsTaskGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ApiV2HistoryGoodsTaskGet200Response>("/api/v2/history/goods/task", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2HistoryGoodsTaskGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Детализация обработанной загрузки Метод предоставляет информацию о товарах и об ошибках в товарах в обработанной загрузке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2HistoryGoodsTaskGet200Response</returns>
        public async System.Threading.Tasks.Task<ApiV2HistoryGoodsTaskGet200Response> ApiV2HistoryGoodsTaskGetAsync(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2HistoryGoodsTaskGet200Response> localVarResponse = await ApiV2HistoryGoodsTaskGetWithHttpInfoAsync(limit, uploadID, offset, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Детализация обработанной загрузки Метод предоставляет информацию о товарах и об ошибках в товарах в обработанной загрузке.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2HistoryGoodsTaskGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ApiV2HistoryGoodsTaskGet200Response>> ApiV2HistoryGoodsTaskGetWithHttpInfoAsync(int limit, int uploadID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "uploadID", uploadID));

            localVarRequestOptions.Operation = "DefaultApi.ApiV2HistoryGoodsTaskGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ApiV2HistoryGoodsTaskGet200Response>("/api/v2/history/goods/task", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2HistoryGoodsTaskGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Состояние обработанной загрузки Метод предоставляет информацию об обработанной загрузке цен и скидок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2HistoryTasksGet200Response</returns>
        public ApiV2HistoryTasksGet200Response ApiV2HistoryTasksGet(int uploadID, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2HistoryTasksGet200Response> localVarResponse = ApiV2HistoryTasksGetWithHttpInfo(uploadID);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Состояние обработанной загрузки Метод предоставляет информацию об обработанной загрузке цен и скидок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2HistoryTasksGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ApiV2HistoryTasksGet200Response> ApiV2HistoryTasksGetWithHttpInfo(int uploadID, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "uploadID", uploadID));

            localVarRequestOptions.Operation = "DefaultApi.ApiV2HistoryTasksGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ApiV2HistoryTasksGet200Response>("/api/v2/history/tasks", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2HistoryTasksGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Состояние обработанной загрузки Метод предоставляет информацию об обработанной загрузке цен и скидок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2HistoryTasksGet200Response</returns>
        public async System.Threading.Tasks.Task<ApiV2HistoryTasksGet200Response> ApiV2HistoryTasksGetAsync(int uploadID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2HistoryTasksGet200Response> localVarResponse = await ApiV2HistoryTasksGetWithHttpInfoAsync(uploadID, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Состояние обработанной загрузки Метод предоставляет информацию об обработанной загрузке цен и скидок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Обработанная загрузка — это загрузка цен и скидок для &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post\&quot;&gt;товаров&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post\&quot;&gt;размеров товаров&lt;/a&gt;, а также скидок &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1club-discount/post\&quot;&gt;WB Клуба&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="uploadID">ID загрузки</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2HistoryTasksGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ApiV2HistoryTasksGet200Response>> ApiV2HistoryTasksGetWithHttpInfoAsync(int uploadID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "uploadID", uploadID));

            localVarRequestOptions.Operation = "DefaultApi.ApiV2HistoryTasksGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ApiV2HistoryTasksGet200Response>("/api/v2/history/tasks", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2HistoryTasksGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить товары Метод предоставляет информацию о товаре по его артикулу. &lt;br&gt;&lt;br&gt; Чтобы получить информацию обо всех товарах продавца, оставьте артикул пустым. Чтобы получить информацию о размерах товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="filterNmID">Артикул WB, по которому искать товар (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2ListGoodsFilterGet200Response</returns>
        public ApiV2ListGoodsFilterGet200Response ApiV2ListGoodsFilterGet(int limit, int? offset = default(int?), int? filterNmID = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2ListGoodsFilterGet200Response> localVarResponse = ApiV2ListGoodsFilterGetWithHttpInfo(limit, offset, filterNmID);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить товары Метод предоставляет информацию о товаре по его артикулу. &lt;br&gt;&lt;br&gt; Чтобы получить информацию обо всех товарах продавца, оставьте артикул пустым. Чтобы получить информацию о размерах товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="filterNmID">Артикул WB, по которому искать товар (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2ListGoodsFilterGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ApiV2ListGoodsFilterGet200Response> ApiV2ListGoodsFilterGetWithHttpInfo(int limit, int? offset = default(int?), int? filterNmID = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (filterNmID != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "filterNmID", filterNmID));
            }

            localVarRequestOptions.Operation = "DefaultApi.ApiV2ListGoodsFilterGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ApiV2ListGoodsFilterGet200Response>("/api/v2/list/goods/filter", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ListGoodsFilterGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить товары Метод предоставляет информацию о товаре по его артикулу. &lt;br&gt;&lt;br&gt; Чтобы получить информацию обо всех товарах продавца, оставьте артикул пустым. Чтобы получить информацию о размерах товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="filterNmID">Артикул WB, по которому искать товар (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2ListGoodsFilterGet200Response</returns>
        public async System.Threading.Tasks.Task<ApiV2ListGoodsFilterGet200Response> ApiV2ListGoodsFilterGetAsync(int limit, int? offset = default(int?), int? filterNmID = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2ListGoodsFilterGet200Response> localVarResponse = await ApiV2ListGoodsFilterGetWithHttpInfoAsync(limit, offset, filterNmID, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить товары Метод предоставляет информацию о товаре по его артикулу. &lt;br&gt;&lt;br&gt; Чтобы получить информацию обо всех товарах продавца, оставьте артикул пустым. Чтобы получить информацию о размерах товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="filterNmID">Артикул WB, по которому искать товар (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2ListGoodsFilterGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ApiV2ListGoodsFilterGet200Response>> ApiV2ListGoodsFilterGetWithHttpInfoAsync(int limit, int? offset = default(int?), int? filterNmID = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (filterNmID != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "filterNmID", filterNmID));
            }

            localVarRequestOptions.Operation = "DefaultApi.ApiV2ListGoodsFilterGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ApiV2ListGoodsFilterGet200Response>("/api/v2/list/goods/filter", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ListGoodsFilterGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить размеры товара Метод предоставляет информацию обо всех размерах одного товара. &lt;br&gt;&lt;br&gt; Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для таких товаров &#x60;editableSizePrice: true&#x60;.  &lt;br&gt;&lt;br&gt; Чтобы получить информацию о самом товаре, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1filter/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="nmID">Артикул WB</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2ListGoodsSizeNmGet200Response</returns>
        public ApiV2ListGoodsSizeNmGet200Response ApiV2ListGoodsSizeNmGet(int limit, int nmID, int? offset = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2ListGoodsSizeNmGet200Response> localVarResponse = ApiV2ListGoodsSizeNmGetWithHttpInfo(limit, nmID, offset);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить размеры товара Метод предоставляет информацию обо всех размерах одного товара. &lt;br&gt;&lt;br&gt; Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для таких товаров &#x60;editableSizePrice: true&#x60;.  &lt;br&gt;&lt;br&gt; Чтобы получить информацию о самом товаре, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1filter/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="nmID">Артикул WB</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2ListGoodsSizeNmGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ApiV2ListGoodsSizeNmGet200Response> ApiV2ListGoodsSizeNmGetWithHttpInfo(int limit, int nmID, int? offset = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "nmID", nmID));

            localVarRequestOptions.Operation = "DefaultApi.ApiV2ListGoodsSizeNmGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ApiV2ListGoodsSizeNmGet200Response>("/api/v2/list/goods/size/nm", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ListGoodsSizeNmGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить размеры товара Метод предоставляет информацию обо всех размерах одного товара. &lt;br&gt;&lt;br&gt; Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для таких товаров &#x60;editableSizePrice: true&#x60;.  &lt;br&gt;&lt;br&gt; Чтобы получить информацию о самом товаре, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1filter/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="nmID">Артикул WB</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2ListGoodsSizeNmGet200Response</returns>
        public async System.Threading.Tasks.Task<ApiV2ListGoodsSizeNmGet200Response> ApiV2ListGoodsSizeNmGetAsync(int limit, int nmID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2ListGoodsSizeNmGet200Response> localVarResponse = await ApiV2ListGoodsSizeNmGetWithHttpInfoAsync(limit, nmID, offset, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить размеры товара Метод предоставляет информацию обо всех размерах одного товара. &lt;br&gt;&lt;br&gt; Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для таких товаров &#x60;editableSizePrice: true&#x60;.  &lt;br&gt;&lt;br&gt; Чтобы получить информацию о самом товаре, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1filter/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="nmID">Артикул WB</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2ListGoodsSizeNmGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ApiV2ListGoodsSizeNmGet200Response>> ApiV2ListGoodsSizeNmGetWithHttpInfoAsync(int limit, int nmID, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "nmID", nmID));

            localVarRequestOptions.Operation = "DefaultApi.ApiV2ListGoodsSizeNmGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ApiV2ListGoodsSizeNmGet200Response>("/api/v2/list/goods/size/nm", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ListGoodsSizeNmGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить товары в карантине Метод предоставляет информацию о товарах в карантине. &lt;br&gt;&lt;br&gt; Если новая цена товара со скидкой будет минимум в 3 раза меньше старой, товар попадёт [в карантин](https://seller.wildberries.ru/discount-and-prices/quarantine) и будет продаваться по старой цене. Ошибка об этом будет в ответах методов [состояний загрузок](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get). &lt;br&gt;&lt;br&gt; Вы можете изменить цену или скидку с помощью API либо вывести товар из карантина [в личном кабинете](https://seller.wildberries.ru/discount-and-prices/quarantine). &lt;br&gt;&lt;br&gt; Для товаров с [поразмерной установкой цен](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post) карантин не применяется.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV2QuarantineGoodsGet200Response</returns>
        public ApiV2QuarantineGoodsGet200Response ApiV2QuarantineGoodsGet(int limit, int? offset = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2QuarantineGoodsGet200Response> localVarResponse = ApiV2QuarantineGoodsGetWithHttpInfo(limit, offset);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить товары в карантине Метод предоставляет информацию о товарах в карантине. &lt;br&gt;&lt;br&gt; Если новая цена товара со скидкой будет минимум в 3 раза меньше старой, товар попадёт [в карантин](https://seller.wildberries.ru/discount-and-prices/quarantine) и будет продаваться по старой цене. Ошибка об этом будет в ответах методов [состояний загрузок](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get). &lt;br&gt;&lt;br&gt; Вы можете изменить цену или скидку с помощью API либо вывести товар из карантина [в личном кабинете](https://seller.wildberries.ru/discount-and-prices/quarantine). &lt;br&gt;&lt;br&gt; Для товаров с [поразмерной установкой цен](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post) карантин не применяется.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV2QuarantineGoodsGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ApiV2QuarantineGoodsGet200Response> ApiV2QuarantineGoodsGetWithHttpInfo(int limit, int? offset = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }

            localVarRequestOptions.Operation = "DefaultApi.ApiV2QuarantineGoodsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ApiV2QuarantineGoodsGet200Response>("/api/v2/quarantine/goods", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2QuarantineGoodsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить товары в карантине Метод предоставляет информацию о товарах в карантине. &lt;br&gt;&lt;br&gt; Если новая цена товара со скидкой будет минимум в 3 раза меньше старой, товар попадёт [в карантин](https://seller.wildberries.ru/discount-and-prices/quarantine) и будет продаваться по старой цене. Ошибка об этом будет в ответах методов [состояний загрузок](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get). &lt;br&gt;&lt;br&gt; Вы можете изменить цену или скидку с помощью API либо вывести товар из карантина [в личном кабинете](https://seller.wildberries.ru/discount-and-prices/quarantine). &lt;br&gt;&lt;br&gt; Для товаров с [поразмерной установкой цен](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post) карантин не применяется.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV2QuarantineGoodsGet200Response</returns>
        public async System.Threading.Tasks.Task<ApiV2QuarantineGoodsGet200Response> ApiV2QuarantineGoodsGetAsync(int limit, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV2QuarantineGoodsGet200Response> localVarResponse = await ApiV2QuarantineGoodsGetWithHttpInfoAsync(limit, offset, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить товары в карантине Метод предоставляет информацию о товарах в карантине. &lt;br&gt;&lt;br&gt; Если новая цена товара со скидкой будет минимум в 3 раза меньше старой, товар попадёт [в карантин](https://seller.wildberries.ru/discount-and-prices/quarantine) и будет продаваться по старой цене. Ошибка об этом будет в ответах методов [состояний загрузок](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get). &lt;br&gt;&lt;br&gt; Вы можете изменить цену или скидку с помощью API либо вывести товар из карантина [в личном кабинете](https://seller.wildberries.ru/discount-and-prices/quarantine). &lt;br&gt;&lt;br&gt; Для товаров с [поразмерной установкой цен](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post) карантин не применяется.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов</param>
        /// <param name="offset">После какого элемента выдавать данные (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV2QuarantineGoodsGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ApiV2QuarantineGoodsGet200Response>> ApiV2QuarantineGoodsGetWithHttpInfoAsync(int limit, int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }

            localVarRequestOptions.Operation = "DefaultApi.ApiV2QuarantineGoodsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ApiV2QuarantineGoodsGet200Response>("/api/v2/quarantine/goods", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2QuarantineGoodsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Установить скидки WB Клуба Устанавливает скидки для товаров в рамках подписки [WB Клуб](https://seller.wildberries.ru/help-center/article/A-337).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskClubDiscountPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TaskCreated</returns>
        public TaskCreated ApiV2UploadTaskClubDiscountPost(ApiV2UploadTaskClubDiscountPostRequest apiV2UploadTaskClubDiscountPostRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<TaskCreated> localVarResponse = ApiV2UploadTaskClubDiscountPostWithHttpInfo(apiV2UploadTaskClubDiscountPostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Установить скидки WB Клуба Устанавливает скидки для товаров в рамках подписки [WB Клуб](https://seller.wildberries.ru/help-center/article/A-337).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskClubDiscountPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TaskCreated</returns>
        public Org.OpenAPITools.Client.ApiResponse<TaskCreated> ApiV2UploadTaskClubDiscountPostWithHttpInfo(ApiV2UploadTaskClubDiscountPostRequest apiV2UploadTaskClubDiscountPostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'apiV2UploadTaskClubDiscountPostRequest' is set
            if (apiV2UploadTaskClubDiscountPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV2UploadTaskClubDiscountPostRequest' when calling DefaultApi->ApiV2UploadTaskClubDiscountPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = apiV2UploadTaskClubDiscountPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV2UploadTaskClubDiscountPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<TaskCreated>("/api/v2/upload/task/club-discount", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2UploadTaskClubDiscountPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Установить скидки WB Клуба Устанавливает скидки для товаров в рамках подписки [WB Клуб](https://seller.wildberries.ru/help-center/article/A-337).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskClubDiscountPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TaskCreated</returns>
        public async System.Threading.Tasks.Task<TaskCreated> ApiV2UploadTaskClubDiscountPostAsync(ApiV2UploadTaskClubDiscountPostRequest apiV2UploadTaskClubDiscountPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<TaskCreated> localVarResponse = await ApiV2UploadTaskClubDiscountPostWithHttpInfoAsync(apiV2UploadTaskClubDiscountPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Установить скидки WB Клуба Устанавливает скидки для товаров в рамках подписки [WB Клуб](https://seller.wildberries.ru/help-center/article/A-337).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskClubDiscountPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TaskCreated)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<TaskCreated>> ApiV2UploadTaskClubDiscountPostWithHttpInfoAsync(ApiV2UploadTaskClubDiscountPostRequest apiV2UploadTaskClubDiscountPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'apiV2UploadTaskClubDiscountPostRequest' is set
            if (apiV2UploadTaskClubDiscountPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV2UploadTaskClubDiscountPostRequest' when calling DefaultApi->ApiV2UploadTaskClubDiscountPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = apiV2UploadTaskClubDiscountPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV2UploadTaskClubDiscountPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<TaskCreated>("/api/v2/upload/task/club-discount", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2UploadTaskClubDiscountPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Установить цены и скидки Метод устанавливает цены и скидки для товаров.  &lt;br&gt;&lt;br&gt; Чтобы установить цены и скидки для размеров товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TaskCreated</returns>
        public TaskCreated ApiV2UploadTaskPost(ApiV2UploadTaskPostRequest apiV2UploadTaskPostRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<TaskCreated> localVarResponse = ApiV2UploadTaskPostWithHttpInfo(apiV2UploadTaskPostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Установить цены и скидки Метод устанавливает цены и скидки для товаров.  &lt;br&gt;&lt;br&gt; Чтобы установить цены и скидки для размеров товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TaskCreated</returns>
        public Org.OpenAPITools.Client.ApiResponse<TaskCreated> ApiV2UploadTaskPostWithHttpInfo(ApiV2UploadTaskPostRequest apiV2UploadTaskPostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'apiV2UploadTaskPostRequest' is set
            if (apiV2UploadTaskPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV2UploadTaskPostRequest' when calling DefaultApi->ApiV2UploadTaskPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = apiV2UploadTaskPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV2UploadTaskPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<TaskCreated>("/api/v2/upload/task", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2UploadTaskPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Установить цены и скидки Метод устанавливает цены и скидки для товаров.  &lt;br&gt;&lt;br&gt; Чтобы установить цены и скидки для размеров товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TaskCreated</returns>
        public async System.Threading.Tasks.Task<TaskCreated> ApiV2UploadTaskPostAsync(ApiV2UploadTaskPostRequest apiV2UploadTaskPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<TaskCreated> localVarResponse = await ApiV2UploadTaskPostWithHttpInfoAsync(apiV2UploadTaskPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Установить цены и скидки Метод устанавливает цены и скидки для товаров.  &lt;br&gt;&lt;br&gt; Чтобы установить цены и скидки для размеров товара, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task~1size/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TaskCreated)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<TaskCreated>> ApiV2UploadTaskPostWithHttpInfoAsync(ApiV2UploadTaskPostRequest apiV2UploadTaskPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'apiV2UploadTaskPostRequest' is set
            if (apiV2UploadTaskPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV2UploadTaskPostRequest' when calling DefaultApi->ApiV2UploadTaskPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = apiV2UploadTaskPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV2UploadTaskPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<TaskCreated>("/api/v2/upload/task", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2UploadTaskPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Установить цены для размеров Метод устанавливает цены отдельно для размеров товаров.  Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для [таких товаров](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get) &#x60;editableSizePrice: true&#x60;.  Чтобы установить цены и скидки для самих товаров, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskSizePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TaskCreated</returns>
        public TaskCreated ApiV2UploadTaskSizePost(ApiV2UploadTaskSizePostRequest apiV2UploadTaskSizePostRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<TaskCreated> localVarResponse = ApiV2UploadTaskSizePostWithHttpInfo(apiV2UploadTaskSizePostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Установить цены для размеров Метод устанавливает цены отдельно для размеров товаров.  Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для [таких товаров](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get) &#x60;editableSizePrice: true&#x60;.  Чтобы установить цены и скидки для самих товаров, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskSizePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TaskCreated</returns>
        public Org.OpenAPITools.Client.ApiResponse<TaskCreated> ApiV2UploadTaskSizePostWithHttpInfo(ApiV2UploadTaskSizePostRequest apiV2UploadTaskSizePostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'apiV2UploadTaskSizePostRequest' is set
            if (apiV2UploadTaskSizePostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV2UploadTaskSizePostRequest' when calling DefaultApi->ApiV2UploadTaskSizePost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = apiV2UploadTaskSizePostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV2UploadTaskSizePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<TaskCreated>("/api/v2/upload/task/size", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2UploadTaskSizePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Установить цены для размеров Метод устанавливает цены отдельно для размеров товаров.  Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для [таких товаров](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get) &#x60;editableSizePrice: true&#x60;.  Чтобы установить цены и скидки для самих товаров, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskSizePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TaskCreated</returns>
        public async System.Threading.Tasks.Task<TaskCreated> ApiV2UploadTaskSizePostAsync(ApiV2UploadTaskSizePostRequest apiV2UploadTaskSizePostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<TaskCreated> localVarResponse = await ApiV2UploadTaskSizePostWithHttpInfoAsync(apiV2UploadTaskSizePostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Установить цены для размеров Метод устанавливает цены отдельно для размеров товаров.  Работает только для товаров из категорий, где можно устанавливать цены отдельно для разных размеров. Для [таких товаров](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1list~1goods~1size~1nm/get) &#x60;editableSizePrice: true&#x60;.  Чтобы установить цены и скидки для самих товаров, используйте [отдельный метод](/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1upload~1task/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Получить информацию о процессе установки цен и скидок можно с помощью методов &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1tasks/get\&quot;&gt;состояния&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Ceny-i-skidki/paths/~1api~1v2~1history~1goods~1task/get\&quot;&gt;детализации&lt;/a&gt; обработанной загрузки. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 10 запросов за 6 секунд для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Цены и скидки&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV2UploadTaskSizePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TaskCreated)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<TaskCreated>> ApiV2UploadTaskSizePostWithHttpInfoAsync(ApiV2UploadTaskSizePostRequest apiV2UploadTaskSizePostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'apiV2UploadTaskSizePostRequest' is set
            if (apiV2UploadTaskSizePostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV2UploadTaskSizePostRequest' when calling DefaultApi->ApiV2UploadTaskSizePost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = apiV2UploadTaskSizePostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV2UploadTaskSizePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<TaskCreated>("/api/v2/upload/task/size", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2UploadTaskSizePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить список складов WB Метод предоставляет список всех складов WB для привязки к складам продавца. Предназначен для определения складов WB, чтобы сдавать готовые заказы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Office&gt;</returns>
        public List<Office> ApiV3OfficesGet(int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<Office>> localVarResponse = ApiV3OfficesGetWithHttpInfo();
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить список складов WB Метод предоставляет список всех складов WB для привязки к складам продавца. Предназначен для определения складов WB, чтобы сдавать готовые заказы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Office&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<Office>> ApiV3OfficesGetWithHttpInfo(int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "DefaultApi.ApiV3OfficesGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<List<Office>>("/api/v3/offices", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3OfficesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить список складов WB Метод предоставляет список всех складов WB для привязки к складам продавца. Предназначен для определения складов WB, чтобы сдавать готовые заказы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Office&gt;</returns>
        public async System.Threading.Tasks.Task<List<Office>> ApiV3OfficesGetAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<Office>> localVarResponse = await ApiV3OfficesGetWithHttpInfoAsync(operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить список складов WB Метод предоставляет список всех складов WB для привязки к складам продавца. Предназначен для определения складов WB, чтобы сдавать готовые заказы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Office&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<Office>>> ApiV3OfficesGetWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "DefaultApi.ApiV3OfficesGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<Office>>("/api/v3/offices", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3OfficesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Удалить остатки товаров Метод удаляет запись об остатках товаров продавца из [списка остатков](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   &lt;strong&gt;Действие необратимо&lt;/strong&gt;. Удаленный остаток будет необходимо загрузить повторно для возобновления продаж. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdDeleteRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void ApiV3StocksWarehouseIdDelete(long warehouseId, ApiV3StocksWarehouseIdDeleteRequest apiV3StocksWarehouseIdDeleteRequest, int operationIndex = 0)
        {
            ApiV3StocksWarehouseIdDeleteWithHttpInfo(warehouseId, apiV3StocksWarehouseIdDeleteRequest);
        }

        /// <summary>
        /// Удалить остатки товаров Метод удаляет запись об остатках товаров продавца из [списка остатков](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   &lt;strong&gt;Действие необратимо&lt;/strong&gt;. Удаленный остаток будет необходимо загрузить повторно для возобновления продаж. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdDeleteRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Org.OpenAPITools.Client.ApiResponse<Object> ApiV3StocksWarehouseIdDeleteWithHttpInfo(long warehouseId, ApiV3StocksWarehouseIdDeleteRequest apiV3StocksWarehouseIdDeleteRequest, int operationIndex = 0)
        {
            // verify the required parameter 'apiV3StocksWarehouseIdDeleteRequest' is set
            if (apiV3StocksWarehouseIdDeleteRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV3StocksWarehouseIdDeleteRequest' when calling DefaultApi->ApiV3StocksWarehouseIdDelete");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = apiV3StocksWarehouseIdDeleteRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV3StocksWarehouseIdDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/api/v3/stocks/{warehouseId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3StocksWarehouseIdDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Удалить остатки товаров Метод удаляет запись об остатках товаров продавца из [списка остатков](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   &lt;strong&gt;Действие необратимо&lt;/strong&gt;. Удаленный остаток будет необходимо загрузить повторно для возобновления продаж. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdDeleteRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiV3StocksWarehouseIdDeleteAsync(long warehouseId, ApiV3StocksWarehouseIdDeleteRequest apiV3StocksWarehouseIdDeleteRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            await ApiV3StocksWarehouseIdDeleteWithHttpInfoAsync(warehouseId, apiV3StocksWarehouseIdDeleteRequest, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Удалить остатки товаров Метод удаляет запись об остатках товаров продавца из [списка остатков](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   &lt;strong&gt;Действие необратимо&lt;/strong&gt;. Удаленный остаток будет необходимо загрузить повторно для возобновления продаж. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdDeleteRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Object>> ApiV3StocksWarehouseIdDeleteWithHttpInfoAsync(long warehouseId, ApiV3StocksWarehouseIdDeleteRequest apiV3StocksWarehouseIdDeleteRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'apiV3StocksWarehouseIdDeleteRequest' is set
            if (apiV3StocksWarehouseIdDeleteRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV3StocksWarehouseIdDeleteRequest' when calling DefaultApi->ApiV3StocksWarehouseIdDelete");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = apiV3StocksWarehouseIdDeleteRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV3StocksWarehouseIdDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/api/v3/stocks/{warehouseId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3StocksWarehouseIdDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить остатки товаров Метод предоставляет данные об остатках товаров на [складах продавца](/openapi/work-with-products#tag/Sklady-prodavca).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV3StocksWarehouseIdPost200Response</returns>
        public ApiV3StocksWarehouseIdPost200Response ApiV3StocksWarehouseIdPost(long warehouseId, ApiV3StocksWarehouseIdPostRequest apiV3StocksWarehouseIdPostRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV3StocksWarehouseIdPost200Response> localVarResponse = ApiV3StocksWarehouseIdPostWithHttpInfo(warehouseId, apiV3StocksWarehouseIdPostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить остатки товаров Метод предоставляет данные об остатках товаров на [складах продавца](/openapi/work-with-products#tag/Sklady-prodavca).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV3StocksWarehouseIdPost200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ApiV3StocksWarehouseIdPost200Response> ApiV3StocksWarehouseIdPostWithHttpInfo(long warehouseId, ApiV3StocksWarehouseIdPostRequest apiV3StocksWarehouseIdPostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'apiV3StocksWarehouseIdPostRequest' is set
            if (apiV3StocksWarehouseIdPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV3StocksWarehouseIdPostRequest' when calling DefaultApi->ApiV3StocksWarehouseIdPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = apiV3StocksWarehouseIdPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV3StocksWarehouseIdPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ApiV3StocksWarehouseIdPost200Response>("/api/v3/stocks/{warehouseId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3StocksWarehouseIdPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить остатки товаров Метод предоставляет данные об остатках товаров на [складах продавца](/openapi/work-with-products#tag/Sklady-prodavca).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV3StocksWarehouseIdPost200Response</returns>
        public async System.Threading.Tasks.Task<ApiV3StocksWarehouseIdPost200Response> ApiV3StocksWarehouseIdPostAsync(long warehouseId, ApiV3StocksWarehouseIdPostRequest apiV3StocksWarehouseIdPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV3StocksWarehouseIdPost200Response> localVarResponse = await ApiV3StocksWarehouseIdPostWithHttpInfoAsync(warehouseId, apiV3StocksWarehouseIdPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить остатки товаров Метод предоставляет данные об остатках товаров на [складах продавца](/openapi/work-with-products#tag/Sklady-prodavca).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV3StocksWarehouseIdPost200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ApiV3StocksWarehouseIdPost200Response>> ApiV3StocksWarehouseIdPostWithHttpInfoAsync(long warehouseId, ApiV3StocksWarehouseIdPostRequest apiV3StocksWarehouseIdPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'apiV3StocksWarehouseIdPostRequest' is set
            if (apiV3StocksWarehouseIdPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV3StocksWarehouseIdPostRequest' when calling DefaultApi->ApiV3StocksWarehouseIdPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = apiV3StocksWarehouseIdPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV3StocksWarehouseIdPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ApiV3StocksWarehouseIdPost200Response>("/api/v3/stocks/{warehouseId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3StocksWarehouseIdPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Обновить остатки товаров Метод обновляет количество остатков товаров продавца [в списке](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Названия параметров запроса не валидируются. При отправке некорректных названий вы получите успешный ответ (&lt;code&gt;204&lt;/code&gt;), но остатки не обновятся. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPutRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void ApiV3StocksWarehouseIdPut(long warehouseId, ApiV3StocksWarehouseIdPutRequest? apiV3StocksWarehouseIdPutRequest = default(ApiV3StocksWarehouseIdPutRequest?), int operationIndex = 0)
        {
            ApiV3StocksWarehouseIdPutWithHttpInfo(warehouseId, apiV3StocksWarehouseIdPutRequest);
        }

        /// <summary>
        /// Обновить остатки товаров Метод обновляет количество остатков товаров продавца [в списке](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Названия параметров запроса не валидируются. При отправке некорректных названий вы получите успешный ответ (&lt;code&gt;204&lt;/code&gt;), но остатки не обновятся. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPutRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Org.OpenAPITools.Client.ApiResponse<Object> ApiV3StocksWarehouseIdPutWithHttpInfo(long warehouseId, ApiV3StocksWarehouseIdPutRequest? apiV3StocksWarehouseIdPutRequest = default(ApiV3StocksWarehouseIdPutRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = apiV3StocksWarehouseIdPutRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV3StocksWarehouseIdPut";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Put<Object>("/api/v3/stocks/{warehouseId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3StocksWarehouseIdPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Обновить остатки товаров Метод обновляет количество остатков товаров продавца [в списке](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Названия параметров запроса не валидируются. При отправке некорректных названий вы получите успешный ответ (&lt;code&gt;204&lt;/code&gt;), но остатки не обновятся. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPutRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiV3StocksWarehouseIdPutAsync(long warehouseId, ApiV3StocksWarehouseIdPutRequest? apiV3StocksWarehouseIdPutRequest = default(ApiV3StocksWarehouseIdPutRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            await ApiV3StocksWarehouseIdPutWithHttpInfoAsync(warehouseId, apiV3StocksWarehouseIdPutRequest, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Обновить остатки товаров Метод обновляет количество остатков товаров продавца [в списке](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Названия параметров запроса не валидируются. При отправке некорректных названий вы получите успешный ответ (&lt;code&gt;204&lt;/code&gt;), но остатки не обновятся. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3StocksWarehouseIdPutRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Object>> ApiV3StocksWarehouseIdPutWithHttpInfoAsync(long warehouseId, ApiV3StocksWarehouseIdPutRequest? apiV3StocksWarehouseIdPutRequest = default(ApiV3StocksWarehouseIdPutRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = apiV3StocksWarehouseIdPutRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV3StocksWarehouseIdPut";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<Object>("/api/v3/stocks/{warehouseId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3StocksWarehouseIdPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить список складов продавца Метод предоставляет список всех складов продавца. Может использоваться для получения [остатков товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Warehouse&gt;</returns>
        public List<Warehouse> ApiV3WarehousesGet(int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<Warehouse>> localVarResponse = ApiV3WarehousesGetWithHttpInfo();
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить список складов продавца Метод предоставляет список всех складов продавца. Может использоваться для получения [остатков товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Warehouse&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<Warehouse>> ApiV3WarehousesGetWithHttpInfo(int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "DefaultApi.ApiV3WarehousesGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<List<Warehouse>>("/api/v3/warehouses", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3WarehousesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получить список складов продавца Метод предоставляет список всех складов продавца. Может использоваться для получения [остатков товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Warehouse&gt;</returns>
        public async System.Threading.Tasks.Task<List<Warehouse>> ApiV3WarehousesGetAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<Warehouse>> localVarResponse = await ApiV3WarehousesGetWithHttpInfoAsync(operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получить список складов продавца Метод предоставляет список всех складов продавца. Может использоваться для получения [остатков товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Warehouse&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<Warehouse>>> ApiV3WarehousesGetWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "DefaultApi.ApiV3WarehousesGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<Warehouse>>("/api/v3/warehouses", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3WarehousesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Создать склад продавца Метод создаёт склад продавца для работы с [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post). Нужно привязать к складу продавца [склад WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) для работы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiV3WarehousesPost201Response</returns>
        public ApiV3WarehousesPost201Response ApiV3WarehousesPost(ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV3WarehousesPost201Response> localVarResponse = ApiV3WarehousesPostWithHttpInfo(apiV3WarehousesPostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Создать склад продавца Метод создаёт склад продавца для работы с [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post). Нужно привязать к складу продавца [склад WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) для работы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiV3WarehousesPost201Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ApiV3WarehousesPost201Response> ApiV3WarehousesPostWithHttpInfo(ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'apiV3WarehousesPostRequest' is set
            if (apiV3WarehousesPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV3WarehousesPostRequest' when calling DefaultApi->ApiV3WarehousesPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = apiV3WarehousesPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV3WarehousesPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ApiV3WarehousesPost201Response>("/api/v3/warehouses", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3WarehousesPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Создать склад продавца Метод создаёт склад продавца для работы с [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post). Нужно привязать к складу продавца [склад WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) для работы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiV3WarehousesPost201Response</returns>
        public async System.Threading.Tasks.Task<ApiV3WarehousesPost201Response> ApiV3WarehousesPostAsync(ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ApiV3WarehousesPost201Response> localVarResponse = await ApiV3WarehousesPostWithHttpInfoAsync(apiV3WarehousesPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Создать склад продавца Метод создаёт склад продавца для работы с [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca/paths/~1api~1v3~1stocks~1%7BwarehouseId%7D/post). Нужно привязать к складу продавца [склад WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) для работы по схеме [FBS](/openapi/orders-fbs#tag/Zakazy-FBS) (Fulfillment by Seller).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiV3WarehousesPost201Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ApiV3WarehousesPost201Response>> ApiV3WarehousesPostWithHttpInfoAsync(ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'apiV3WarehousesPostRequest' is set
            if (apiV3WarehousesPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV3WarehousesPostRequest' when calling DefaultApi->ApiV3WarehousesPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = apiV3WarehousesPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV3WarehousesPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ApiV3WarehousesPost201Response>("/api/v3/warehouses", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3WarehousesPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Удалить склад продавца Метод удаляет склад продавца из [списка складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void ApiV3WarehousesWarehouseIdDelete(long warehouseId, int operationIndex = 0)
        {
            ApiV3WarehousesWarehouseIdDeleteWithHttpInfo(warehouseId);
        }

        /// <summary>
        /// Удалить склад продавца Метод удаляет склад продавца из [списка складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Org.OpenAPITools.Client.ApiResponse<Object> ApiV3WarehousesWarehouseIdDeleteWithHttpInfo(long warehouseId, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter

            localVarRequestOptions.Operation = "DefaultApi.ApiV3WarehousesWarehouseIdDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/api/v3/warehouses/{warehouseId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3WarehousesWarehouseIdDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Удалить склад продавца Метод удаляет склад продавца из [списка складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiV3WarehousesWarehouseIdDeleteAsync(long warehouseId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            await ApiV3WarehousesWarehouseIdDeleteWithHttpInfoAsync(warehouseId, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Удалить склад продавца Метод удаляет склад продавца из [списка складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Object>> ApiV3WarehousesWarehouseIdDeleteWithHttpInfoAsync(long warehouseId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter

            localVarRequestOptions.Operation = "DefaultApi.ApiV3WarehousesWarehouseIdDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/api/v3/warehouses/{warehouseId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3WarehousesWarehouseIdDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Обновить склад продавца Метод обновляет данные склада продавца в [списке складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get). Данные о привязанном [складе WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) можно изменить один раз в сутки.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void ApiV3WarehousesWarehouseIdPut(long warehouseId, ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0)
        {
            ApiV3WarehousesWarehouseIdPutWithHttpInfo(warehouseId, apiV3WarehousesPostRequest);
        }

        /// <summary>
        /// Обновить склад продавца Метод обновляет данные склада продавца в [списке складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get). Данные о привязанном [складе WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) можно изменить один раз в сутки.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Org.OpenAPITools.Client.ApiResponse<Object> ApiV3WarehousesWarehouseIdPutWithHttpInfo(long warehouseId, ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'apiV3WarehousesPostRequest' is set
            if (apiV3WarehousesPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV3WarehousesPostRequest' when calling DefaultApi->ApiV3WarehousesWarehouseIdPut");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = apiV3WarehousesPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV3WarehousesWarehouseIdPut";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Put<Object>("/api/v3/warehouses/{warehouseId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3WarehousesWarehouseIdPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Обновить склад продавца Метод обновляет данные склада продавца в [списке складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get). Данные о привязанном [складе WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) можно изменить один раз в сутки.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiV3WarehousesWarehouseIdPutAsync(long warehouseId, ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            await ApiV3WarehousesWarehouseIdPutWithHttpInfoAsync(warehouseId, apiV3WarehousesPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Обновить склад продавца Метод обновляет данные склада продавца в [списке складов](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1warehouses/get). Данные о привязанном [складе WB](/openapi/work-with-products#tag/Sklady-prodavca/paths/~1api~1v3~1offices/get) можно изменить один раз в сутки.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;     Нельзя привязывать склад WB, который уже используется &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 300 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Маркетплейс&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="warehouseId">ID склада продавца</param>
        /// <param name="apiV3WarehousesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Object>> ApiV3WarehousesWarehouseIdPutWithHttpInfoAsync(long warehouseId, ApiV3WarehousesPostRequest apiV3WarehousesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'apiV3WarehousesPostRequest' is set
            if (apiV3WarehousesPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'apiV3WarehousesPostRequest' when calling DefaultApi->ApiV3WarehousesWarehouseIdPut");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("warehouseId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(warehouseId)); // path parameter
            localVarRequestOptions.Data = apiV3WarehousesPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ApiV3WarehousesWarehouseIdPut";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<Object>("/api/v3/warehouses/{warehouseId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV3WarehousesWarehouseIdPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Генерация баркодов Метод генерирует массив уникальных баркодов для создания размера в [карточке товара](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post). Можно использовать, если у вас нет собственных баркодов.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2BarcodesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2BarcodesPost200Response</returns>
        public ContentV2BarcodesPost200Response ContentV2BarcodesPost(ContentV2BarcodesPostRequest contentV2BarcodesPostRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2BarcodesPost200Response> localVarResponse = ContentV2BarcodesPostWithHttpInfo(contentV2BarcodesPostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Генерация баркодов Метод генерирует массив уникальных баркодов для создания размера в [карточке товара](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post). Можно использовать, если у вас нет собственных баркодов.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2BarcodesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2BarcodesPost200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2BarcodesPost200Response> ContentV2BarcodesPostWithHttpInfo(ContentV2BarcodesPostRequest contentV2BarcodesPostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'contentV2BarcodesPostRequest' is set
            if (contentV2BarcodesPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2BarcodesPostRequest' when calling DefaultApi->ContentV2BarcodesPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2BarcodesPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2BarcodesPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ContentV2BarcodesPost200Response>("/content/v2/barcodes", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2BarcodesPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Генерация баркодов Метод генерирует массив уникальных баркодов для создания размера в [карточке товара](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post). Можно использовать, если у вас нет собственных баркодов.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2BarcodesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2BarcodesPost200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2BarcodesPost200Response> ContentV2BarcodesPostAsync(ContentV2BarcodesPostRequest contentV2BarcodesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2BarcodesPost200Response> localVarResponse = await ContentV2BarcodesPostWithHttpInfoAsync(contentV2BarcodesPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Генерация баркодов Метод генерирует массив уникальных баркодов для создания размера в [карточке товара](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post). Можно использовать, если у вас нет собственных баркодов.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2BarcodesPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2BarcodesPost200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2BarcodesPost200Response>> ContentV2BarcodesPostWithHttpInfoAsync(ContentV2BarcodesPostRequest contentV2BarcodesPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'contentV2BarcodesPostRequest' is set
            if (contentV2BarcodesPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2BarcodesPostRequest' when calling DefaultApi->ContentV2BarcodesPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2BarcodesPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2BarcodesPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ContentV2BarcodesPost200Response>("/content/v2/barcodes", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2BarcodesPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Перенос карточек товаров в корзину Метод переносит [карточки товаров в корзину](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post). При этом карточки товаров не удаляются, их можно [восстановить](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1recover/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   После переноса в корзину карточке товара присваивается новый &lt;code&gt;imtID&lt;/code&gt;. &lt;/div&gt;  Карточки товаров удаляются автоматически, если лежат в корзине больше 30 дней. Очистка корзины происходит каждую ночь по московскому времени.&lt;br&gt; Карточки товаров можно удалить в любое время в [личном кабинете](https://seller.wildberries.ru/new-goods/basket-cards).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2CardsDeleteTrashPost200Response</returns>
        public ContentV2CardsDeleteTrashPost200Response ContentV2CardsDeleteTrashPost(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2CardsDeleteTrashPost200Response> localVarResponse = ContentV2CardsDeleteTrashPostWithHttpInfo(contentV2CardsDeleteTrashPostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Перенос карточек товаров в корзину Метод переносит [карточки товаров в корзину](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post). При этом карточки товаров не удаляются, их можно [восстановить](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1recover/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   После переноса в корзину карточке товара присваивается новый &lt;code&gt;imtID&lt;/code&gt;. &lt;/div&gt;  Карточки товаров удаляются автоматически, если лежат в корзине больше 30 дней. Очистка корзины происходит каждую ночь по московскому времени.&lt;br&gt; Карточки товаров можно удалить в любое время в [личном кабинете](https://seller.wildberries.ru/new-goods/basket-cards).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2CardsDeleteTrashPost200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2CardsDeleteTrashPost200Response> ContentV2CardsDeleteTrashPostWithHttpInfo(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'contentV2CardsDeleteTrashPostRequest' is set
            if (contentV2CardsDeleteTrashPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2CardsDeleteTrashPostRequest' when calling DefaultApi->ContentV2CardsDeleteTrashPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsDeleteTrashPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsDeleteTrashPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ContentV2CardsDeleteTrashPost200Response>("/content/v2/cards/delete/trash", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsDeleteTrashPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Перенос карточек товаров в корзину Метод переносит [карточки товаров в корзину](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post). При этом карточки товаров не удаляются, их можно [восстановить](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1recover/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   После переноса в корзину карточке товара присваивается новый &lt;code&gt;imtID&lt;/code&gt;. &lt;/div&gt;  Карточки товаров удаляются автоматически, если лежат в корзине больше 30 дней. Очистка корзины происходит каждую ночь по московскому времени.&lt;br&gt; Карточки товаров можно удалить в любое время в [личном кабинете](https://seller.wildberries.ru/new-goods/basket-cards).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2CardsDeleteTrashPost200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2CardsDeleteTrashPost200Response> ContentV2CardsDeleteTrashPostAsync(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2CardsDeleteTrashPost200Response> localVarResponse = await ContentV2CardsDeleteTrashPostWithHttpInfoAsync(contentV2CardsDeleteTrashPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Перенос карточек товаров в корзину Метод переносит [карточки товаров в корзину](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post). При этом карточки товаров не удаляются, их можно [восстановить](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1recover/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   После переноса в корзину карточке товара присваивается новый &lt;code&gt;imtID&lt;/code&gt;. &lt;/div&gt;  Карточки товаров удаляются автоматически, если лежат в корзине больше 30 дней. Очистка корзины происходит каждую ночь по московскому времени.&lt;br&gt; Карточки товаров можно удалить в любое время в [личном кабинете](https://seller.wildberries.ru/new-goods/basket-cards).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2CardsDeleteTrashPost200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2CardsDeleteTrashPost200Response>> ContentV2CardsDeleteTrashPostWithHttpInfoAsync(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'contentV2CardsDeleteTrashPostRequest' is set
            if (contentV2CardsDeleteTrashPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2CardsDeleteTrashPostRequest' when calling DefaultApi->ContentV2CardsDeleteTrashPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsDeleteTrashPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsDeleteTrashPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ContentV2CardsDeleteTrashPost200Response>("/content/v2/cards/delete/trash", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsDeleteTrashPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Список несозданных карточек товаров с ошибками Метод предоставляет список карточек товаров, при создании или редактировании которых произошли ошибки, с описанием этих ошибок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Чтобы убрать карточку товара из списка, нужно повторно сделать запрос на &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post\&quot;&gt;создание&lt;/a&gt; или редактирование карточки товара с исправленными ошибками. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Параметр выбора языка значений полей ответа (для которых предусмотрена мультиязычность).  Не используется в песочнице.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2CardsErrorListGet200Response</returns>
        public ContentV2CardsErrorListGet200Response ContentV2CardsErrorListGet(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2CardsErrorListGet200Response> localVarResponse = ContentV2CardsErrorListGetWithHttpInfo(locale);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Список несозданных карточек товаров с ошибками Метод предоставляет список карточек товаров, при создании или редактировании которых произошли ошибки, с описанием этих ошибок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Чтобы убрать карточку товара из списка, нужно повторно сделать запрос на &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post\&quot;&gt;создание&lt;/a&gt; или редактирование карточки товара с исправленными ошибками. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Параметр выбора языка значений полей ответа (для которых предусмотрена мультиязычность).  Не используется в песочнице.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2CardsErrorListGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2CardsErrorListGet200Response> ContentV2CardsErrorListGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsErrorListGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2CardsErrorListGet200Response>("/content/v2/cards/error/list", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsErrorListGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Список несозданных карточек товаров с ошибками Метод предоставляет список карточек товаров, при создании или редактировании которых произошли ошибки, с описанием этих ошибок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Чтобы убрать карточку товара из списка, нужно повторно сделать запрос на &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post\&quot;&gt;создание&lt;/a&gt; или редактирование карточки товара с исправленными ошибками. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Параметр выбора языка значений полей ответа (для которых предусмотрена мультиязычность).  Не используется в песочнице.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2CardsErrorListGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2CardsErrorListGet200Response> ContentV2CardsErrorListGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2CardsErrorListGet200Response> localVarResponse = await ContentV2CardsErrorListGetWithHttpInfoAsync(locale, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Список несозданных карточек товаров с ошибками Метод предоставляет список карточек товаров, при создании или редактировании которых произошли ошибки, с описанием этих ошибок.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Чтобы убрать карточку товара из списка, нужно повторно сделать запрос на &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post\&quot;&gt;создание&lt;/a&gt; или редактирование карточки товара с исправленными ошибками. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Параметр выбора языка значений полей ответа (для которых предусмотрена мультиязычность).  Не используется в песочнице.  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2CardsErrorListGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2CardsErrorListGet200Response>> ContentV2CardsErrorListGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsErrorListGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2CardsErrorListGet200Response>("/content/v2/cards/error/list", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsErrorListGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Лимиты карточек товаров Возвращает бесплатные и платные лимиты продавца на [создание карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post).&lt;br&gt;&lt;br&gt;  Формула для получения количества карточек, которые можно создать:    &gt; (&#x60;freeLimits&#x60; + &#x60;paidLimits&#x60;) - количество созданных карточек  Созданными считаются карточки, которые можно получить через методы [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2CardsLimitsGet200Response</returns>
        public ContentV2CardsLimitsGet200Response ContentV2CardsLimitsGet(int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2CardsLimitsGet200Response> localVarResponse = ContentV2CardsLimitsGetWithHttpInfo();
            return localVarResponse.Data;
        }

        /// <summary>
        /// Лимиты карточек товаров Возвращает бесплатные и платные лимиты продавца на [создание карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post).&lt;br&gt;&lt;br&gt;  Формула для получения количества карточек, которые можно создать:    &gt; (&#x60;freeLimits&#x60; + &#x60;paidLimits&#x60;) - количество созданных карточек  Созданными считаются карточки, которые можно получить через методы [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2CardsLimitsGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2CardsLimitsGet200Response> ContentV2CardsLimitsGetWithHttpInfo(int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsLimitsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2CardsLimitsGet200Response>("/content/v2/cards/limits", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsLimitsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Лимиты карточек товаров Возвращает бесплатные и платные лимиты продавца на [создание карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post).&lt;br&gt;&lt;br&gt;  Формула для получения количества карточек, которые можно создать:    &gt; (&#x60;freeLimits&#x60; + &#x60;paidLimits&#x60;) - количество созданных карточек  Созданными считаются карточки, которые можно получить через методы [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2CardsLimitsGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2CardsLimitsGet200Response> ContentV2CardsLimitsGetAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2CardsLimitsGet200Response> localVarResponse = await ContentV2CardsLimitsGetWithHttpInfoAsync(operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Лимиты карточек товаров Возвращает бесплатные и платные лимиты продавца на [создание карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov/paths/~1content~1v2~1cards~1upload/post).&lt;br&gt;&lt;br&gt;  Формула для получения количества карточек, которые можно создать:    &gt; (&#x60;freeLimits&#x60; + &#x60;paidLimits&#x60;) - количество созданных карточек  Созданными считаются карточки, которые можно получить через методы [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2CardsLimitsGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2CardsLimitsGet200Response>> ContentV2CardsLimitsGetWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsLimitsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2CardsLimitsGet200Response>("/content/v2/cards/limits", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsLimitsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Объединение и разъединение карточек товаров Метод объединяет и разъединяет карточки товаров. Карточки товаров считаются объединёнными, если у них одинаковый &lt;code&gt;imtID&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Для объединения карточек товаров сделайте запрос **с указанием** &#x60;imtID&#x60;. Можно объединять не более 30 карточек товаров.&lt;br&gt; Для разъединения карточек товаров сделайте запрос **без указания** &#x60;imtID&#x60;. Для разъединенных карточек будут сгенерированы новые &#x60;imtID&#x60;. &lt;br&gt;&lt;br&gt; Если вы разъедините одновременно несколько карточек товаров, эти карточки объединятся в одну и получат новый &#x60;imtID&#x60;.&lt;br&gt; Чтобы присвоить каждой карточке товара уникальный &#x60;imtID&#x60;, необходимо передавать по одной карточке товара за запрос.&lt;br&gt; &lt;br&gt; Максимальный размер запроса 10 Мб.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Объединить можно только карточки товаров с одинаковыми предметами. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsMoveNmPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseCardCreate</returns>
        public ResponseCardCreate ContentV2CardsMoveNmPost(ContentV2CardsMoveNmPostRequest? contentV2CardsMoveNmPostRequest = default(ContentV2CardsMoveNmPostRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> localVarResponse = ContentV2CardsMoveNmPostWithHttpInfo(contentV2CardsMoveNmPostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Объединение и разъединение карточек товаров Метод объединяет и разъединяет карточки товаров. Карточки товаров считаются объединёнными, если у них одинаковый &lt;code&gt;imtID&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Для объединения карточек товаров сделайте запрос **с указанием** &#x60;imtID&#x60;. Можно объединять не более 30 карточек товаров.&lt;br&gt; Для разъединения карточек товаров сделайте запрос **без указания** &#x60;imtID&#x60;. Для разъединенных карточек будут сгенерированы новые &#x60;imtID&#x60;. &lt;br&gt;&lt;br&gt; Если вы разъедините одновременно несколько карточек товаров, эти карточки объединятся в одну и получат новый &#x60;imtID&#x60;.&lt;br&gt; Чтобы присвоить каждой карточке товара уникальный &#x60;imtID&#x60;, необходимо передавать по одной карточке товара за запрос.&lt;br&gt; &lt;br&gt; Максимальный размер запроса 10 Мб.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Объединить можно только карточки товаров с одинаковыми предметами. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsMoveNmPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseCardCreate</returns>
        public Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> ContentV2CardsMoveNmPostWithHttpInfo(ContentV2CardsMoveNmPostRequest? contentV2CardsMoveNmPostRequest = default(ContentV2CardsMoveNmPostRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsMoveNmPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsMoveNmPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ResponseCardCreate>("/content/v2/cards/moveNm", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsMoveNmPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Объединение и разъединение карточек товаров Метод объединяет и разъединяет карточки товаров. Карточки товаров считаются объединёнными, если у них одинаковый &lt;code&gt;imtID&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Для объединения карточек товаров сделайте запрос **с указанием** &#x60;imtID&#x60;. Можно объединять не более 30 карточек товаров.&lt;br&gt; Для разъединения карточек товаров сделайте запрос **без указания** &#x60;imtID&#x60;. Для разъединенных карточек будут сгенерированы новые &#x60;imtID&#x60;. &lt;br&gt;&lt;br&gt; Если вы разъедините одновременно несколько карточек товаров, эти карточки объединятся в одну и получат новый &#x60;imtID&#x60;.&lt;br&gt; Чтобы присвоить каждой карточке товара уникальный &#x60;imtID&#x60;, необходимо передавать по одной карточке товара за запрос.&lt;br&gt; &lt;br&gt; Максимальный размер запроса 10 Мб.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Объединить можно только карточки товаров с одинаковыми предметами. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsMoveNmPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseCardCreate</returns>
        public async System.Threading.Tasks.Task<ResponseCardCreate> ContentV2CardsMoveNmPostAsync(ContentV2CardsMoveNmPostRequest? contentV2CardsMoveNmPostRequest = default(ContentV2CardsMoveNmPostRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> localVarResponse = await ContentV2CardsMoveNmPostWithHttpInfoAsync(contentV2CardsMoveNmPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Объединение и разъединение карточек товаров Метод объединяет и разъединяет карточки товаров. Карточки товаров считаются объединёнными, если у них одинаковый &lt;code&gt;imtID&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Для объединения карточек товаров сделайте запрос **с указанием** &#x60;imtID&#x60;. Можно объединять не более 30 карточек товаров.&lt;br&gt; Для разъединения карточек товаров сделайте запрос **без указания** &#x60;imtID&#x60;. Для разъединенных карточек будут сгенерированы новые &#x60;imtID&#x60;. &lt;br&gt;&lt;br&gt; Если вы разъедините одновременно несколько карточек товаров, эти карточки объединятся в одну и получат новый &#x60;imtID&#x60;.&lt;br&gt; Чтобы присвоить каждой карточке товара уникальный &#x60;imtID&#x60;, необходимо передавать по одной карточке товара за запрос.&lt;br&gt; &lt;br&gt; Максимальный размер запроса 10 Мб.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Объединить можно только карточки товаров с одинаковыми предметами. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsMoveNmPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseCardCreate)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate>> ContentV2CardsMoveNmPostWithHttpInfoAsync(ContentV2CardsMoveNmPostRequest? contentV2CardsMoveNmPostRequest = default(ContentV2CardsMoveNmPostRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsMoveNmPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsMoveNmPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ResponseCardCreate>("/content/v2/cards/moveNm", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsMoveNmPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Восстановление карточек товаров из корзины Метод восстанавливает [карточки товаров из корзины](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара сохраняет тот же &lt;code&gt;imtID&lt;/code&gt;, что был присвоен ей при &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1delete~1trash/post\&quot;&gt;перемещении в корзину&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2CardsDeleteTrashPost200Response</returns>
        public ContentV2CardsDeleteTrashPost200Response ContentV2CardsRecoverPost(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2CardsDeleteTrashPost200Response> localVarResponse = ContentV2CardsRecoverPostWithHttpInfo(contentV2CardsDeleteTrashPostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Восстановление карточек товаров из корзины Метод восстанавливает [карточки товаров из корзины](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара сохраняет тот же &lt;code&gt;imtID&lt;/code&gt;, что был присвоен ей при &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1delete~1trash/post\&quot;&gt;перемещении в корзину&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2CardsDeleteTrashPost200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2CardsDeleteTrashPost200Response> ContentV2CardsRecoverPostWithHttpInfo(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'contentV2CardsDeleteTrashPostRequest' is set
            if (contentV2CardsDeleteTrashPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2CardsDeleteTrashPostRequest' when calling DefaultApi->ContentV2CardsRecoverPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsDeleteTrashPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsRecoverPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ContentV2CardsDeleteTrashPost200Response>("/content/v2/cards/recover", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsRecoverPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Восстановление карточек товаров из корзины Метод восстанавливает [карточки товаров из корзины](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара сохраняет тот же &lt;code&gt;imtID&lt;/code&gt;, что был присвоен ей при &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1delete~1trash/post\&quot;&gt;перемещении в корзину&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2CardsDeleteTrashPost200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2CardsDeleteTrashPost200Response> ContentV2CardsRecoverPostAsync(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2CardsDeleteTrashPost200Response> localVarResponse = await ContentV2CardsRecoverPostWithHttpInfoAsync(contentV2CardsDeleteTrashPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Восстановление карточек товаров из корзины Метод восстанавливает [карточки товаров из корзины](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара сохраняет тот же &lt;code&gt;imtID&lt;/code&gt;, что был присвоен ей при &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1delete~1trash/post\&quot;&gt;перемещении в корзину&lt;/a&gt;. &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsDeleteTrashPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2CardsDeleteTrashPost200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2CardsDeleteTrashPost200Response>> ContentV2CardsRecoverPostWithHttpInfoAsync(ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'contentV2CardsDeleteTrashPostRequest' is set
            if (contentV2CardsDeleteTrashPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2CardsDeleteTrashPostRequest' when calling DefaultApi->ContentV2CardsRecoverPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsDeleteTrashPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsRecoverPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ContentV2CardsDeleteTrashPost200Response>("/content/v2/cards/recover", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsRecoverPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Редактирование карточек товаров Метод обновляет карточки товаров. Данные для обновления можно получить через [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара перезаписывается при обновлении. Поэтому в запросе нужно передать &lt;strong&gt;все&lt;/strong&gt; параметры карточки, в том числе те, которые вы не собираетесь обновлять. &lt;/div&gt;  Нельзя редактировать или удалять баркоды, но можно добавить дополнительный баркод к карточке товара. Параметры &#x60;photos&#x60;, &#x60;video&#x60; и &#x60;tags&#x60; редактировать или удалять через данный метод нельзя.&lt;br&gt; Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; В одном запросе можно отредактировать максимум 3000 карточек товаров (&#x60;nmID&#x60;). Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUpdatePostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseCardCreate</returns>
        public ResponseCardCreate ContentV2CardsUpdatePost(List<ContentV2CardsUpdatePostRequestInner>? contentV2CardsUpdatePostRequestInner = default(List<ContentV2CardsUpdatePostRequestInner>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> localVarResponse = ContentV2CardsUpdatePostWithHttpInfo(contentV2CardsUpdatePostRequestInner);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Редактирование карточек товаров Метод обновляет карточки товаров. Данные для обновления можно получить через [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара перезаписывается при обновлении. Поэтому в запросе нужно передать &lt;strong&gt;все&lt;/strong&gt; параметры карточки, в том числе те, которые вы не собираетесь обновлять. &lt;/div&gt;  Нельзя редактировать или удалять баркоды, но можно добавить дополнительный баркод к карточке товара. Параметры &#x60;photos&#x60;, &#x60;video&#x60; и &#x60;tags&#x60; редактировать или удалять через данный метод нельзя.&lt;br&gt; Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; В одном запросе можно отредактировать максимум 3000 карточек товаров (&#x60;nmID&#x60;). Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUpdatePostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseCardCreate</returns>
        public Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> ContentV2CardsUpdatePostWithHttpInfo(List<ContentV2CardsUpdatePostRequestInner>? contentV2CardsUpdatePostRequestInner = default(List<ContentV2CardsUpdatePostRequestInner>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsUpdatePostRequestInner;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsUpdatePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ResponseCardCreate>("/content/v2/cards/update", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsUpdatePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Редактирование карточек товаров Метод обновляет карточки товаров. Данные для обновления можно получить через [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара перезаписывается при обновлении. Поэтому в запросе нужно передать &lt;strong&gt;все&lt;/strong&gt; параметры карточки, в том числе те, которые вы не собираетесь обновлять. &lt;/div&gt;  Нельзя редактировать или удалять баркоды, но можно добавить дополнительный баркод к карточке товара. Параметры &#x60;photos&#x60;, &#x60;video&#x60; и &#x60;tags&#x60; редактировать или удалять через данный метод нельзя.&lt;br&gt; Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; В одном запросе можно отредактировать максимум 3000 карточек товаров (&#x60;nmID&#x60;). Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUpdatePostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseCardCreate</returns>
        public async System.Threading.Tasks.Task<ResponseCardCreate> ContentV2CardsUpdatePostAsync(List<ContentV2CardsUpdatePostRequestInner>? contentV2CardsUpdatePostRequestInner = default(List<ContentV2CardsUpdatePostRequestInner>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> localVarResponse = await ContentV2CardsUpdatePostWithHttpInfoAsync(contentV2CardsUpdatePostRequestInner, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Редактирование карточек товаров Метод обновляет карточки товаров. Данные для обновления можно получить через [список карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1list/post) и [список карточек товаров в корзине](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post).  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Карточка товара перезаписывается при обновлении. Поэтому в запросе нужно передать &lt;strong&gt;все&lt;/strong&gt; параметры карточки, в том числе те, которые вы не собираетесь обновлять. &lt;/div&gt;  Нельзя редактировать или удалять баркоды, но можно добавить дополнительный баркод к карточке товара. Параметры &#x60;photos&#x60;, &#x60;video&#x60; и &#x60;tags&#x60; редактировать или удалять через данный метод нельзя.&lt;br&gt; Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; В одном запросе можно отредактировать максимум 3000 карточек товаров (&#x60;nmID&#x60;). Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUpdatePostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseCardCreate)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate>> ContentV2CardsUpdatePostWithHttpInfoAsync(List<ContentV2CardsUpdatePostRequestInner>? contentV2CardsUpdatePostRequestInner = default(List<ContentV2CardsUpdatePostRequestInner>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsUpdatePostRequestInner;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsUpdatePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ResponseCardCreate>("/content/v2/cards/update", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsUpdatePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Создание карточек товаров с объединением Метод создаёт новые карточки товаров, объединяя их с существующими карточками.  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt;Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadAddPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseCardCreate</returns>
        public ResponseCardCreate ContentV2CardsUploadAddPost(ContentV2CardsUploadAddPostRequest? contentV2CardsUploadAddPostRequest = default(ContentV2CardsUploadAddPostRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> localVarResponse = ContentV2CardsUploadAddPostWithHttpInfo(contentV2CardsUploadAddPostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Создание карточек товаров с объединением Метод создаёт новые карточки товаров, объединяя их с существующими карточками.  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt;Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadAddPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseCardCreate</returns>
        public Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> ContentV2CardsUploadAddPostWithHttpInfo(ContentV2CardsUploadAddPostRequest? contentV2CardsUploadAddPostRequest = default(ContentV2CardsUploadAddPostRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsUploadAddPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsUploadAddPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ResponseCardCreate>("/content/v2/cards/upload/add", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsUploadAddPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Создание карточек товаров с объединением Метод создаёт новые карточки товаров, объединяя их с существующими карточками.  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt;Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadAddPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseCardCreate</returns>
        public async System.Threading.Tasks.Task<ResponseCardCreate> ContentV2CardsUploadAddPostAsync(ContentV2CardsUploadAddPostRequest? contentV2CardsUploadAddPostRequest = default(ContentV2CardsUploadAddPostRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> localVarResponse = await ContentV2CardsUploadAddPostWithHttpInfoAsync(contentV2CardsUploadAddPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Создание карточек товаров с объединением Метод создаёт новые карточки товаров, объединяя их с существующими карточками.  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt;Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadAddPostRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseCardCreate)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate>> ContentV2CardsUploadAddPostWithHttpInfoAsync(ContentV2CardsUploadAddPostRequest? contentV2CardsUploadAddPostRequest = default(ContentV2CardsUploadAddPostRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsUploadAddPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsUploadAddPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ResponseCardCreate>("/content/v2/cards/upload/add", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsUploadAddPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Создание карточек товаров Метод создаёт карточки товаров c указанием описаний и характеристик товаров.&lt;br&gt;  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Есть две формы запроса: для создания отдельных и объединённых карточек товаров. &lt;/div&gt;  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt; В одном запросе можно создать максимум 100 объединённых карточек товаров (&#x60;imtID&#x60;), по 30 карточек товаров в каждой. Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadPostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseCardCreate</returns>
        public ResponseCardCreate ContentV2CardsUploadPost(List<ContentV2CardsUploadPostRequestInner>? contentV2CardsUploadPostRequestInner = default(List<ContentV2CardsUploadPostRequestInner>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> localVarResponse = ContentV2CardsUploadPostWithHttpInfo(contentV2CardsUploadPostRequestInner);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Создание карточек товаров Метод создаёт карточки товаров c указанием описаний и характеристик товаров.&lt;br&gt;  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Есть две формы запроса: для создания отдельных и объединённых карточек товаров. &lt;/div&gt;  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt; В одном запросе можно создать максимум 100 объединённых карточек товаров (&#x60;imtID&#x60;), по 30 карточек товаров в каждой. Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadPostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseCardCreate</returns>
        public Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> ContentV2CardsUploadPostWithHttpInfo(List<ContentV2CardsUploadPostRequestInner>? contentV2CardsUploadPostRequestInner = default(List<ContentV2CardsUploadPostRequestInner>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsUploadPostRequestInner;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsUploadPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ResponseCardCreate>("/content/v2/cards/upload", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsUploadPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Создание карточек товаров Метод создаёт карточки товаров c указанием описаний и характеристик товаров.&lt;br&gt;  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Есть две формы запроса: для создания отдельных и объединённых карточек товаров. &lt;/div&gt;  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt; В одном запросе можно создать максимум 100 объединённых карточек товаров (&#x60;imtID&#x60;), по 30 карточек товаров в каждой. Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadPostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseCardCreate</returns>
        public async System.Threading.Tasks.Task<ResponseCardCreate> ContentV2CardsUploadPostAsync(List<ContentV2CardsUploadPostRequestInner>? contentV2CardsUploadPostRequestInner = default(List<ContentV2CardsUploadPostRequestInner>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate> localVarResponse = await ContentV2CardsUploadPostWithHttpInfoAsync(contentV2CardsUploadPostRequestInner, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Создание карточек товаров Метод создаёт карточки товаров c указанием описаний и характеристик товаров.&lt;br&gt;  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Есть две формы запроса: для создания отдельных и объединённых карточек товаров. &lt;/div&gt;  Габариты товаров можно указать только в **сантиметрах**. &lt;br&gt;&lt;br&gt; Создание карточки товара происходит асинхронно. После отправки запрос становится в очередь на обработку.&lt;br&gt; В одном запросе можно создать максимум 100 объединённых карточек товаров (&#x60;imtID&#x60;), по 30 карточек товаров в каждой. Максимальный размер запроса 10 Мб.&lt;br&gt; Если ответ &#x60;Успешно&#x60; (&#x60;200&#x60;), но какие-то карточки не обновились, получите [список несозданных карточек товаров](/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1cards~1error~1list/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2CardsUploadPostRequestInner"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseCardCreate)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ResponseCardCreate>> ContentV2CardsUploadPostWithHttpInfoAsync(List<ContentV2CardsUploadPostRequestInner>? contentV2CardsUploadPostRequestInner = default(List<ContentV2CardsUploadPostRequestInner>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2CardsUploadPostRequestInner;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2CardsUploadPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ResponseCardCreate>("/content/v2/cards/upload", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2CardsUploadPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Цвет Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Цвет&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectoryColorsGet200Response</returns>
        public ContentV2DirectoryColorsGet200Response ContentV2DirectoryColorsGet(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryColorsGet200Response> localVarResponse = ContentV2DirectoryColorsGetWithHttpInfo(locale);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Цвет Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Цвет&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectoryColorsGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryColorsGet200Response> ContentV2DirectoryColorsGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectoryColorsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2DirectoryColorsGet200Response>("/content/v2/directory/colors", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectoryColorsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Цвет Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Цвет&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectoryColorsGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2DirectoryColorsGet200Response> ContentV2DirectoryColorsGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryColorsGet200Response> localVarResponse = await ContentV2DirectoryColorsGetWithHttpInfoAsync(locale, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Цвет Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Цвет&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectoryColorsGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryColorsGet200Response>> ContentV2DirectoryColorsGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectoryColorsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2DirectoryColorsGet200Response>("/content/v2/directory/colors", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectoryColorsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Страна производства Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Страна производства&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectoryCountriesGet200Response</returns>
        public ContentV2DirectoryCountriesGet200Response ContentV2DirectoryCountriesGet(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryCountriesGet200Response> localVarResponse = ContentV2DirectoryCountriesGetWithHttpInfo(locale);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Страна производства Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Страна производства&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectoryCountriesGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryCountriesGet200Response> ContentV2DirectoryCountriesGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectoryCountriesGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2DirectoryCountriesGet200Response>("/content/v2/directory/countries", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectoryCountriesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Страна производства Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Страна производства&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectoryCountriesGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2DirectoryCountriesGet200Response> ContentV2DirectoryCountriesGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryCountriesGet200Response> localVarResponse = await ContentV2DirectoryCountriesGetWithHttpInfoAsync(locale, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Страна производства Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Страна производства&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectoryCountriesGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryCountriesGet200Response>> ContentV2DirectoryCountriesGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectoryCountriesGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2DirectoryCountriesGet200Response>("/content/v2/directory/countries", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectoryCountriesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Пол Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Пол&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectoryKindsGet200Response</returns>
        public ContentV2DirectoryKindsGet200Response ContentV2DirectoryKindsGet(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryKindsGet200Response> localVarResponse = ContentV2DirectoryKindsGetWithHttpInfo(locale);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Пол Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Пол&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectoryKindsGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryKindsGet200Response> ContentV2DirectoryKindsGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectoryKindsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2DirectoryKindsGet200Response>("/content/v2/directory/kinds", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectoryKindsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Пол Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Пол&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectoryKindsGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2DirectoryKindsGet200Response> ContentV2DirectoryKindsGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryKindsGet200Response> localVarResponse = await ContentV2DirectoryKindsGetWithHttpInfoAsync(locale, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Пол Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Пол&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectoryKindsGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryKindsGet200Response>> ContentV2DirectoryKindsGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectoryKindsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2DirectoryKindsGet200Response>("/content/v2/directory/kinds", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectoryKindsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Сезон Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Сезон&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectorySeasonsGet200Response</returns>
        public ContentV2DirectorySeasonsGet200Response ContentV2DirectorySeasonsGet(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectorySeasonsGet200Response> localVarResponse = ContentV2DirectorySeasonsGetWithHttpInfo(locale);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Сезон Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Сезон&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectorySeasonsGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2DirectorySeasonsGet200Response> ContentV2DirectorySeasonsGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectorySeasonsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2DirectorySeasonsGet200Response>("/content/v2/directory/seasons", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectorySeasonsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Сезон Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Сезон&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectorySeasonsGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2DirectorySeasonsGet200Response> ContentV2DirectorySeasonsGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectorySeasonsGet200Response> localVarResponse = await ContentV2DirectorySeasonsGetWithHttpInfoAsync(locale, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Сезон Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Сезон&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectorySeasonsGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2DirectorySeasonsGet200Response>> ContentV2DirectorySeasonsGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectorySeasonsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2DirectorySeasonsGet200Response>("/content/v2/directory/seasons", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectorySeasonsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// ТНВЭД-код Метод предоставляет список ТНВЭД-кодов по ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get) и фрагменту ТНВЭД-кода.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectID">ID предмета</param>
        /// <param name="search">Поиск по ТНВЭД-коду. Работает только в паре с &#x60;subjectID&#x60; (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectoryTnvedGet200Response</returns>
        public ContentV2DirectoryTnvedGet200Response ContentV2DirectoryTnvedGet(int subjectID, int? search = default(int?), string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryTnvedGet200Response> localVarResponse = ContentV2DirectoryTnvedGetWithHttpInfo(subjectID, search, locale);
            return localVarResponse.Data;
        }

        /// <summary>
        /// ТНВЭД-код Метод предоставляет список ТНВЭД-кодов по ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get) и фрагменту ТНВЭД-кода.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectID">ID предмета</param>
        /// <param name="search">Поиск по ТНВЭД-коду. Работает только в паре с &#x60;subjectID&#x60; (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectoryTnvedGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryTnvedGet200Response> ContentV2DirectoryTnvedGetWithHttpInfo(int subjectID, int? search = default(int?), string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "subjectID", subjectID));
            if (search != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "search", search));
            }
            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectoryTnvedGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2DirectoryTnvedGet200Response>("/content/v2/directory/tnved", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectoryTnvedGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// ТНВЭД-код Метод предоставляет список ТНВЭД-кодов по ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get) и фрагменту ТНВЭД-кода.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectID">ID предмета</param>
        /// <param name="search">Поиск по ТНВЭД-коду. Работает только в паре с &#x60;subjectID&#x60; (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectoryTnvedGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2DirectoryTnvedGet200Response> ContentV2DirectoryTnvedGetAsync(int subjectID, int? search = default(int?), string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryTnvedGet200Response> localVarResponse = await ContentV2DirectoryTnvedGetWithHttpInfoAsync(subjectID, search, locale, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// ТНВЭД-код Метод предоставляет список ТНВЭД-кодов по ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get) и фрагменту ТНВЭД-кода.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectID">ID предмета</param>
        /// <param name="search">Поиск по ТНВЭД-коду. Работает только в паре с &#x60;subjectID&#x60; (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectoryTnvedGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryTnvedGet200Response>> ContentV2DirectoryTnvedGetWithHttpInfoAsync(int subjectID, int? search = default(int?), string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "subjectID", subjectID));
            if (search != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "search", search));
            }
            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectoryTnvedGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2DirectoryTnvedGet200Response>("/content/v2/directory/tnved", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectoryTnvedGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Ставка НДС Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Ставка НДС&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2DirectoryVatGet200Response</returns>
        public ContentV2DirectoryVatGet200Response ContentV2DirectoryVatGet(string locale, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryVatGet200Response> localVarResponse = ContentV2DirectoryVatGetWithHttpInfo(locale);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Ставка НДС Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Ставка НДС&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2DirectoryVatGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryVatGet200Response> ContentV2DirectoryVatGetWithHttpInfo(string locale, int operationIndex = 0)
        {
            // verify the required parameter 'locale' is set
            if (locale == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'locale' when calling DefaultApi->ContentV2DirectoryVatGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectoryVatGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2DirectoryVatGet200Response>("/content/v2/directory/vat", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectoryVatGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Ставка НДС Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Ставка НДС&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2DirectoryVatGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2DirectoryVatGet200Response> ContentV2DirectoryVatGetAsync(string locale, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryVatGet200Response> localVarResponse = await ContentV2DirectoryVatGetWithHttpInfoAsync(locale, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Ставка НДС Метод предоставляет возможные значения [характеристики](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) предмета &#x60;Ставка НДС&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2DirectoryVatGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2DirectoryVatGet200Response>> ContentV2DirectoryVatGetWithHttpInfoAsync(string locale, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'locale' is set
            if (locale == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'locale' when calling DefaultApi->ContentV2DirectoryVatGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));

            localVarRequestOptions.Operation = "DefaultApi.ContentV2DirectoryVatGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2DirectoryVatGet200Response>("/content/v2/directory/vat", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2DirectoryVatGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Список карточек товаров &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список созданных карточек товаров.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   В ответе метода не будет карточек, находящихся в корзине. Получить такие карточки можно через &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post\&quot;&gt;отдельный метод&lt;/a&gt;. &lt;/div&gt;      Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsListPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице.    (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2GetCardsListPost200Response</returns>
        public ContentV2GetCardsListPost200Response ContentV2GetCardsListPost(ContentV2GetCardsListPostRequest contentV2GetCardsListPostRequest, string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2GetCardsListPost200Response> localVarResponse = ContentV2GetCardsListPostWithHttpInfo(contentV2GetCardsListPostRequest, locale);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Список карточек товаров &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список созданных карточек товаров.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   В ответе метода не будет карточек, находящихся в корзине. Получить такие карточки можно через &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post\&quot;&gt;отдельный метод&lt;/a&gt;. &lt;/div&gt;      Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsListPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице.    (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2GetCardsListPost200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2GetCardsListPost200Response> ContentV2GetCardsListPostWithHttpInfo(ContentV2GetCardsListPostRequest contentV2GetCardsListPostRequest, string? locale = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'contentV2GetCardsListPostRequest' is set
            if (contentV2GetCardsListPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2GetCardsListPostRequest' when calling DefaultApi->ContentV2GetCardsListPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }
            localVarRequestOptions.Data = contentV2GetCardsListPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2GetCardsListPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ContentV2GetCardsListPost200Response>("/content/v2/get/cards/list", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2GetCardsListPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Список карточек товаров &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список созданных карточек товаров.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   В ответе метода не будет карточек, находящихся в корзине. Получить такие карточки можно через &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post\&quot;&gt;отдельный метод&lt;/a&gt;. &lt;/div&gt;      Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsListPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице.    (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2GetCardsListPost200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2GetCardsListPost200Response> ContentV2GetCardsListPostAsync(ContentV2GetCardsListPostRequest contentV2GetCardsListPostRequest, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2GetCardsListPost200Response> localVarResponse = await ContentV2GetCardsListPostWithHttpInfoAsync(contentV2GetCardsListPostRequest, locale, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Список карточек товаров &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список созданных карточек товаров.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   В ответе метода не будет карточек, находящихся в корзине. Получить такие карточки можно через &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kartochki-tovarov/paths/~1content~1v2~1get~1cards~1trash/post\&quot;&gt;отдельный метод&lt;/a&gt;. &lt;/div&gt;      Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsListPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице.    (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2GetCardsListPost200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2GetCardsListPost200Response>> ContentV2GetCardsListPostWithHttpInfoAsync(ContentV2GetCardsListPostRequest contentV2GetCardsListPostRequest, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'contentV2GetCardsListPostRequest' is set
            if (contentV2GetCardsListPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2GetCardsListPostRequest' when calling DefaultApi->ContentV2GetCardsListPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }
            localVarRequestOptions.Data = contentV2GetCardsListPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2GetCardsListPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ContentV2GetCardsListPost200Response>("/content/v2/get/cards/list", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2GetCardsListPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Список карточек товаров в корзине &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список карточек товаров в корзине.&lt;br&gt;&lt;br&gt;  Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;    &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца   &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsTrashPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;: &#x60;ru&#x60;, &#x60;en&#x60;, &#x60;zh&#x60;.  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2GetCardsTrashPost200Response</returns>
        public ContentV2GetCardsTrashPost200Response ContentV2GetCardsTrashPost(ContentV2GetCardsTrashPostRequest contentV2GetCardsTrashPostRequest, string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2GetCardsTrashPost200Response> localVarResponse = ContentV2GetCardsTrashPostWithHttpInfo(contentV2GetCardsTrashPostRequest, locale);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Список карточек товаров в корзине &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список карточек товаров в корзине.&lt;br&gt;&lt;br&gt;  Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;    &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца   &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsTrashPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;: &#x60;ru&#x60;, &#x60;en&#x60;, &#x60;zh&#x60;.  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2GetCardsTrashPost200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2GetCardsTrashPost200Response> ContentV2GetCardsTrashPostWithHttpInfo(ContentV2GetCardsTrashPostRequest contentV2GetCardsTrashPostRequest, string? locale = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'contentV2GetCardsTrashPostRequest' is set
            if (contentV2GetCardsTrashPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2GetCardsTrashPostRequest' when calling DefaultApi->ContentV2GetCardsTrashPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }
            localVarRequestOptions.Data = contentV2GetCardsTrashPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2GetCardsTrashPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ContentV2GetCardsTrashPost200Response>("/content/v2/get/cards/trash", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2GetCardsTrashPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Список карточек товаров в корзине &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список карточек товаров в корзине.&lt;br&gt;&lt;br&gt;  Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;    &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца   &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsTrashPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;: &#x60;ru&#x60;, &#x60;en&#x60;, &#x60;zh&#x60;.  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2GetCardsTrashPost200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2GetCardsTrashPost200Response> ContentV2GetCardsTrashPostAsync(ContentV2GetCardsTrashPostRequest contentV2GetCardsTrashPostRequest, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2GetCardsTrashPost200Response> localVarResponse = await ContentV2GetCardsTrashPostWithHttpInfoAsync(contentV2GetCardsTrashPostRequest, locale, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Список карточек товаров в корзине &lt;div class&#x3D;\&quot;description_auth\&quot;&gt;     Метод доступен по &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;токену&lt;/a&gt; с категорией &lt;strong&gt;Контент&lt;/strong&gt; или &lt;strong&gt;Продвижение&lt;/strong&gt; &lt;/div&gt;  Метод предоставляет список карточек товаров в корзине.&lt;br&gt;&lt;br&gt;  Чтобы получить **больше 100** карточек товаров, воспользуйтесь пагинацией:    &lt;ol&gt;     &lt;li&gt;Сделайте первый запрос: &lt;br&gt;       &lt;pre style&#x3D;\&quot;background-color: rgb(38 50 56 / 5%); color: #e53935\&quot;&gt;         {           \&quot;settings\&quot;: {                                   \&quot;cursor\&quot;: {               \&quot;limit\&quot;: 100             },             \&quot;filter\&quot;: {               \&quot;withPhoto\&quot;: -1             }           }         }&lt;/pre&gt;                                    &lt;/li&gt;     &lt;li&gt;Пройдите в конец полученного списка карточек товаров.&lt;/li&gt;     &lt;li&gt;Скопируйте из &lt;code&gt;cursor&lt;/code&gt; две строки:       &lt;ul&gt;         &lt;li&gt;&lt;code&gt;\&quot;updatedAt\&quot;: \&quot;***\&quot;&lt;/code&gt;&lt;/li&gt;         &lt;li&gt;&lt;code&gt;\&quot;nmID\&quot;: ***&lt;/code&gt;&lt;/li&gt;       &lt;/ul&gt;&lt;/li&gt;     &lt;li&gt;Вставьте скопированные строки в параметр запроса &lt;code&gt;cursor&lt;/code&gt;.&lt;/li&gt;     &lt;li&gt;Повторите запрос. &lt;/li&gt;     &lt;li&gt;Повторяйте пункты со &lt;b&gt;2&lt;/b&gt; по &lt;b&gt;5&lt;/b&gt;, пока поле &lt;code&gt;total&lt;/code&gt; в ответе не станет меньше чем параметр &lt;code&gt;limit&lt;/code&gt; в запросе. Это будет означать, что вы получили все карточки.   &lt;/ol&gt;    &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;     Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца   &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2GetCardsTrashPostRequest"></param>
        /// <param name="locale">Язык полей ответа &#x60;name&#x60;, &#x60;value&#x60; и &#x60;object&#x60;: &#x60;ru&#x60;, &#x60;en&#x60;, &#x60;zh&#x60;.  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2GetCardsTrashPost200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2GetCardsTrashPost200Response>> ContentV2GetCardsTrashPostWithHttpInfoAsync(ContentV2GetCardsTrashPostRequest contentV2GetCardsTrashPostRequest, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'contentV2GetCardsTrashPostRequest' is set
            if (contentV2GetCardsTrashPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2GetCardsTrashPostRequest' when calling DefaultApi->ContentV2GetCardsTrashPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }
            localVarRequestOptions.Data = contentV2GetCardsTrashPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2GetCardsTrashPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ContentV2GetCardsTrashPost200Response>("/content/v2/get/cards/trash", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2GetCardsTrashPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Список предметов Метод предоставляет список названий [родительских категорий предметов](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1parent~1all/get) и их предметов с ID. Например, у категории &#x60;Игрушки&#x60; будут предметы &#x60;Калейдоскопы&#x60;, &#x60;Куклы&#x60;, &#x60;Мячики&#x60;.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">Поиск по названию предмета (Носки), поиск работает по подстроке, искать можно на любом из поддерживаемых языков. (optional)</param>
        /// <param name="limit">Количество предметов, максимум 1 000 (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="offset">Номер позиции, с которой необходимо получить ответ (optional)</param>
        /// <param name="parentID">ID родительской категории предмета (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2ObjectAllGet200Response</returns>
        public ContentV2ObjectAllGet200Response ContentV2ObjectAllGet(string? name = default(string?), int? limit = default(int?), string? locale = default(string?), int? offset = default(int?), int? parentID = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectAllGet200Response> localVarResponse = ContentV2ObjectAllGetWithHttpInfo(name, limit, locale, offset, parentID);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Список предметов Метод предоставляет список названий [родительских категорий предметов](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1parent~1all/get) и их предметов с ID. Например, у категории &#x60;Игрушки&#x60; будут предметы &#x60;Калейдоскопы&#x60;, &#x60;Куклы&#x60;, &#x60;Мячики&#x60;.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">Поиск по названию предмета (Носки), поиск работает по подстроке, искать можно на любом из поддерживаемых языков. (optional)</param>
        /// <param name="limit">Количество предметов, максимум 1 000 (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="offset">Номер позиции, с которой необходимо получить ответ (optional)</param>
        /// <param name="parentID">ID родительской категории предмета (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2ObjectAllGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectAllGet200Response> ContentV2ObjectAllGetWithHttpInfo(string? name = default(string?), int? limit = default(int?), string? locale = default(string?), int? offset = default(int?), int? parentID = default(int?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (name != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "name", name));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (parentID != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "parentID", parentID));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2ObjectAllGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2ObjectAllGet200Response>("/content/v2/object/all", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2ObjectAllGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Список предметов Метод предоставляет список названий [родительских категорий предметов](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1parent~1all/get) и их предметов с ID. Например, у категории &#x60;Игрушки&#x60; будут предметы &#x60;Калейдоскопы&#x60;, &#x60;Куклы&#x60;, &#x60;Мячики&#x60;.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">Поиск по названию предмета (Носки), поиск работает по подстроке, искать можно на любом из поддерживаемых языков. (optional)</param>
        /// <param name="limit">Количество предметов, максимум 1 000 (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="offset">Номер позиции, с которой необходимо получить ответ (optional)</param>
        /// <param name="parentID">ID родительской категории предмета (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2ObjectAllGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2ObjectAllGet200Response> ContentV2ObjectAllGetAsync(string? name = default(string?), int? limit = default(int?), string? locale = default(string?), int? offset = default(int?), int? parentID = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectAllGet200Response> localVarResponse = await ContentV2ObjectAllGetWithHttpInfoAsync(name, limit, locale, offset, parentID, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Список предметов Метод предоставляет список названий [родительских категорий предметов](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1parent~1all/get) и их предметов с ID. Например, у категории &#x60;Игрушки&#x60; будут предметы &#x60;Калейдоскопы&#x60;, &#x60;Куклы&#x60;, &#x60;Мячики&#x60;.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">Поиск по названию предмета (Носки), поиск работает по подстроке, искать можно на любом из поддерживаемых языков. (optional)</param>
        /// <param name="limit">Количество предметов, максимум 1 000 (optional)</param>
        /// <param name="locale">Язык полей ответа:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="offset">Номер позиции, с которой необходимо получить ответ (optional)</param>
        /// <param name="parentID">ID родительской категории предмета (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2ObjectAllGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectAllGet200Response>> ContentV2ObjectAllGetWithHttpInfoAsync(string? name = default(string?), int? limit = default(int?), string? locale = default(string?), int? offset = default(int?), int? parentID = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (name != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "name", name));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (parentID != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "parentID", parentID));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2ObjectAllGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2ObjectAllGet200Response>("/content/v2/object/all", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2ObjectAllGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Характеристики предмета Метод предоставляет параметры характеристик предмета: названия, типы данных, единицы измерения и так далее. В запросе необходимо указать ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get).   &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Для получения характеристик &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1colors/get\&quot;&gt;Цвет&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1kinds/get\&quot;&gt;Пол&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1countries/get\&quot;&gt;Страна производства&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1seasons/get\&quot;&gt;Сезон&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1vat/get\&quot;&gt;Ставка НДС&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1tnved/get\&quot;&gt;ТНВЭД-код&lt;/a&gt; используйте отдельные методы &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectId">ID предмета</param>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2ObjectCharcsSubjectIdGet200Response</returns>
        public ContentV2ObjectCharcsSubjectIdGet200Response ContentV2ObjectCharcsSubjectIdGet(int subjectId, string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectCharcsSubjectIdGet200Response> localVarResponse = ContentV2ObjectCharcsSubjectIdGetWithHttpInfo(subjectId, locale);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Характеристики предмета Метод предоставляет параметры характеристик предмета: названия, типы данных, единицы измерения и так далее. В запросе необходимо указать ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get).   &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Для получения характеристик &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1colors/get\&quot;&gt;Цвет&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1kinds/get\&quot;&gt;Пол&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1countries/get\&quot;&gt;Страна производства&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1seasons/get\&quot;&gt;Сезон&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1vat/get\&quot;&gt;Ставка НДС&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1tnved/get\&quot;&gt;ТНВЭД-код&lt;/a&gt; используйте отдельные методы &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectId">ID предмета</param>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2ObjectCharcsSubjectIdGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectCharcsSubjectIdGet200Response> ContentV2ObjectCharcsSubjectIdGetWithHttpInfo(int subjectId, string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("subjectId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(subjectId)); // path parameter
            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2ObjectCharcsSubjectIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2ObjectCharcsSubjectIdGet200Response>("/content/v2/object/charcs/{subjectId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2ObjectCharcsSubjectIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Характеристики предмета Метод предоставляет параметры характеристик предмета: названия, типы данных, единицы измерения и так далее. В запросе необходимо указать ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get).   &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Для получения характеристик &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1colors/get\&quot;&gt;Цвет&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1kinds/get\&quot;&gt;Пол&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1countries/get\&quot;&gt;Страна производства&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1seasons/get\&quot;&gt;Сезон&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1vat/get\&quot;&gt;Ставка НДС&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1tnved/get\&quot;&gt;ТНВЭД-код&lt;/a&gt; используйте отдельные методы &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectId">ID предмета</param>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2ObjectCharcsSubjectIdGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2ObjectCharcsSubjectIdGet200Response> ContentV2ObjectCharcsSubjectIdGetAsync(int subjectId, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectCharcsSubjectIdGet200Response> localVarResponse = await ContentV2ObjectCharcsSubjectIdGetWithHttpInfoAsync(subjectId, locale, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Характеристики предмета Метод предоставляет параметры характеристик предмета: названия, типы данных, единицы измерения и так далее. В запросе необходимо указать ID [предмета](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get).   &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Для получения характеристик &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1colors/get\&quot;&gt;Цвет&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1kinds/get\&quot;&gt;Пол&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1countries/get\&quot;&gt;Страна производства&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1seasons/get\&quot;&gt;Сезон&lt;/a&gt;, &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1vat/get\&quot;&gt;Ставка НДС&lt;/a&gt; и &lt;a href&#x3D;\&quot;/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1tnved/get\&quot;&gt;ТНВЭД-код&lt;/a&gt; используйте отдельные методы &lt;/div&gt;  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subjectId">ID предмета</param>
        /// <param name="locale">Язык полей ответа &#x60;subjectName&#x60; и &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2ObjectCharcsSubjectIdGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectCharcsSubjectIdGet200Response>> ContentV2ObjectCharcsSubjectIdGetWithHttpInfoAsync(int subjectId, string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("subjectId", Org.OpenAPITools.Client.ClientUtils.ParameterToString(subjectId)); // path parameter
            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2ObjectCharcsSubjectIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2ObjectCharcsSubjectIdGet200Response>("/content/v2/object/charcs/{subjectId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2ObjectCharcsSubjectIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Родительские категории товаров Метод предоставляет названия и ID всех родительских категорий для [создания карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov): например, &#x60;Электроника&#x60;, &#x60;Бытовая химия&#x60;, &#x60;Рукоделие&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык поля ответа &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2ObjectParentAllGet200Response</returns>
        public ContentV2ObjectParentAllGet200Response ContentV2ObjectParentAllGet(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectParentAllGet200Response> localVarResponse = ContentV2ObjectParentAllGetWithHttpInfo(locale);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Родительские категории товаров Метод предоставляет названия и ID всех родительских категорий для [создания карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov): например, &#x60;Электроника&#x60;, &#x60;Бытовая химия&#x60;, &#x60;Рукоделие&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык поля ответа &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2ObjectParentAllGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectParentAllGet200Response> ContentV2ObjectParentAllGetWithHttpInfo(string? locale = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2ObjectParentAllGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2ObjectParentAllGet200Response>("/content/v2/object/parent/all", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2ObjectParentAllGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Родительские категории товаров Метод предоставляет названия и ID всех родительских категорий для [создания карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov): например, &#x60;Электроника&#x60;, &#x60;Бытовая химия&#x60;, &#x60;Рукоделие&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык поля ответа &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2ObjectParentAllGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2ObjectParentAllGet200Response> ContentV2ObjectParentAllGetAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectParentAllGet200Response> localVarResponse = await ContentV2ObjectParentAllGetWithHttpInfoAsync(locale, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Родительские категории товаров Метод предоставляет названия и ID всех родительских категорий для [создания карточек товаров](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov): например, &#x60;Электроника&#x60;, &#x60;Бытовая химия&#x60;, &#x60;Рукоделие&#x60;.   &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locale">Язык поля ответа &#x60;name&#x60;:     - &#x60;ru&#x60; — русский   - &#x60;en&#x60; — английский   - &#x60;zh&#x60; — китайский  Не используется в песочнице  (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2ObjectParentAllGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2ObjectParentAllGet200Response>> ContentV2ObjectParentAllGetWithHttpInfoAsync(string? locale = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locale != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locale", locale));
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV2ObjectParentAllGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2ObjectParentAllGet200Response>("/content/v2/object/parent/all", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2ObjectParentAllGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Удаление ярлыка Метод удаляет ярлык из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2TagIdDelete200Response</returns>
        public ContentV2TagIdDelete200Response ContentV2TagIdDelete(int id, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2TagIdDelete200Response> localVarResponse = ContentV2TagIdDeleteWithHttpInfo(id);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Удаление ярлыка Метод удаляет ярлык из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2TagIdDelete200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2TagIdDelete200Response> ContentV2TagIdDeleteWithHttpInfo(int id, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(id)); // path parameter

            localVarRequestOptions.Operation = "DefaultApi.ContentV2TagIdDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<ContentV2TagIdDelete200Response>("/content/v2/tag/{id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2TagIdDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Удаление ярлыка Метод удаляет ярлык из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2TagIdDelete200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2TagIdDelete200Response> ContentV2TagIdDeleteAsync(int id, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2TagIdDelete200Response> localVarResponse = await ContentV2TagIdDeleteWithHttpInfoAsync(id, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Удаление ярлыка Метод удаляет ярлык из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2TagIdDelete200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2TagIdDelete200Response>> ContentV2TagIdDeleteWithHttpInfoAsync(int id, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(id)); // path parameter

            localVarRequestOptions.Operation = "DefaultApi.ContentV2TagIdDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<ContentV2TagIdDelete200Response>("/content/v2/tag/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2TagIdDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Изменение ярлыка Метод заменяет данные ярлыка: имя и цвет. &lt;br&gt;Новые данные можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="contentV2TagIdPatchRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2TagIdPatch200Response</returns>
        public ContentV2TagIdPatch200Response ContentV2TagIdPatch(int id, ContentV2TagIdPatchRequest contentV2TagIdPatchRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2TagIdPatch200Response> localVarResponse = ContentV2TagIdPatchWithHttpInfo(id, contentV2TagIdPatchRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Изменение ярлыка Метод заменяет данные ярлыка: имя и цвет. &lt;br&gt;Новые данные можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="contentV2TagIdPatchRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2TagIdPatch200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2TagIdPatch200Response> ContentV2TagIdPatchWithHttpInfo(int id, ContentV2TagIdPatchRequest contentV2TagIdPatchRequest, int operationIndex = 0)
        {
            // verify the required parameter 'contentV2TagIdPatchRequest' is set
            if (contentV2TagIdPatchRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2TagIdPatchRequest' when calling DefaultApi->ContentV2TagIdPatch");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.Data = contentV2TagIdPatchRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2TagIdPatch";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Patch<ContentV2TagIdPatch200Response>("/content/v2/tag/{id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2TagIdPatch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Изменение ярлыка Метод заменяет данные ярлыка: имя и цвет. &lt;br&gt;Новые данные можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="contentV2TagIdPatchRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2TagIdPatch200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2TagIdPatch200Response> ContentV2TagIdPatchAsync(int id, ContentV2TagIdPatchRequest contentV2TagIdPatchRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2TagIdPatch200Response> localVarResponse = await ContentV2TagIdPatchWithHttpInfoAsync(id, contentV2TagIdPatchRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Изменение ярлыка Метод заменяет данные ярлыка: имя и цвет. &lt;br&gt;Новые данные можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Числовой ID ярлыка</param>
        /// <param name="contentV2TagIdPatchRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2TagIdPatch200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2TagIdPatch200Response>> ContentV2TagIdPatchWithHttpInfoAsync(int id, ContentV2TagIdPatchRequest contentV2TagIdPatchRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'contentV2TagIdPatchRequest' is set
            if (contentV2TagIdPatchRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2TagIdPatchRequest' when calling DefaultApi->ContentV2TagIdPatch");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.Data = contentV2TagIdPatchRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2TagIdPatch";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<ContentV2TagIdPatch200Response>("/content/v2/tag/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2TagIdPatch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Управление ярлыками в карточке товара Метод добавляет или снимает ярлык с карточки товара. К карточке можно добавить максимум 15 ярлыков.&lt;br&gt; При удалении ярлыка из карточки товара он не удаляется из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagNomenclatureLinkPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseContentError6</returns>
        public ResponseContentError6 ContentV2TagNomenclatureLinkPost(ContentV2TagNomenclatureLinkPostRequest contentV2TagNomenclatureLinkPostRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseContentError6> localVarResponse = ContentV2TagNomenclatureLinkPostWithHttpInfo(contentV2TagNomenclatureLinkPostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Управление ярлыками в карточке товара Метод добавляет или снимает ярлык с карточки товара. К карточке можно добавить максимум 15 ярлыков.&lt;br&gt; При удалении ярлыка из карточки товара он не удаляется из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagNomenclatureLinkPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseContentError6</returns>
        public Org.OpenAPITools.Client.ApiResponse<ResponseContentError6> ContentV2TagNomenclatureLinkPostWithHttpInfo(ContentV2TagNomenclatureLinkPostRequest contentV2TagNomenclatureLinkPostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'contentV2TagNomenclatureLinkPostRequest' is set
            if (contentV2TagNomenclatureLinkPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2TagNomenclatureLinkPostRequest' when calling DefaultApi->ContentV2TagNomenclatureLinkPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2TagNomenclatureLinkPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2TagNomenclatureLinkPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ResponseContentError6>("/content/v2/tag/nomenclature/link", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2TagNomenclatureLinkPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Управление ярлыками в карточке товара Метод добавляет или снимает ярлык с карточки товара. К карточке можно добавить максимум 15 ярлыков.&lt;br&gt; При удалении ярлыка из карточки товара он не удаляется из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagNomenclatureLinkPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseContentError6</returns>
        public async System.Threading.Tasks.Task<ResponseContentError6> ContentV2TagNomenclatureLinkPostAsync(ContentV2TagNomenclatureLinkPostRequest contentV2TagNomenclatureLinkPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseContentError6> localVarResponse = await ContentV2TagNomenclatureLinkPostWithHttpInfoAsync(contentV2TagNomenclatureLinkPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Управление ярлыками в карточке товара Метод добавляет или снимает ярлык с карточки товара. К карточке можно добавить максимум 15 ярлыков.&lt;br&gt; При удалении ярлыка из карточки товара он не удаляется из [списка ярлыков](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get) продавца.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagNomenclatureLinkPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseContentError6)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ResponseContentError6>> ContentV2TagNomenclatureLinkPostWithHttpInfoAsync(ContentV2TagNomenclatureLinkPostRequest contentV2TagNomenclatureLinkPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'contentV2TagNomenclatureLinkPostRequest' is set
            if (contentV2TagNomenclatureLinkPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2TagNomenclatureLinkPostRequest' when calling DefaultApi->ContentV2TagNomenclatureLinkPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2TagNomenclatureLinkPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2TagNomenclatureLinkPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ResponseContentError6>("/content/v2/tag/nomenclature/link", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2TagNomenclatureLinkPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Создание ярлыка Метод добавляет один ярлык продавца. Можно создать максимум 15 ярлыков для одного продавца. Максимальная длина ярлыка — 15 символов. &lt;br&gt;Созданный ярлык можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ResponseContentError6</returns>
        public ResponseContentError6 ContentV2TagPost(ContentV2TagPostRequest contentV2TagPostRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseContentError6> localVarResponse = ContentV2TagPostWithHttpInfo(contentV2TagPostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Создание ярлыка Метод добавляет один ярлык продавца. Можно создать максимум 15 ярлыков для одного продавца. Максимальная длина ярлыка — 15 символов. &lt;br&gt;Созданный ярлык можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ResponseContentError6</returns>
        public Org.OpenAPITools.Client.ApiResponse<ResponseContentError6> ContentV2TagPostWithHttpInfo(ContentV2TagPostRequest contentV2TagPostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'contentV2TagPostRequest' is set
            if (contentV2TagPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2TagPostRequest' when calling DefaultApi->ContentV2TagPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2TagPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2TagPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ResponseContentError6>("/content/v2/tag", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2TagPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Создание ярлыка Метод добавляет один ярлык продавца. Можно создать максимум 15 ярлыков для одного продавца. Максимальная длина ярлыка — 15 символов. &lt;br&gt;Созданный ярлык можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ResponseContentError6</returns>
        public async System.Threading.Tasks.Task<ResponseContentError6> ContentV2TagPostAsync(ContentV2TagPostRequest contentV2TagPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ResponseContentError6> localVarResponse = await ContentV2TagPostWithHttpInfoAsync(contentV2TagPostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Создание ярлыка Метод добавляет один ярлык продавца. Можно создать максимум 15 ярлыков для одного продавца. Максимальная длина ярлыка — 15 символов. &lt;br&gt;Созданный ярлык можно получить в общем [списке](/openapi/work-with-products#tag/Yarlyki/paths/~1content~1v2~1tags/get).  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV2TagPostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ResponseContentError6)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ResponseContentError6>> ContentV2TagPostWithHttpInfoAsync(ContentV2TagPostRequest contentV2TagPostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'contentV2TagPostRequest' is set
            if (contentV2TagPostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV2TagPostRequest' when calling DefaultApi->ContentV2TagPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV2TagPostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV2TagPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ResponseContentError6>("/content/v2/tag", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2TagPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Список ярлыков Метод предоставляет список и характеристики всех ярлыков продавца для группировки и фильтрации товаров.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV2TagsGet200Response</returns>
        public ContentV2TagsGet200Response ContentV2TagsGet(int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2TagsGet200Response> localVarResponse = ContentV2TagsGetWithHttpInfo();
            return localVarResponse.Data;
        }

        /// <summary>
        /// Список ярлыков Метод предоставляет список и характеристики всех ярлыков продавца для группировки и фильтрации товаров.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV2TagsGet200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV2TagsGet200Response> ContentV2TagsGetWithHttpInfo(int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "DefaultApi.ContentV2TagsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ContentV2TagsGet200Response>("/content/v2/tags", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2TagsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Список ярлыков Метод предоставляет список и характеристики всех ярлыков продавца для группировки и фильтрации товаров.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV2TagsGet200Response</returns>
        public async System.Threading.Tasks.Task<ContentV2TagsGet200Response> ContentV2TagsGetAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV2TagsGet200Response> localVarResponse = await ContentV2TagsGetWithHttpInfoAsync(operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Список ярлыков Метод предоставляет список и характеристики всех ярлыков продавца для группировки и фильтрации товаров.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV2TagsGet200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV2TagsGet200Response>> ContentV2TagsGetWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "DefaultApi.ContentV2TagsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ContentV2TagsGet200Response>("/content/v2/tags", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV2TagsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Загрузить медиафайл Метод загружает и добавляет один медиафайл к карточке товара.  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700x900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xNmId">Артикул WB</param>
        /// <param name="xPhotoNumber">Номер медиафайла на загрузку, начинается с &#x60;1&#x60;. При загрузке видео всегда указывайте &#x60;1&#x60;.  Чтобы добавить изображение к уже загруженным, номер медиафайла должен быть больше количества уже загруженных медиафайлов. </param>
        /// <param name="uploadfile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV3MediaFilePost200Response</returns>
        public ContentV3MediaFilePost200Response ContentV3MediaFilePost(string xNmId, int xPhotoNumber, System.IO.Stream? uploadfile = default(System.IO.Stream?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV3MediaFilePost200Response> localVarResponse = ContentV3MediaFilePostWithHttpInfo(xNmId, xPhotoNumber, uploadfile);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Загрузить медиафайл Метод загружает и добавляет один медиафайл к карточке товара.  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700x900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xNmId">Артикул WB</param>
        /// <param name="xPhotoNumber">Номер медиафайла на загрузку, начинается с &#x60;1&#x60;. При загрузке видео всегда указывайте &#x60;1&#x60;.  Чтобы добавить изображение к уже загруженным, номер медиафайла должен быть больше количества уже загруженных медиафайлов. </param>
        /// <param name="uploadfile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV3MediaFilePost200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV3MediaFilePost200Response> ContentV3MediaFilePostWithHttpInfo(string xNmId, int xPhotoNumber, System.IO.Stream? uploadfile = default(System.IO.Stream?), int operationIndex = 0)
        {
            // verify the required parameter 'xNmId' is set
            if (xNmId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'xNmId' when calling DefaultApi->ContentV3MediaFilePost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("X-Nm-Id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(xNmId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("X-Photo-Number", Org.OpenAPITools.Client.ClientUtils.ParameterToString(xPhotoNumber)); // header parameter
            if (uploadfile != null)
            {
                localVarRequestOptions.FileParameters.Add("uploadfile", uploadfile);
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV3MediaFilePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ContentV3MediaFilePost200Response>("/content/v3/media/file", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV3MediaFilePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Загрузить медиафайл Метод загружает и добавляет один медиафайл к карточке товара.  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700x900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xNmId">Артикул WB</param>
        /// <param name="xPhotoNumber">Номер медиафайла на загрузку, начинается с &#x60;1&#x60;. При загрузке видео всегда указывайте &#x60;1&#x60;.  Чтобы добавить изображение к уже загруженным, номер медиафайла должен быть больше количества уже загруженных медиафайлов. </param>
        /// <param name="uploadfile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV3MediaFilePost200Response</returns>
        public async System.Threading.Tasks.Task<ContentV3MediaFilePost200Response> ContentV3MediaFilePostAsync(string xNmId, int xPhotoNumber, System.IO.Stream? uploadfile = default(System.IO.Stream?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV3MediaFilePost200Response> localVarResponse = await ContentV3MediaFilePostWithHttpInfoAsync(xNmId, xPhotoNumber, uploadfile, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Загрузить медиафайл Метод загружает и добавляет один медиафайл к карточке товара.  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700x900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xNmId">Артикул WB</param>
        /// <param name="xPhotoNumber">Номер медиафайла на загрузку, начинается с &#x60;1&#x60;. При загрузке видео всегда указывайте &#x60;1&#x60;.  Чтобы добавить изображение к уже загруженным, номер медиафайла должен быть больше количества уже загруженных медиафайлов. </param>
        /// <param name="uploadfile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV3MediaFilePost200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV3MediaFilePost200Response>> ContentV3MediaFilePostWithHttpInfoAsync(string xNmId, int xPhotoNumber, System.IO.Stream? uploadfile = default(System.IO.Stream?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'xNmId' is set
            if (xNmId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'xNmId' when calling DefaultApi->ContentV3MediaFilePost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("X-Nm-Id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(xNmId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("X-Photo-Number", Org.OpenAPITools.Client.ClientUtils.ParameterToString(xPhotoNumber)); // header parameter
            if (uploadfile != null)
            {
                localVarRequestOptions.FileParameters.Add("uploadfile", uploadfile);
            }

            localVarRequestOptions.Operation = "DefaultApi.ContentV3MediaFilePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ContentV3MediaFilePost200Response>("/content/v3/media/file", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV3MediaFilePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Загрузить медиафайлы по ссылкам Метод загружает набор медиафайлов в карточку товара через указание ссылок в запросе.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Новые медиафайлы полностью заменяют старые. Чтобы добавить новые медиафайлы, укажите в запросе ссылки одновременно на новые и старые медиафайлы. &lt;/div&gt;  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700×900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  Если видео или хотя бы одно изображение в запросе не соответствует требованиям, то даже при успешном ответе ни одно изображение/видео не загрузится.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV3MediaSavePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ContentV3MediaFilePost200Response</returns>
        public ContentV3MediaFilePost200Response ContentV3MediaSavePost(ContentV3MediaSavePostRequest contentV3MediaSavePostRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV3MediaFilePost200Response> localVarResponse = ContentV3MediaSavePostWithHttpInfo(contentV3MediaSavePostRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Загрузить медиафайлы по ссылкам Метод загружает набор медиафайлов в карточку товара через указание ссылок в запросе.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Новые медиафайлы полностью заменяют старые. Чтобы добавить новые медиафайлы, укажите в запросе ссылки одновременно на новые и старые медиафайлы. &lt;/div&gt;  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700×900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  Если видео или хотя бы одно изображение в запросе не соответствует требованиям, то даже при успешном ответе ни одно изображение/видео не загрузится.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV3MediaSavePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ContentV3MediaFilePost200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ContentV3MediaFilePost200Response> ContentV3MediaSavePostWithHttpInfo(ContentV3MediaSavePostRequest contentV3MediaSavePostRequest, int operationIndex = 0)
        {
            // verify the required parameter 'contentV3MediaSavePostRequest' is set
            if (contentV3MediaSavePostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV3MediaSavePostRequest' when calling DefaultApi->ContentV3MediaSavePost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV3MediaSavePostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV3MediaSavePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ContentV3MediaFilePost200Response>("/content/v3/media/save", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV3MediaSavePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Загрузить медиафайлы по ссылкам Метод загружает набор медиафайлов в карточку товара через указание ссылок в запросе.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Новые медиафайлы полностью заменяют старые. Чтобы добавить новые медиафайлы, укажите в запросе ссылки одновременно на новые и старые медиафайлы. &lt;/div&gt;  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700×900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  Если видео или хотя бы одно изображение в запросе не соответствует требованиям, то даже при успешном ответе ни одно изображение/видео не загрузится.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV3MediaSavePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ContentV3MediaFilePost200Response</returns>
        public async System.Threading.Tasks.Task<ContentV3MediaFilePost200Response> ContentV3MediaSavePostAsync(ContentV3MediaSavePostRequest contentV3MediaSavePostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ContentV3MediaFilePost200Response> localVarResponse = await ContentV3MediaSavePostWithHttpInfoAsync(contentV3MediaSavePostRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Загрузить медиафайлы по ссылкам Метод загружает набор медиафайлов в карточку товара через указание ссылок в запросе.  &lt;div class&#x3D;\&quot;description_important\&quot;&gt;   Новые медиафайлы полностью заменяют старые. Чтобы добавить новые медиафайлы, укажите в запросе ссылки одновременно на новые и старые медиафайлы. &lt;/div&gt;  Требования к изображениям:   * максимум изображений для одной карточки товара — 30   * минимальное разрешение — 700×900 px   * максимальный размер — 32 Мб   * минимальное качество — 65%   * форматы — JPG, PNG, BMP, GIF (статичные), WebP  Требования к видео:   * максимум одно видео для одной карточки товара   * максимальный размер — 50 Мб   * форматы — MOV, MP4  Если видео или хотя бы одно изображение в запросе не соответствует требованиям, то даже при успешном ответе ни одно изображение/видео не загрузится.  &lt;div class&#x3D;\&quot;description_limit\&quot;&gt;   Максимум 100 запросов в минуту для всех методов категории &lt;a href&#x3D;\&quot;/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\&quot;&gt;Контент&lt;/a&gt; на один аккаунт продавца &lt;/div&gt; 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="contentV3MediaSavePostRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ContentV3MediaFilePost200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ContentV3MediaFilePost200Response>> ContentV3MediaSavePostWithHttpInfoAsync(ContentV3MediaSavePostRequest contentV3MediaSavePostRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'contentV3MediaSavePostRequest' is set
            if (contentV3MediaSavePostRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'contentV3MediaSavePostRequest' when calling DefaultApi->ContentV3MediaSavePost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = contentV3MediaSavePostRequest;

            localVarRequestOptions.Operation = "DefaultApi.ContentV3MediaSavePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (HeaderApiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ContentV3MediaFilePost200Response>("/content/v3/media/save", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ContentV3MediaSavePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
