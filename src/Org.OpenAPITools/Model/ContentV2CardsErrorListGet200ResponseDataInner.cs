/*
 * Работа с товарами
 *
 * Работа с товарами включает в себя:   1. [Создание](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov) и [редактирование](/openapi/work-with-products#tag/Kartochki-tovarov) карточек товаров: в том числе, получение [категорий, предметов и характеристик товаров](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki) и загрузку [медиафайлов](/openapi/work-with-products#tag/Mediafajly).   2. Настройку [ярлыков](/openapi/work-with-products#tag/Yarlyki) для удобного поиска товаров.   3. Установку [цен и скидок](/openapi/work-with-products#tag/Ceny-i-skidki).   4. Управление [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca) и [складами](/openapi/work-with-products#tag/Sklady-prodavca), если вы работаете по модели продаж со склада продавца. 
 *
 * The version of the OpenAPI document: products
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ContentV2CardsErrorListGet200ResponseDataInner
    /// </summary>
    [DataContract(Name = "_content_v2_cards_error_list_get_200_response_data_inner")]
    public partial class ContentV2CardsErrorListGet200ResponseDataInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContentV2CardsErrorListGet200ResponseDataInner" /> class.
        /// </summary>
        /// <param name="varObject">Категория, для которой создавалась карточка товара.</param>
        /// <param name="vendorCode">Артикул продавца.</param>
        /// <param name="updateAt">Дата и время запроса на создание карточки товара.</param>
        /// <param name="errors">Список ошибок, из-за которых не обработался запрос на создание карточки товара.</param>
        /// <param name="objectID">ID предмета.</param>
        public ContentV2CardsErrorListGet200ResponseDataInner(string varObject = default(string), string vendorCode = default(string), string updateAt = default(string), List<string> errors = default(List<string>), int objectID = default(int))
        {
            this.Object = varObject;
            this.VendorCode = vendorCode;
            this.UpdateAt = updateAt;
            this.Errors = errors;
            this.ObjectID = objectID;
        }

        /// <summary>
        /// Категория, для которой создавалась карточка товара
        /// </summary>
        /// <value>Категория, для которой создавалась карточка товара</value>
        /*
        <example>Блузки</example>
        */
        [DataMember(Name = "object", EmitDefaultValue = false)]
        public string Object { get; set; }

        /// <summary>
        /// Артикул продавца
        /// </summary>
        /// <value>Артикул продавца</value>
        /*
        <example>6000000001</example>
        */
        [DataMember(Name = "vendorCode", EmitDefaultValue = false)]
        public string VendorCode { get; set; }

        /// <summary>
        /// Дата и время запроса на создание карточки товара
        /// </summary>
        /// <value>Дата и время запроса на создание карточки товара</value>
        /*
        <example>2022-06-15T14:37:13Z</example>
        */
        [DataMember(Name = "updateAt", EmitDefaultValue = false)]
        public string UpdateAt { get; set; }

        /// <summary>
        /// Список ошибок, из-за которых не обработался запрос на создание карточки товара
        /// </summary>
        /// <value>Список ошибок, из-за которых не обработался запрос на создание карточки товара</value>
        [DataMember(Name = "errors", EmitDefaultValue = false)]
        public List<string> Errors { get; set; }

        /// <summary>
        /// ID предмета
        /// </summary>
        /// <value>ID предмета</value>
        /*
        <example>41</example>
        */
        [DataMember(Name = "objectID", EmitDefaultValue = false)]
        public int ObjectID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContentV2CardsErrorListGet200ResponseDataInner {\n");
            sb.Append("  Object: ").Append(Object).Append("\n");
            sb.Append("  VendorCode: ").Append(VendorCode).Append("\n");
            sb.Append("  UpdateAt: ").Append(UpdateAt).Append("\n");
            sb.Append("  Errors: ").Append(Errors).Append("\n");
            sb.Append("  ObjectID: ").Append(ObjectID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
