/*
 * Работа с товарами
 *
 * Работа с товарами включает в себя:   1. [Создание](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov) и [редактирование](/openapi/work-with-products#tag/Kartochki-tovarov) карточек товаров: в том числе, получение [категорий, предметов и характеристик товаров](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki) и загрузку [медиафайлов](/openapi/work-with-products#tag/Mediafajly).   2. Настройку [ярлыков](/openapi/work-with-products#tag/Yarlyki) для удобного поиска товаров.   3. Установку [цен и скидок](/openapi/work-with-products#tag/Ceny-i-skidki).   4. Управление [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca) и [складами](/openapi/work-with-products#tag/Sklady-prodavca), если вы работаете по модели продаж со склада продавца. 
 *
 * The version of the OpenAPI document: products
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ContentV3MediaSavePostRequest
    /// </summary>
    [DataContract(Name = "_content_v3_media_save_post_request")]
    public partial class ContentV3MediaSavePostRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContentV3MediaSavePostRequest" /> class.
        /// </summary>
        /// <param name="nmId">Артикул WB.</param>
        /// <param name="data">Ссылки на изображения в том порядке, в котором они будут в карточке товара, и на видео, на любой позиции массива.</param>
        public ContentV3MediaSavePostRequest(int nmId = default(int), List<string> data = default(List<string>))
        {
            this.NmId = nmId;
            this.Data = data;
        }

        /// <summary>
        /// Артикул WB
        /// </summary>
        /// <value>Артикул WB</value>
        [DataMember(Name = "nmId", EmitDefaultValue = false)]
        public int NmId { get; set; }

        /// <summary>
        /// Ссылки на изображения в том порядке, в котором они будут в карточке товара, и на видео, на любой позиции массива
        /// </summary>
        /// <value>Ссылки на изображения в том порядке, в котором они будут в карточке товара, и на видео, на любой позиции массива</value>
        [DataMember(Name = "data", EmitDefaultValue = false)]
        public List<string> Data { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContentV3MediaSavePostRequest {\n");
            sb.Append("  NmId: ").Append(NmId).Append("\n");
            sb.Append("  Data: ").Append(Data).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
