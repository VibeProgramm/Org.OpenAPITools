/*
 * Работа с товарами
 *
 * Работа с товарами включает в себя:   1. [Создание](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov) и [редактирование](/openapi/work-with-products#tag/Kartochki-tovarov) карточек товаров: в том числе, получение [категорий, предметов и характеристик товаров](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki) и загрузку [медиафайлов](/openapi/work-with-products#tag/Mediafajly).   2. Настройку [ярлыков](/openapi/work-with-products#tag/Yarlyki) для удобного поиска товаров.   3. Установку [цен и скидок](/openapi/work-with-products#tag/Ceny-i-skidki).   4. Управление [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca) и [складами](/openapi/work-with-products#tag/Sklady-prodavca), если вы работаете по модели продаж со склада продавца. 
 *
 * The version of the OpenAPI document: products
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ContentV2GetCardsListPost200ResponseCardsInnerPhotosInner
    /// </summary>
    [DataContract(Name = "_content_v2_get_cards_list_post_200_response_cards_inner_photos_inner")]
    public partial class ContentV2GetCardsListPost200ResponseCardsInnerPhotosInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContentV2GetCardsListPost200ResponseCardsInnerPhotosInner" /> class.
        /// </summary>
        /// <param name="big">URL фото &#x60;900х1200&#x60;.</param>
        /// <param name="c246x328">URL фото &#x60;248х328&#x60;.</param>
        /// <param name="c516x688">URL фото &#x60;516х688&#x60;.</param>
        /// <param name="square">URL фото &#x60;600х600&#x60;.</param>
        /// <param name="tm">URL фото &#x60;75х100&#x60;.</param>
        public ContentV2GetCardsListPost200ResponseCardsInnerPhotosInner(string big = default(string), string c246x328 = default(string), string c516x688 = default(string), string square = default(string), string tm = default(string))
        {
            this.Big = big;
            this.C246x328 = c246x328;
            this.C516x688 = c516x688;
            this.Square = square;
            this.Tm = tm;
        }

        /// <summary>
        /// URL фото &#x60;900х1200&#x60;
        /// </summary>
        /// <value>URL фото &#x60;900х1200&#x60;</value>
        [DataMember(Name = "big", EmitDefaultValue = false)]
        public string Big { get; set; }

        /// <summary>
        /// URL фото &#x60;248х328&#x60;
        /// </summary>
        /// <value>URL фото &#x60;248х328&#x60;</value>
        [DataMember(Name = "c246x328", EmitDefaultValue = false)]
        public string C246x328 { get; set; }

        /// <summary>
        /// URL фото &#x60;516х688&#x60;
        /// </summary>
        /// <value>URL фото &#x60;516х688&#x60;</value>
        [DataMember(Name = "c516x688", EmitDefaultValue = false)]
        public string C516x688 { get; set; }

        /// <summary>
        /// URL фото &#x60;600х600&#x60;
        /// </summary>
        /// <value>URL фото &#x60;600х600&#x60;</value>
        [DataMember(Name = "square", EmitDefaultValue = false)]
        public string Square { get; set; }

        /// <summary>
        /// URL фото &#x60;75х100&#x60;
        /// </summary>
        /// <value>URL фото &#x60;75х100&#x60;</value>
        [DataMember(Name = "tm", EmitDefaultValue = false)]
        public string Tm { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContentV2GetCardsListPost200ResponseCardsInnerPhotosInner {\n");
            sb.Append("  Big: ").Append(Big).Append("\n");
            sb.Append("  C246x328: ").Append(C246x328).Append("\n");
            sb.Append("  C516x688: ").Append(C516x688).Append("\n");
            sb.Append("  Square: ").Append(Square).Append("\n");
            sb.Append("  Tm: ").Append(Tm).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
