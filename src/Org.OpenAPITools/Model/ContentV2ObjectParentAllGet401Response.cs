/*
 * Работа с товарами
 *
 * Работа с товарами включает в себя:   1. [Создание](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov) и [редактирование](/openapi/work-with-products#tag/Kartochki-tovarov) карточек товаров: в том числе, получение [категорий, предметов и характеристик товаров](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki) и загрузку [медиафайлов](/openapi/work-with-products#tag/Mediafajly).   2. Настройку [ярлыков](/openapi/work-with-products#tag/Yarlyki) для удобного поиска товаров.   3. Установку [цен и скидок](/openapi/work-with-products#tag/Ceny-i-skidki).   4. Управление [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca) и [складами](/openapi/work-with-products#tag/Sklady-prodavca), если вы работаете по модели продаж со склада продавца. 
 *
 * The version of the OpenAPI document: products
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ContentV2ObjectParentAllGet401Response
    /// </summary>
    [DataContract(Name = "_content_v2_object_parent_all_get_401_response")]
    public partial class ContentV2ObjectParentAllGet401Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContentV2ObjectParentAllGet401Response" /> class.
        /// </summary>
        /// <param name="title">Заголовок ошибки.</param>
        /// <param name="detail">Детали ошибки.</param>
        /// <param name="code">Внутренний код ошибки.</param>
        /// <param name="requestId">Уникальный ID запроса.</param>
        /// <param name="origin">ID внутреннего сервиса WB.</param>
        /// <param name="status">HTTP статус-код.</param>
        /// <param name="statusText">Расшифровка HTTP статус-кода.</param>
        /// <param name="timestamp">Дата и время запроса.</param>
        public ContentV2ObjectParentAllGet401Response(string title = default(string), string detail = default(string), string code = default(string), string requestId = default(string), string origin = default(string), decimal status = default(decimal), string statusText = default(string), string timestamp = default(string))
        {
            this.Title = title;
            this.Detail = detail;
            this.Code = code;
            this.RequestId = requestId;
            this.Origin = origin;
            this.Status = status;
            this.StatusText = statusText;
            this.Timestamp = timestamp;
        }

        /// <summary>
        /// Заголовок ошибки
        /// </summary>
        /// <value>Заголовок ошибки</value>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Детали ошибки
        /// </summary>
        /// <value>Детали ошибки</value>
        [DataMember(Name = "detail", EmitDefaultValue = false)]
        public string Detail { get; set; }

        /// <summary>
        /// Внутренний код ошибки
        /// </summary>
        /// <value>Внутренний код ошибки</value>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public string Code { get; set; }

        /// <summary>
        /// Уникальный ID запроса
        /// </summary>
        /// <value>Уникальный ID запроса</value>
        [DataMember(Name = "requestId", EmitDefaultValue = false)]
        public string RequestId { get; set; }

        /// <summary>
        /// ID внутреннего сервиса WB
        /// </summary>
        /// <value>ID внутреннего сервиса WB</value>
        [DataMember(Name = "origin", EmitDefaultValue = false)]
        public string Origin { get; set; }

        /// <summary>
        /// HTTP статус-код
        /// </summary>
        /// <value>HTTP статус-код</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public decimal Status { get; set; }

        /// <summary>
        /// Расшифровка HTTP статус-кода
        /// </summary>
        /// <value>Расшифровка HTTP статус-кода</value>
        [DataMember(Name = "statusText", EmitDefaultValue = false)]
        public string StatusText { get; set; }

        /// <summary>
        /// Дата и время запроса
        /// </summary>
        /// <value>Дата и время запроса</value>
        [DataMember(Name = "timestamp", EmitDefaultValue = false)]
        public string Timestamp { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContentV2ObjectParentAllGet401Response {\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Detail: ").Append(Detail).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  RequestId: ").Append(RequestId).Append("\n");
            sb.Append("  Origin: ").Append(Origin).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusText: ").Append(StatusText).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
