/*
 * Работа с товарами
 *
 * Работа с товарами включает в себя:   1. [Создание](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov) и [редактирование](/openapi/work-with-products#tag/Kartochki-tovarov) карточек товаров: в том числе, получение [категорий, предметов и характеристик товаров](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki) и загрузку [медиафайлов](/openapi/work-with-products#tag/Mediafajly).   2. Настройку [ярлыков](/openapi/work-with-products#tag/Yarlyki) для удобного поиска товаров.   3. Установку [цен и скидок](/openapi/work-with-products#tag/Ceny-i-skidki).   4. Управление [остатками товаров](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca) и [складами](/openapi/work-with-products#tag/Sklady-prodavca), если вы работаете по модели продаж со склада продавца. 
 *
 * The version of the OpenAPI document: products
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DefaultApiTests : IDisposable
    {
        private DefaultApi instance;

        public DefaultApiTests()
        {
            instance = new DefaultApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DefaultApi
            //Assert.IsType<DefaultApi>(instance);
        }

        /// <summary>
        /// Test ApiV2BufferGoodsTaskGet
        /// </summary>
        [Fact]
        public void ApiV2BufferGoodsTaskGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int limit = null;
            //int uploadID = null;
            //int? offset = null;
            //var response = instance.ApiV2BufferGoodsTaskGet(limit, uploadID, offset);
            //Assert.IsType<ApiV2BufferGoodsTaskGet200Response>(response);
        }

        /// <summary>
        /// Test ApiV2BufferTasksGet
        /// </summary>
        [Fact]
        public void ApiV2BufferTasksGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int uploadID = null;
            //var response = instance.ApiV2BufferTasksGet(uploadID);
            //Assert.IsType<ApiV2BufferTasksGet200Response>(response);
        }

        /// <summary>
        /// Test ApiV2HistoryGoodsTaskGet
        /// </summary>
        [Fact]
        public void ApiV2HistoryGoodsTaskGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int limit = null;
            //int uploadID = null;
            //int? offset = null;
            //var response = instance.ApiV2HistoryGoodsTaskGet(limit, uploadID, offset);
            //Assert.IsType<ApiV2HistoryGoodsTaskGet200Response>(response);
        }

        /// <summary>
        /// Test ApiV2HistoryTasksGet
        /// </summary>
        [Fact]
        public void ApiV2HistoryTasksGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int uploadID = null;
            //var response = instance.ApiV2HistoryTasksGet(uploadID);
            //Assert.IsType<ApiV2HistoryTasksGet200Response>(response);
        }

        /// <summary>
        /// Test ApiV2ListGoodsFilterGet
        /// </summary>
        [Fact]
        public void ApiV2ListGoodsFilterGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int limit = null;
            //int? offset = null;
            //int? filterNmID = null;
            //var response = instance.ApiV2ListGoodsFilterGet(limit, offset, filterNmID);
            //Assert.IsType<ApiV2ListGoodsFilterGet200Response>(response);
        }

        /// <summary>
        /// Test ApiV2ListGoodsSizeNmGet
        /// </summary>
        [Fact]
        public void ApiV2ListGoodsSizeNmGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int limit = null;
            //int nmID = null;
            //int? offset = null;
            //var response = instance.ApiV2ListGoodsSizeNmGet(limit, nmID, offset);
            //Assert.IsType<ApiV2ListGoodsSizeNmGet200Response>(response);
        }

        /// <summary>
        /// Test ApiV2QuarantineGoodsGet
        /// </summary>
        [Fact]
        public void ApiV2QuarantineGoodsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int limit = null;
            //int? offset = null;
            //var response = instance.ApiV2QuarantineGoodsGet(limit, offset);
            //Assert.IsType<ApiV2QuarantineGoodsGet200Response>(response);
        }

        /// <summary>
        /// Test ApiV2UploadTaskClubDiscountPost
        /// </summary>
        [Fact]
        public void ApiV2UploadTaskClubDiscountPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2UploadTaskClubDiscountPostRequest apiV2UploadTaskClubDiscountPostRequest = null;
            //var response = instance.ApiV2UploadTaskClubDiscountPost(apiV2UploadTaskClubDiscountPostRequest);
            //Assert.IsType<TaskCreated>(response);
        }

        /// <summary>
        /// Test ApiV2UploadTaskPost
        /// </summary>
        [Fact]
        public void ApiV2UploadTaskPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2UploadTaskPostRequest apiV2UploadTaskPostRequest = null;
            //var response = instance.ApiV2UploadTaskPost(apiV2UploadTaskPostRequest);
            //Assert.IsType<TaskCreated>(response);
        }

        /// <summary>
        /// Test ApiV2UploadTaskSizePost
        /// </summary>
        [Fact]
        public void ApiV2UploadTaskSizePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2UploadTaskSizePostRequest apiV2UploadTaskSizePostRequest = null;
            //var response = instance.ApiV2UploadTaskSizePost(apiV2UploadTaskSizePostRequest);
            //Assert.IsType<TaskCreated>(response);
        }

        /// <summary>
        /// Test ApiV3OfficesGet
        /// </summary>
        [Fact]
        public void ApiV3OfficesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiV3OfficesGet();
            //Assert.IsType<List<Office>>(response);
        }

        /// <summary>
        /// Test ApiV3StocksWarehouseIdDelete
        /// </summary>
        [Fact]
        public void ApiV3StocksWarehouseIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long warehouseId = null;
            //ApiV3StocksWarehouseIdDeleteRequest apiV3StocksWarehouseIdDeleteRequest = null;
            //instance.ApiV3StocksWarehouseIdDelete(warehouseId, apiV3StocksWarehouseIdDeleteRequest);
        }

        /// <summary>
        /// Test ApiV3StocksWarehouseIdPost
        /// </summary>
        [Fact]
        public void ApiV3StocksWarehouseIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long warehouseId = null;
            //ApiV3StocksWarehouseIdPostRequest apiV3StocksWarehouseIdPostRequest = null;
            //var response = instance.ApiV3StocksWarehouseIdPost(warehouseId, apiV3StocksWarehouseIdPostRequest);
            //Assert.IsType<ApiV3StocksWarehouseIdPost200Response>(response);
        }

        /// <summary>
        /// Test ApiV3StocksWarehouseIdPut
        /// </summary>
        [Fact]
        public void ApiV3StocksWarehouseIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long warehouseId = null;
            //ApiV3StocksWarehouseIdPutRequest? apiV3StocksWarehouseIdPutRequest = null;
            //instance.ApiV3StocksWarehouseIdPut(warehouseId, apiV3StocksWarehouseIdPutRequest);
        }

        /// <summary>
        /// Test ApiV3WarehousesGet
        /// </summary>
        [Fact]
        public void ApiV3WarehousesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiV3WarehousesGet();
            //Assert.IsType<List<Warehouse>>(response);
        }

        /// <summary>
        /// Test ApiV3WarehousesPost
        /// </summary>
        [Fact]
        public void ApiV3WarehousesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV3WarehousesPostRequest apiV3WarehousesPostRequest = null;
            //var response = instance.ApiV3WarehousesPost(apiV3WarehousesPostRequest);
            //Assert.IsType<ApiV3WarehousesPost201Response>(response);
        }

        /// <summary>
        /// Test ApiV3WarehousesWarehouseIdDelete
        /// </summary>
        [Fact]
        public void ApiV3WarehousesWarehouseIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long warehouseId = null;
            //instance.ApiV3WarehousesWarehouseIdDelete(warehouseId);
        }

        /// <summary>
        /// Test ApiV3WarehousesWarehouseIdPut
        /// </summary>
        [Fact]
        public void ApiV3WarehousesWarehouseIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long warehouseId = null;
            //ApiV3WarehousesPostRequest apiV3WarehousesPostRequest = null;
            //instance.ApiV3WarehousesWarehouseIdPut(warehouseId, apiV3WarehousesPostRequest);
        }

        /// <summary>
        /// Test ContentV2BarcodesPost
        /// </summary>
        [Fact]
        public void ContentV2BarcodesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentV2BarcodesPostRequest contentV2BarcodesPostRequest = null;
            //var response = instance.ContentV2BarcodesPost(contentV2BarcodesPostRequest);
            //Assert.IsType<ContentV2BarcodesPost200Response>(response);
        }

        /// <summary>
        /// Test ContentV2CardsDeleteTrashPost
        /// </summary>
        [Fact]
        public void ContentV2CardsDeleteTrashPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest = null;
            //var response = instance.ContentV2CardsDeleteTrashPost(contentV2CardsDeleteTrashPostRequest);
            //Assert.IsType<ContentV2CardsDeleteTrashPost200Response>(response);
        }

        /// <summary>
        /// Test ContentV2CardsErrorListGet
        /// </summary>
        [Fact]
        public void ContentV2CardsErrorListGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? locale = null;
            //var response = instance.ContentV2CardsErrorListGet(locale);
            //Assert.IsType<ContentV2CardsErrorListGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV2CardsLimitsGet
        /// </summary>
        [Fact]
        public void ContentV2CardsLimitsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ContentV2CardsLimitsGet();
            //Assert.IsType<ContentV2CardsLimitsGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV2CardsMoveNmPost
        /// </summary>
        [Fact]
        public void ContentV2CardsMoveNmPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentV2CardsMoveNmPostRequest? contentV2CardsMoveNmPostRequest = null;
            //var response = instance.ContentV2CardsMoveNmPost(contentV2CardsMoveNmPostRequest);
            //Assert.IsType<ResponseCardCreate>(response);
        }

        /// <summary>
        /// Test ContentV2CardsRecoverPost
        /// </summary>
        [Fact]
        public void ContentV2CardsRecoverPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentV2CardsDeleteTrashPostRequest contentV2CardsDeleteTrashPostRequest = null;
            //var response = instance.ContentV2CardsRecoverPost(contentV2CardsDeleteTrashPostRequest);
            //Assert.IsType<ContentV2CardsDeleteTrashPost200Response>(response);
        }

        /// <summary>
        /// Test ContentV2CardsUpdatePost
        /// </summary>
        [Fact]
        public void ContentV2CardsUpdatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<ContentV2CardsUpdatePostRequestInner>? contentV2CardsUpdatePostRequestInner = null;
            //var response = instance.ContentV2CardsUpdatePost(contentV2CardsUpdatePostRequestInner);
            //Assert.IsType<ResponseCardCreate>(response);
        }

        /// <summary>
        /// Test ContentV2CardsUploadAddPost
        /// </summary>
        [Fact]
        public void ContentV2CardsUploadAddPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentV2CardsUploadAddPostRequest? contentV2CardsUploadAddPostRequest = null;
            //var response = instance.ContentV2CardsUploadAddPost(contentV2CardsUploadAddPostRequest);
            //Assert.IsType<ResponseCardCreate>(response);
        }

        /// <summary>
        /// Test ContentV2CardsUploadPost
        /// </summary>
        [Fact]
        public void ContentV2CardsUploadPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<ContentV2CardsUploadPostRequestInner>? contentV2CardsUploadPostRequestInner = null;
            //var response = instance.ContentV2CardsUploadPost(contentV2CardsUploadPostRequestInner);
            //Assert.IsType<ResponseCardCreate>(response);
        }

        /// <summary>
        /// Test ContentV2DirectoryColorsGet
        /// </summary>
        [Fact]
        public void ContentV2DirectoryColorsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? locale = null;
            //var response = instance.ContentV2DirectoryColorsGet(locale);
            //Assert.IsType<ContentV2DirectoryColorsGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV2DirectoryCountriesGet
        /// </summary>
        [Fact]
        public void ContentV2DirectoryCountriesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? locale = null;
            //var response = instance.ContentV2DirectoryCountriesGet(locale);
            //Assert.IsType<ContentV2DirectoryCountriesGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV2DirectoryKindsGet
        /// </summary>
        [Fact]
        public void ContentV2DirectoryKindsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? locale = null;
            //var response = instance.ContentV2DirectoryKindsGet(locale);
            //Assert.IsType<ContentV2DirectoryKindsGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV2DirectorySeasonsGet
        /// </summary>
        [Fact]
        public void ContentV2DirectorySeasonsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? locale = null;
            //var response = instance.ContentV2DirectorySeasonsGet(locale);
            //Assert.IsType<ContentV2DirectorySeasonsGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV2DirectoryTnvedGet
        /// </summary>
        [Fact]
        public void ContentV2DirectoryTnvedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int subjectID = null;
            //int? search = null;
            //string? locale = null;
            //var response = instance.ContentV2DirectoryTnvedGet(subjectID, search, locale);
            //Assert.IsType<ContentV2DirectoryTnvedGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV2DirectoryVatGet
        /// </summary>
        [Fact]
        public void ContentV2DirectoryVatGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string locale = null;
            //var response = instance.ContentV2DirectoryVatGet(locale);
            //Assert.IsType<ContentV2DirectoryVatGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV2GetCardsListPost
        /// </summary>
        [Fact]
        public void ContentV2GetCardsListPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentV2GetCardsListPostRequest contentV2GetCardsListPostRequest = null;
            //string? locale = null;
            //var response = instance.ContentV2GetCardsListPost(contentV2GetCardsListPostRequest, locale);
            //Assert.IsType<ContentV2GetCardsListPost200Response>(response);
        }

        /// <summary>
        /// Test ContentV2GetCardsTrashPost
        /// </summary>
        [Fact]
        public void ContentV2GetCardsTrashPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentV2GetCardsTrashPostRequest contentV2GetCardsTrashPostRequest = null;
            //string? locale = null;
            //var response = instance.ContentV2GetCardsTrashPost(contentV2GetCardsTrashPostRequest, locale);
            //Assert.IsType<ContentV2GetCardsTrashPost200Response>(response);
        }

        /// <summary>
        /// Test ContentV2ObjectAllGet
        /// </summary>
        [Fact]
        public void ContentV2ObjectAllGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? name = null;
            //int? limit = null;
            //string? locale = null;
            //int? offset = null;
            //int? parentID = null;
            //var response = instance.ContentV2ObjectAllGet(name, limit, locale, offset, parentID);
            //Assert.IsType<ContentV2ObjectAllGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV2ObjectCharcsSubjectIdGet
        /// </summary>
        [Fact]
        public void ContentV2ObjectCharcsSubjectIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int subjectId = null;
            //string? locale = null;
            //var response = instance.ContentV2ObjectCharcsSubjectIdGet(subjectId, locale);
            //Assert.IsType<ContentV2ObjectCharcsSubjectIdGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV2ObjectParentAllGet
        /// </summary>
        [Fact]
        public void ContentV2ObjectParentAllGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? locale = null;
            //var response = instance.ContentV2ObjectParentAllGet(locale);
            //Assert.IsType<ContentV2ObjectParentAllGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV2TagIdDelete
        /// </summary>
        [Fact]
        public void ContentV2TagIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.ContentV2TagIdDelete(id);
            //Assert.IsType<ContentV2TagIdDelete200Response>(response);
        }

        /// <summary>
        /// Test ContentV2TagIdPatch
        /// </summary>
        [Fact]
        public void ContentV2TagIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //ContentV2TagIdPatchRequest contentV2TagIdPatchRequest = null;
            //var response = instance.ContentV2TagIdPatch(id, contentV2TagIdPatchRequest);
            //Assert.IsType<ContentV2TagIdPatch200Response>(response);
        }

        /// <summary>
        /// Test ContentV2TagNomenclatureLinkPost
        /// </summary>
        [Fact]
        public void ContentV2TagNomenclatureLinkPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentV2TagNomenclatureLinkPostRequest contentV2TagNomenclatureLinkPostRequest = null;
            //var response = instance.ContentV2TagNomenclatureLinkPost(contentV2TagNomenclatureLinkPostRequest);
            //Assert.IsType<ResponseContentError6>(response);
        }

        /// <summary>
        /// Test ContentV2TagPost
        /// </summary>
        [Fact]
        public void ContentV2TagPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentV2TagPostRequest contentV2TagPostRequest = null;
            //var response = instance.ContentV2TagPost(contentV2TagPostRequest);
            //Assert.IsType<ResponseContentError6>(response);
        }

        /// <summary>
        /// Test ContentV2TagsGet
        /// </summary>
        [Fact]
        public void ContentV2TagsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ContentV2TagsGet();
            //Assert.IsType<ContentV2TagsGet200Response>(response);
        }

        /// <summary>
        /// Test ContentV3MediaFilePost
        /// </summary>
        [Fact]
        public void ContentV3MediaFilePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xNmId = null;
            //int xPhotoNumber = null;
            //System.IO.Stream? uploadfile = null;
            //var response = instance.ContentV3MediaFilePost(xNmId, xPhotoNumber, uploadfile);
            //Assert.IsType<ContentV3MediaFilePost200Response>(response);
        }

        /// <summary>
        /// Test ContentV3MediaSavePost
        /// </summary>
        [Fact]
        public void ContentV3MediaSavePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentV3MediaSavePostRequest contentV3MediaSavePostRequest = null;
            //var response = instance.ContentV3MediaSavePost(contentV3MediaSavePostRequest);
            //Assert.IsType<ContentV3MediaFilePost200Response>(response);
        }
    }
}
